

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Nov 20 22:33:52 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65  0000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4550 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  004BBA                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _b
   106  004BBA  0001               	dw	1
   107                           
   108                           	psect	idataBANK1
   109  004BB6                     __pidataBANK1:
   110                           	callstack 0
   111                           
   112                           ;initializer for _e
   113  004BB6  7CEE               	dw	31982
   114  004BB8  412B               	dw	16683
   115  0000                     _LATD	set	3980
   116  0000                     _TRISC	set	3988
   117  0000                     _ADRESL	set	4035
   118  0000                     _ADRESH	set	4036
   119  0000                     _TRISD	set	3989
   120  0000                     _OSCCON	set	4051
   121  0000                     _ADCON0bits	set	4034
   122  0000                     _ADCON2bits	set	4032
   123  0000                     _ADCON0	set	4034
   124  0000                     _ADCON1bits	set	4033
   125  0000                     _TRISBbits	set	3987
   126  0000                     _TRISA	set	3986
   127  0000                     _LATD3	set	31843
   128  0000                     _LATD2	set	31842
   129  0000                     _RB5	set	31757
   130  0000                     _RB0	set	31752
   131  0000                     _RB6	set	31758
   132  0000                     _RB4	set	31756
   133  0000                     _RB2	set	31754
   134  0000                     _RC4	set	31764
   135  0000                     _RC2	set	31762
   136  0000                     _RC1	set	31761
   137  0000                     _RC0	set	31760
   138  0000                     _RB1	set	31753
   139                           
   140                           	psect	smallconst
   141  000800                     __psmallconst:
   142                           	callstack 0
   143  000800  00                 	db	0
   144  000801                     STR_4:
   145  000801  54                 	db	84	;'T'
   146  000802  79                 	db	121	;'y'
   147  000803  70                 	db	112	;'p'
   148  000804  65                 	db	101	;'e'
   149  000805  20                 	db	32
   150  000806  32                 	db	50	;'2'
   151  000807  20                 	db	32
   152  000808  66                 	db	102	;'f'
   153  000809  6F                 	db	111	;'o'
   154  00080A  72                 	db	114	;'r'
   155  00080B  20                 	db	32
   156  00080C  54                 	db	84	;'T'
   157  00080D  45                 	db	69	;'E'
   158  00080E  4D                 	db	77	;'M'
   159  00080F  50                 	db	80	;'P'
   160  000810  45                 	db	69	;'E'
   161  000811  52                 	db	82	;'R'
   162  000812  41                 	db	65	;'A'
   163  000813  20                 	db	32
   164  000814  00                 	db	0
   165  000815                     STR_3:
   166  000815  54                 	db	84	;'T'
   167  000816  79                 	db	121	;'y'
   168  000817  70                 	db	112	;'p'
   169  000818  65                 	db	101	;'e'
   170  000819  20                 	db	32
   171  00081A  31                 	db	49	;'1'
   172  00081B  20                 	db	32
   173  00081C  66                 	db	102	;'f'
   174  00081D  6F                 	db	111	;'o'
   175  00081E  72                 	db	114	;'r'
   176  00081F  20                 	db	32
   177  000820  56                 	db	86	;'V'
   178  000821  4F                 	db	79	;'O'
   179  000822  4C                 	db	76	;'L'
   180  000823  54                 	db	84	;'T'
   181  000824  41                 	db	65	;'A'
   182  000825  47                 	db	71	;'G'
   183  000826  45                 	db	69	;'E'
   184  000827  20                 	db	32
   185  000828  00                 	db	0
   186  000829  49                 	db	73	;'I'
   187  00082A  6E                 	db	110	;'n'
   188  00082B  74                 	db	116	;'t'
   189  00082C  72                 	db	114	;'r'
   190  00082D  6F                 	db	111	;'o'
   191  00082E  64                 	db	100	;'d'
   192  00082F  75                 	db	117	;'u'
   193  000830  63                 	db	99	;'c'
   194  000831  65                 	db	101	;'e'
   195  000832  20                 	db	32
   196  000833  76                 	db	118	;'v'
   197  000834  61                 	db	97	;'a'
   198  000835  6C                 	db	108	;'l'
   199  000836  6F                 	db	111	;'o'
   200  000837  72                 	db	114	;'r'
   201  000838  3A                 	db	58	;':'
   202  000839  20                 	db	32
   203  00083A  00                 	db	0
   204  00083B                     STR_5:
   205  00083B  32                 	db	50	;'2'
   206  00083C  20                 	db	32
   207  00083D  66                 	db	102	;'f'
   208  00083E  6F                 	db	111	;'o'
   209  00083F  72                 	db	114	;'r'
   210  000840  20                 	db	32
   211  000841  54                 	db	84	;'T'
   212  000842  45                 	db	69	;'E'
   213  000843  4D                 	db	77	;'M'
   214  000844  50                 	db	80	;'P'
   215  000845  45                 	db	69	;'E'
   216  000846  52                 	db	82	;'R'
   217  000847  41                 	db	65	;'A'
   218  000848  54                 	db	84	;'T'
   219  000849  55                 	db	85	;'U'
   220  00084A  00                 	db	0
   221  00084B                     STR_2:
   222  00084B  44                 	db	68	;'D'
   223  00084C  65                 	db	101	;'e'
   224  00084D  20                 	db	32
   225  00084E  4C                 	db	76	;'L'
   226  00084F  75                 	db	117	;'u'
   227  000850  6E                 	db	110	;'n'
   228  000851  61                 	db	97	;'a'
   229  000852  20                 	db	32
   230  000853  50                 	db	80	;'P'
   231  000854  6F                 	db	111	;'o'
   232  000855  6E                 	db	110	;'n'
   233  000856  63                 	db	99	;'c'
   234  000857  65                 	db	101	;'e'
   235  000858  00                 	db	0
   236  000859                     STR_1:
   237  000859  4A                 	db	74	;'J'
   238  00085A  75                 	db	117	;'u'
   239  00085B  61                 	db	97	;'a'
   240  00085C  6E                 	db	110	;'n'
   241  00085D  20                 	db	32
   242  00085E  44                 	db	68	;'D'
   243  00085F  65                 	db	101	;'e'
   244  000860  20                 	db	32
   245  000861  44                 	db	68	;'D'
   246  000862  69                 	db	105	;'i'
   247  000863  6F                 	db	111	;'o'
   248  000864  73                 	db	115	;'s'
   249  000865  00                 	db	0
   250  000866                     STR_6:
   251  000866  25                 	db	37
   252  000867  30                 	db	48	;'0'
   253  000868  2E                 	db	46
   254  000869  33                 	db	51	;'3'
   255  00086A  66                 	db	102	;'f'
   256  00086B  20                 	db	32
   257  00086C  56                 	db	86	;'V'
   258  00086D  6F                 	db	111	;'o'
   259  00086E  6C                 	db	108	;'l'
   260  00086F  74                 	db	116	;'t'
   261  000870  73                 	db	115	;'s'
   262  000871  00                 	db	0
   263  000872  25                 	db	37
   264  000873  30                 	db	48	;'0'
   265  000874  2E                 	db	46
   266  000875  33                 	db	51	;'3'
   267  000876  66                 	db	102	;'f'
   268  000877  00                 	db	0
   269  000878                     STR_8:
   270  000878  25                 	db	37
   271  000879  64                 	db	100	;'d'
   272  00087A  20                 	db	32
   273  00087B  B0                 	db	-80
   274  00087C  00                 	db	0
   275  00087D                     STR_12:
   276  00087D  49                 	db	73	;'I'
   277  00087E  4E                 	db	78	;'N'
   278  00087F  46                 	db	70	;'F'
   279  000880  00                 	db	0
   280  000881                     STR_16:
   281  000881  4E                 	db	78	;'N'
   282  000882  41                 	db	65	;'A'
   283  000883  4E                 	db	78	;'N'
   284  000884  00                 	db	0
   285  000885                     STR_13:
   286  000885  69                 	db	105	;'i'
   287  000886  6E                 	db	110	;'n'
   288  000887  66                 	db	102	;'f'
   289  000888  00                 	db	0
   290  000889                     STR_17:
   291  000889  6E                 	db	110	;'n'
   292  00088A  61                 	db	97	;'a'
   293  00088B  6E                 	db	110	;'n'
   294  00088C  00                 	db	0
   295  00088D                     STR_20:
   296  00088D  6C                 	db	108	;'l'
   297  00088E  66                 	db	102	;'f'
   298  00088F  00                 	db	0
   299  000890  25                 	db	37
   300  000891  64                 	db	100	;'d'
   301  000892  00                 	db	0
   302  000893  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           ; #config settings
   305                           
   306                           	psect	cinit
   307  004790                     __pcinit:
   308                           	callstack 0
   309  004790                     start_initialization:
   310                           	callstack 0
   311  004790                     __initialization:
   312                           	callstack 0
   313                           
   314                           ; Initialize objects allocated to BANK1 (4 bytes)
   315                           ; load TBLPTR registers with __pidataBANK1
   316  004790  0EB6               	movlw	low __pidataBANK1
   317  004792  6EF6               	movwf	tblptrl,c
   318  004794  0E4B               	movlw	high __pidataBANK1
   319  004796  6EF7               	movwf	tblptrh,c
   320  004798  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   321  00479A  6EF8               	movwf	tblptru,c
   322  00479C  EE01  F06A         	lfsr	0,__pdataBANK1
   323  0047A0  EE10 F004          	lfsr	1,4
   324  0047A4                     copy_data0:
   325  0047A4  0009               	tblrd		*+
   326  0047A6  CFF5 FFEE          	movff	tablat,postinc0
   327  0047AA  50E5               	movf	postdec1,w,c
   328  0047AC  50E1               	movf	fsr1l,w,c
   329  0047AE  E1FA               	bnz	copy_data0
   330                           
   331                           ; Initialize objects allocated to BANK0 (2 bytes)
   332                           ; load TBLPTR registers with __pidataBANK0
   333  0047B0  0EBA               	movlw	low __pidataBANK0
   334  0047B2  6EF6               	movwf	tblptrl,c
   335  0047B4  0E4B               	movlw	high __pidataBANK0
   336  0047B6  6EF7               	movwf	tblptrh,c
   337  0047B8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   338  0047BA  6EF8               	movwf	tblptru,c
   339  0047BC  0009               	tblrd		*+	;fetch initializer
   340  0047BE  CFF5 F0FB          	movff	tablat,__pdataBANK0
   341  0047C2  0009               	tblrd		*+	;fetch initializer
   342  0047C4  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   343                           
   344                           ; Clear objects allocated to BANK1 (106 bytes)
   345  0047C8  EE01  F000         	lfsr	0,__pbssBANK1
   346  0047CC  0E6A               	movlw	106
   347  0047CE                     clear_0:
   348  0047CE  6AEE               	clrf	postinc0,c
   349  0047D0  06E8               	decf	wreg,f,c
   350  0047D2  E1FD               	bnz	clear_0
   351                           
   352                           ; Clear objects allocated to BANK0 (12 bytes)
   353  0047D4  EE00  F0EF         	lfsr	0,__pbssBANK0
   354  0047D8  0E0C               	movlw	12
   355  0047DA                     clear_1:
   356  0047DA  6AEE               	clrf	postinc0,c
   357  0047DC  06E8               	decf	wreg,f,c
   358  0047DE  E1FD               	bnz	clear_1
   359  0047E0                     end_of_initialization:
   360                           	callstack 0
   361  0047E0                     __end_of__initialization:
   362                           	callstack 0
   363  0047E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   364  0047E2  6EF8               	movwf	tblptru,c
   365  0047E4  0100               	movlb	0
   366  0047E6  EF5D  F013         	goto	_main	;jump to C main() function
   367                           
   368                           	psect	bssBANK0
   369  0000EF                     __pbssBANK0:
   370                           	callstack 0
   371  0000EF                     _prec:
   372                           	callstack 0
   373  0000EF                     	ds	2
   374  0000F1                     _flags:
   375                           	callstack 0
   376  0000F1                     	ds	2
   377  0000F3                     _a:
   378                           	callstack 0
   379  0000F3                     	ds	2
   380  0000F5                     _ADC:
   381                           	callstack 0
   382  0000F5                     	ds	2
   383  0000F7                     _d:
   384                           	callstack 0
   385  0000F7                     	ds	2
   386  0000F9                     _c:
   387                           	callstack 0
   388  0000F9                     	ds	2
   389                           
   390                           	psect	dataBANK0
   391  0000FB                     __pdataBANK0:
   392                           	callstack 0
   393  0000FB                     _b:
   394                           	callstack 0
   395  0000FB                     	ds	2
   396                           
   397                           	psect	bssBANK1
   398  000100                     __pbssBANK1:
   399                           	callstack 0
   400  000100                     floorf@F524:
   401                           	callstack 0
   402  000100                     	ds	4
   403  000104                     ___fpclassifyf@F463:
   404                           	callstack 0
   405  000104                     	ds	4
   406  000108                     _volt:
   407                           	callstack 0
   408  000108                     	ds	4
   409  00010C                     _temp:
   410                           	callstack 0
   411  00010C                     	ds	4
   412  000110                     _nout:
   413                           	callstack 0
   414  000110                     	ds	2
   415  000112                     _width:
   416                           	callstack 0
   417  000112                     	ds	2
   418  000114                     _temp2:
   419                           	callstack 0
   420  000114                     	ds	2
   421  000116                     _f:
   422                           	callstack 0
   423  000116                     	ds	2
   424  000118                     _duty_cicle:
   425                           	callstack 0
   426  000118                     	ds	2
   427  00011A                     _dbuf:
   428                           	callstack 0
   429  00011A                     	ds	80
   430                           
   431                           	psect	dataBANK1
   432  00016A                     __pdataBANK1:
   433                           	callstack 0
   434  00016A                     _e:
   435                           	callstack 0
   436  00016A                     	ds	4
   437                           
   438                           	psect	cstackBANK0
   439  000060                     __pcstackBANK0:
   440                           	callstack 0
   441  000060                     ?_efgtoa:
   442                           	callstack 0
   443  000060                     efgtoa@fp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x0
   447  000060                     	ds	2
   448  000062                     efgtoa@f:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x2
   452  000062                     	ds	4
   453  000066                     efgtoa@c:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x6
   457  000066                     	ds	1
   458  000067                     efgtoa@ou:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x7
   462  000067                     	ds	4
   463  00006B                     _efgtoa$928:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xB
   467  00006B                     	ds	2
   468  00006D                     _efgtoa$929:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xD
   472  00006D                     	ds	2
   473  00006F                     _efgtoa$933:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xF
   477  00006F                     	ds	2
   478  000071                     _efgtoa$937:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x11
   482  000071                     	ds	2
   483  000073                     _efgtoa$938:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x13
   487  000073                     	ds	2
   488  000075                     _efgtoa$939:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x15
   492  000075                     	ds	2
   493  000077                     efgtoa@t:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x17
   497  000077                     	ds	2
   498  000079                     efgtoa@pp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x19
   502  000079                     	ds	2
   503  00007B                     efgtoa@m:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x1B
   507  00007B                     	ds	2
   508  00007D                     efgtoa@ne:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x1D
   512  00007D                     	ds	2
   513  00007F                     efgtoa@d:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x1F
   517  00007F                     	ds	2
   518  000081                     efgtoa@sign:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x21
   522  000081                     	ds	2
   523  000083                     efgtoa@p:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x23
   527  000083                     	ds	2
   528  000085                     efgtoa@nmode:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x25
   532  000085                     	ds	1
   533  000086                     efgtoa@w:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x26
   537  000086                     	ds	2
   538  000088                     efgtoa@mode:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x28
   542  000088                     	ds	1
   543  000089                     efgtoa@h:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x29
   547  000089                     	ds	4
   548  00008D                     efgtoa@l:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x2D
   552  00008D                     	ds	4
   553  000091                     efgtoa@i:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x31
   557  000091                     	ds	2
   558  000093                     efgtoa@g:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x33
   562  000093                     	ds	4
   563  000097                     efgtoa@e:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x37
   567  000097                     	ds	2
   568  000099                     efgtoa@n:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x39
   572  000099                     	ds	2
   573  00009B                     efgtoa@u:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x3B
   577  00009B                     	ds	4
   578  00009F                     ?_vfpfcnvrt:
   579                           	callstack 0
   580  00009F                     vfpfcnvrt@fp:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x3F
   584  00009F                     	ds	2
   585  0000A1                     vfpfcnvrt@fmt:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x41
   589  0000A1                     	ds	2
   590  0000A3                     vfpfcnvrt@ap:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x43
   594  0000A3                     	ds	2
   595  0000A5                     ??_vfpfcnvrt:
   596                           
   597                           ; 1 bytes @ 0x45
   598  0000A5                     	ds	4
   599  0000A9                     vfpfcnvrt@ll:
   600                           	callstack 0
   601                           
   602                           ; 8 bytes @ 0x49
   603  0000A9                     	ds	8
   604  0000B1                     vfpfcnvrt@done:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x51
   608  0000B1                     	ds	2
   609  0000B3                     _vfpfcnvrt$953:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x53
   613  0000B3                     	ds	2
   614  0000B5                     _vfpfcnvrt$958:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x55
   618  0000B5                     	ds	2
   619  0000B7                     vfpfcnvrt@f:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x57
   623  0000B7                     	ds	4
   624  0000BB                     vfpfcnvrt@ct:
   625                           	callstack 0
   626                           
   627                           ; 3 bytes @ 0x5B
   628  0000BB                     	ds	3
   629  0000BE                     vfpfcnvrt@c:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x5E
   633  0000BE                     	ds	1
   634  0000BF                     ?_vfprintf:
   635                           	callstack 0
   636  0000BF                     vfprintf@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x5F
   640  0000BF                     	ds	2
   641  0000C1                     vfprintf@fmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x61
   645  0000C1                     	ds	2
   646  0000C3                     vfprintf@ap:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x63
   650  0000C3                     	ds	2
   651  0000C5                     vfprintf@cfmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x65
   655  0000C5                     	ds	2
   656  0000C7                     ?_sprintf:
   657                           	callstack 0
   658  0000C7                     sprintf@s:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x67
   662  0000C7                     	ds	2
   663  0000C9                     sprintf@fmt:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x69
   667  0000C9                     	ds	8
   668  0000D1                     sprintf@ap:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x71
   672  0000D1                     	ds	2
   673  0000D3                     sprintf@f:
   674                           	callstack 0
   675                           
   676                           ; 6 bytes @ 0x73
   677  0000D3                     	ds	6
   678  0000D9                     ??_main:
   679                           
   680                           ; 1 bytes @ 0x79
   681  0000D9                     	ds	2
   682  0000DB                     main@Total_distance:
   683                           	callstack 0
   684                           
   685                           ; 20 bytes @ 0x7B
   686  0000DB                     	ds	20
   687                           
   688                           	psect	cstackCOMRAM
   689  000001                     __pcstackCOMRAM:
   690                           	callstack 0
   691  000001                     ??_Secuence3:
   692  000001                     ??_Secuence1:
   693  000001                     ?_strlen:
   694                           	callstack 0
   695  000001                     ?___fpclassifyf:
   696                           	callstack 0
   697  000001                     ?_isupper:
   698                           	callstack 0
   699  000001                     ?_isdigit:
   700                           	callstack 0
   701  000001                     ?_strncmp:
   702                           	callstack 0
   703  000001                     ?_isspace:
   704                           	callstack 0
   705  000001                     ?___wmul:
   706                           	callstack 0
   707  000001                     ?___awdiv:
   708                           	callstack 0
   709  000001                     ?___awmod:
   710                           	callstack 0
   711  000001                     ?___flneg:
   712                           	callstack 0
   713  000001                     ?___xxtofl:
   714                           	callstack 0
   715  000001                     ?___aodiv:
   716                           	callstack 0
   717  000001                     ?___aomod:
   718                           	callstack 0
   719  000001                     MSdelay@val:
   720                           	callstack 0
   721  000001                     ___wmul@multiplier:
   722                           	callstack 0
   723  000001                     ___awdiv@dividend:
   724                           	callstack 0
   725  000001                     ___awmod@dividend:
   726                           	callstack 0
   727  000001                     isdigit@c:
   728                           	callstack 0
   729  000001                     isspace@c:
   730                           	callstack 0
   731  000001                     isupper@c:
   732                           	callstack 0
   733  000001                     fputc@c:
   734                           	callstack 0
   735  000001                     strcpy@dest:
   736                           	callstack 0
   737  000001                     strlen@s:
   738                           	callstack 0
   739  000001                     strncmp@_l:
   740                           	callstack 0
   741  000001                     ___fleq@ff1:
   742                           	callstack 0
   743  000001                     ___flneg@f1:
   744                           	callstack 0
   745  000001                     ___xxtofl@val:
   746                           	callstack 0
   747  000001                     ___fpclassifyf@x:
   748                           	callstack 0
   749  000001                     ___aodiv@dividend:
   750                           	callstack 0
   751  000001                     ___aomod@dividend:
   752                           	callstack 0
   753                           
   754                           ; 8 bytes @ 0x0
   755  000001                     	ds	2
   756  000003                     ??_isupper:
   757  000003                     ??_isdigit:
   758  000003                     ??_isspace:
   759  000003                     MSdelay@i:
   760                           	callstack 0
   761  000003                     ___wmul@multiplicand:
   762                           	callstack 0
   763  000003                     ___awdiv@divisor:
   764                           	callstack 0
   765  000003                     ___awmod@divisor:
   766                           	callstack 0
   767  000003                     fputc@fp:
   768                           	callstack 0
   769  000003                     strcpy@src:
   770                           	callstack 0
   771  000003                     strlen@a:
   772                           	callstack 0
   773  000003                     strncmp@_r:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x2
   777  000003                     	ds	2
   778  000005                     ??_fputc:
   779  000005                     ??___fpclassifyf:
   780  000005                     ??_strcpy:
   781  000005                     ??___xxtofl:
   782  000005                     ___awdiv@counter:
   783                           	callstack 0
   784  000005                     ___awmod@counter:
   785                           	callstack 0
   786  000005                     MSdelay@j:
   787                           	callstack 0
   788  000005                     ___wmul@product:
   789                           	callstack 0
   790  000005                     strncmp@n:
   791                           	callstack 0
   792  000005                     ___fleq@ff2:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x4
   796  000005                     	ds	1
   797  000006                     ___awdiv@sign:
   798                           	callstack 0
   799  000006                     ___awmod@sign:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x5
   803  000006                     	ds	1
   804  000007                     ??_LCD_Command:
   805  000007                     ??_strncmp:
   806  000007                     ??_LCD_Char:
   807  000007                     ?_tolower:
   808                           	callstack 0
   809  000007                     _isspace$1025:
   810                           	callstack 0
   811  000007                     ___awdiv@quotient:
   812                           	callstack 0
   813  000007                     strcpy@s:
   814                           	callstack 0
   815  000007                     tolower@c:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x6
   819  000007                     	ds	1
   820  000008                     ?_atoi:
   821                           	callstack 0
   822  000008                     LCD_Command@cmd:
   823                           	callstack 0
   824  000008                     LCD_Char@dat:
   825                           	callstack 0
   826  000008                     atoi@s:
   827                           	callstack 0
   828  000008                     strncmp@l:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x7
   832  000008                     	ds	1
   833  000009                     ??_Secuence2:
   834  000009                     ??_Secuence4:
   835  000009                     ??_tolower:
   836  000009                     ??___fleq:
   837  000009                     ___xxtofl@sign:
   838                           	callstack 0
   839  000009                     LCD_String@msg:
   840                           	callstack 0
   841  000009                     ___fpclassifyf@e:
   842                           	callstack 0
   843  000009                     strcpy@d:
   844                           	callstack 0
   845  000009                     ___aodiv@divisor:
   846                           	callstack 0
   847  000009                     ___aomod@divisor:
   848                           	callstack 0
   849                           
   850                           ; 8 bytes @ 0x8
   851  000009                     	ds	1
   852  00000A                     ??_atoi:
   853  00000A                     ___xxtofl@exp:
   854                           	callstack 0
   855  00000A                     fputs@s:
   856                           	callstack 0
   857  00000A                     strncmp@r:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x9
   861  00000A                     	ds	1
   862  00000B                     LCD_String_xy@pos:
   863                           	callstack 0
   864  00000B                     ___xxtofl@arg:
   865                           	callstack 0
   866  00000B                     ___fpclassifyf@u:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xA
   870  00000B                     	ds	1
   871  00000C                     LCD_String_xy@msg:
   872                           	callstack 0
   873  00000C                     fputs@fp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xB
   877  00000C                     	ds	1
   878  00000D                     _tolower$1089:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xC
   882  00000D                     	ds	1
   883  00000E                     LCD_String_xy@row:
   884                           	callstack 0
   885  00000E                     fputs@c:
   886                           	callstack 0
   887  00000E                     atoi@neg:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0xD
   891  00000E                     	ds	1
   892  00000F                     ?___flmul:
   893                           	callstack 0
   894  00000F                     LCD_String_xy@location:
   895                           	callstack 0
   896  00000F                     fputs@i:
   897                           	callstack 0
   898  00000F                     ___flmul@b:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0xE
   902  00000F                     	ds	1
   903  000010                     _atoi$994:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0xF
   907  000010                     	ds	1
   908  000011                     ?_pad:
   909                           	callstack 0
   910  000011                     ___aodiv@counter:
   911                           	callstack 0
   912  000011                     ___aomod@counter:
   913                           	callstack 0
   914  000011                     pad@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x10
   918  000011                     	ds	1
   919  000012                     ___aodiv@sign:
   920                           	callstack 0
   921  000012                     ___aomod@sign:
   922                           	callstack 0
   923  000012                     _atoi$996:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x11
   927  000012                     	ds	1
   928  000013                     ?_abs:
   929                           	callstack 0
   930  000013                     pad@buf:
   931                           	callstack 0
   932  000013                     abs@a:
   933                           	callstack 0
   934  000013                     ___flmul@a:
   935                           	callstack 0
   936  000013                     ___aodiv@quotient:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x12
   940  000013                     	ds	1
   941  000014                     _atoi$995:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x13
   945  000014                     	ds	1
   946  000015                     ??_abs:
   947  000015                     pad@p:
   948                           	callstack 0
   949  000015                     atoi@n:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x14
   953  000015                     	ds	2
   954  000017                     ??___flmul:
   955  000017                     ??_pad:
   956                           
   957                           ; 1 bytes @ 0x16
   958  000017                     	ds	1
   959  000018                     pad@i:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x17
   963  000018                     	ds	2
   964  00001A                     pad@w:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x19
   968  00001A                     	ds	1
   969  00001B                     ___flmul@sign:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x1A
   973  00001B                     	ds	1
   974  00001C                     ?_dtoa:
   975                           	callstack 0
   976  00001C                     dtoa@fp:
   977                           	callstack 0
   978  00001C                     ___flmul@grs:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x1B
   982  00001C                     	ds	2
   983  00001E                     dtoa@d:
   984                           	callstack 0
   985                           
   986                           ; 8 bytes @ 0x1D
   987  00001E                     	ds	2
   988  000020                     ___flmul@aexp:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x1F
   992  000020                     	ds	1
   993  000021                     ___flmul@bexp:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x20
   997  000021                     	ds	1
   998  000022                     ___flmul@prod:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x21
  1002  000022                     	ds	4
  1003  000026                     ??_dtoa:
  1004  000026                     ___flmul@temp:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x25
  1008  000026                     	ds	2
  1009  000028                     ?___fldiv:
  1010                           	callstack 0
  1011  000028                     ___flge@ff1:
  1012                           	callstack 0
  1013  000028                     ___fldiv@b:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x27
  1017  000028                     	ds	4
  1018  00002C                     ___flge@ff2:
  1019                           	callstack 0
  1020  00002C                     ___fldiv@a:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x2B
  1024  00002C                     	ds	2
  1025  00002E                     _dtoa$904:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x2D
  1029  00002E                     	ds	2
  1030  000030                     ??___fldiv:
  1031  000030                     ??___flge:
  1032  000030                     dtoa@p:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x2F
  1036  000030                     	ds	2
  1037  000032                     dtoa@w:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x31
  1041  000032                     	ds	2
  1042  000034                     dtoa@s:
  1043                           	callstack 0
  1044  000034                     ___fldiv@rem:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x33
  1048  000034                     	ds	2
  1049  000036                     dtoa@n:
  1050                           	callstack 0
  1051                           
  1052                           ; 8 bytes @ 0x35
  1053  000036                     	ds	2
  1054  000038                     ___fldiv@sign:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x37
  1058  000038                     	ds	1
  1059  000039                     ___fldiv@new_exp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x38
  1063  000039                     	ds	2
  1064  00003B                     ___fldiv@grs:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x3A
  1068  00003B                     	ds	3
  1069  00003E                     dtoa@i:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x3D
  1073  00003E                     	ds	1
  1074  00003F                     ___fldiv@bexp:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x3E
  1078  00003F                     	ds	1
  1079  000040                     ___fldiv@aexp:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x3F
  1083  000040                     	ds	1
  1084  000041                     ?___fladd:
  1085                           	callstack 0
  1086  000041                     ?_floorf:
  1087                           	callstack 0
  1088  000041                     ___fladd@b:
  1089                           	callstack 0
  1090  000041                     floorf@x:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x40
  1094  000041                     	ds	4
  1095  000045                     ??_floorf:
  1096  000045                     ___fladd@a:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x44
  1100  000045                     	ds	4
  1101  000049                     ??___fladd:
  1102                           
  1103                           ; 1 bytes @ 0x48
  1104  000049                     	ds	2
  1105  00004B                     floorf@m:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x4A
  1109  00004B                     	ds	2
  1110  00004D                     ___fladd@signs:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x4C
  1114  00004D                     	ds	1
  1115  00004E                     ___fladd@aexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x4D
  1119  00004E                     	ds	1
  1120  00004F                     ___fladd@bexp:
  1121                           	callstack 0
  1122  00004F                     floorf@e:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x4E
  1126  00004F                     	ds	1
  1127  000050                     ___fladd@grs:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x4F
  1131  000050                     	ds	1
  1132  000051                     ?___flsub:
  1133                           	callstack 0
  1134  000051                     ?___fltol:
  1135                           	callstack 0
  1136  000051                     ___fltol@f1:
  1137                           	callstack 0
  1138  000051                     ___flsub@b:
  1139                           	callstack 0
  1140  000051                     floorf@u:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x50
  1144  000051                     	ds	4
  1145  000055                     ??___fltol:
  1146  000055                     ___flsub@a:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x54
  1150  000055                     	ds	4
  1151  000059                     ___fltol@sign1:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x58
  1155  000059                     	ds	1
  1156  00005A                     ___fltol@exp1:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x59
  1160  00005A                     	ds	1
  1161  00005B                     ??_efgtoa:
  1162                           
  1163                           ; 1 bytes @ 0x5A
  1164  00005B                     	ds	5
  1165  000060                     
  1166                           ; 1 bytes @ 0x5F
  1167 ;;
  1168 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1169 ;;
  1170 ;; *************** function _main *****************
  1171 ;; Defined at:
  1172 ;;		line 22 in file "distance_finding.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  Total_distan   40    0        float [10]
  1177 ;;  Total_distan   20  123[BANK0 ] int [10]
  1178 ;;  Distance        2    0        int 
  1179 ;;  Time            2    0        int 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1191 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1192 ;;      Totals:         0      24       0       0       0       0       0       0       0
  1193 ;;Total ram usage:       24 bytes
  1194 ;; Hardware stack levels required when called:    8
  1195 ;; This function calls:
  1196 ;;		_LCD_Clear
  1197 ;;		_LCD_Init
  1198 ;;		_LCD_String_xy
  1199 ;;		_MSdelay
  1200 ;;		_Secuence1
  1201 ;;		_Secuence2
  1202 ;;		_Secuence3
  1203 ;;		_Secuence4
  1204 ;;		___fladd
  1205 ;;		___fldiv
  1206 ;;		___flmul
  1207 ;;		___fltol
  1208 ;;		___xxtofl
  1209 ;;		_sprintf
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text0
  1216  0026BA                     __ptext0:
  1217                           	callstack 0
  1218  0026BA                     _main:
  1219                           	callstack 23
  1220  0026BA                     
  1221                           ;distance_finding.c: 24:     int Distance;;distance_finding.c: 25:     int Time;;distanc
      +                          e_finding.c: 26:     int Total_distance[10];;distance_finding.c: 27:     float Total_dis
      +                          tance2[10];;distance_finding.c: 29:     TRISA = 1;
  1222  0026BA  0E01               	movlw	1
  1223  0026BC  6E92               	movwf	146,c	;volatile
  1224  0026BE                     
  1225                           ;distance_finding.c: 30:     TRISBbits.RB6 = 0;
  1226  0026BE  9C93               	bcf	147,6,c	;volatile
  1227                           
  1228                           ;distance_finding.c: 31:     ADCON1bits.PCFG = 0;
  1229  0026C0  0EF0               	movlw	-16
  1230  0026C2  16C1               	andwf	193,f,c	;volatile
  1231                           
  1232                           ;distance_finding.c: 32:     ADCON1bits.VCFG = 0;
  1233  0026C4  0ECF               	movlw	-49
  1234  0026C6  16C1               	andwf	193,f,c	;volatile
  1235                           
  1236                           ;distance_finding.c: 33:     ADCON0 = 0;
  1237  0026C8  0E00               	movlw	0
  1238  0026CA  6EC2               	movwf	194,c	;volatile
  1239                           
  1240                           ;distance_finding.c: 34:     ADCON2bits.ACQT = 3;
  1241  0026CC  50C0               	movf	192,w,c	;volatile
  1242  0026CE  0BC7               	andlw	-57
  1243  0026D0  0918               	iorlw	24
  1244  0026D2  6EC0               	movwf	192,c	;volatile
  1245                           
  1246                           ;distance_finding.c: 35:     ADCON2bits.ADCS = 5;
  1247  0026D4  50C0               	movf	192,w,c	;volatile
  1248  0026D6  0BF8               	andlw	-8
  1249  0026D8  0905               	iorlw	5
  1250  0026DA  6EC0               	movwf	192,c	;volatile
  1251  0026DC                     
  1252                           ;distance_finding.c: 36:     ADCON2bits.ADFM = 1;
  1253  0026DC  8EC0               	bsf	192,7,c	;volatile
  1254  0026DE                     
  1255                           ;distance_finding.c: 37:     ADCON0bits.ADON = 1;
  1256  0026DE  80C2               	bsf	194,0,c	;volatile
  1257                           
  1258                           ;distance_finding.c: 39:     OSCCON=0x72;
  1259  0026E0  0E72               	movlw	114
  1260  0026E2  6ED3               	movwf	211,c	;volatile
  1261                           
  1262                           ;distance_finding.c: 41:     TRISD = 0;
  1263  0026E4  0E00               	movlw	0
  1264  0026E6  6E95               	movwf	149,c	;volatile
  1265  0026E8                     
  1266                           ;distance_finding.c: 43:     LCD_Init();
  1267  0026E8  ECAC  F025         	call	_LCD_Init	;wreg free
  1268  0026EC                     
  1269                           ;distance_finding.c: 44:     LCD_String_xy(1,0,"Juan De Dios");
  1270  0026EC  0E00               	movlw	0
  1271  0026EE  6E0B               	movwf	LCD_String_xy@pos^0,c
  1272  0026F0  0E59               	movlw	low STR_1
  1273  0026F2  6E0C               	movwf	LCD_String_xy@msg^0,c
  1274  0026F4  0E08               	movlw	high STR_1
  1275  0026F6  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1276  0026F8  0E01               	movlw	1
  1277  0026FA  EC1D  F025         	call	_LCD_String_xy
  1278  0026FE                     
  1279                           ;distance_finding.c: 45:     LCD_String_xy(2,0,"De Luna Ponce");
  1280  0026FE  0E00               	movlw	0
  1281  002700  6E0B               	movwf	LCD_String_xy@pos^0,c
  1282  002702  0E4B               	movlw	low STR_2
  1283  002704  6E0C               	movwf	LCD_String_xy@msg^0,c
  1284  002706  0E08               	movlw	high STR_2
  1285  002708  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1286  00270A  0E02               	movlw	2
  1287  00270C  EC1D  F025         	call	_LCD_String_xy
  1288  002710                     
  1289                           ;distance_finding.c: 46:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1290  002710  0E1A               	movlw	26
  1291  002712  0100               	movlb	0	; () banked
  1292  002714  6FDA               	movwf	(??_main+1)& (0+255),b
  1293  002716  0E5E               	movlw	94
  1294  002718  6FD9               	movwf	??_main& (0+255),b
  1295  00271A  0E6E               	movlw	110
  1296  00271C                     u6937:
  1297  00271C  2EE8               	decfsz	wreg,f,c
  1298  00271E  D7FE               	bra	u6937
  1299  002720  2FD9               	decfsz	??_main& (0+255),f,b
  1300  002722  D7FC               	bra	u6937
  1301  002724  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1302  002726  D7FA               	bra	u6937
  1303  002728  F000               	nop	
  1304  00272A                     
  1305                           ;distance_finding.c: 47:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1306  00272A  0E1A               	movlw	26
  1307  00272C  0100               	movlb	0	; () banked
  1308  00272E  6FDA               	movwf	(??_main+1)& (0+255),b
  1309  002730  0E5E               	movlw	94
  1310  002732  6FD9               	movwf	??_main& (0+255),b
  1311  002734  0E6E               	movlw	110
  1312  002736                     u6947:
  1313  002736  2EE8               	decfsz	wreg,f,c
  1314  002738  D7FE               	bra	u6947
  1315  00273A  2FD9               	decfsz	??_main& (0+255),f,b
  1316  00273C  D7FC               	bra	u6947
  1317  00273E  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1318  002740  D7FA               	bra	u6947
  1319  002742  F000               	nop	
  1320  002744                     
  1321                           ;distance_finding.c: 48:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1322  002744  0E1A               	movlw	26
  1323  002746  0100               	movlb	0	; () banked
  1324  002748  6FDA               	movwf	(??_main+1)& (0+255),b
  1325  00274A  0E5E               	movlw	94
  1326  00274C  6FD9               	movwf	??_main& (0+255),b
  1327  00274E  0E6E               	movlw	110
  1328  002750                     u6957:
  1329  002750  2EE8               	decfsz	wreg,f,c
  1330  002752  D7FE               	bra	u6957
  1331  002754  2FD9               	decfsz	??_main& (0+255),f,b
  1332  002756  D7FC               	bra	u6957
  1333  002758  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1334  00275A  D7FA               	bra	u6957
  1335  00275C  F000               	nop	
  1336  00275E  EFC5  F013         	goto	l5392
  1337  002762                     l5388:
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;distance_finding.c: 53:         LCD_String_xy(1,0,"Type 1 for VOLTAGE ");
  1341  002762  0E00               	movlw	0
  1342  002764  6E0B               	movwf	LCD_String_xy@pos^0,c
  1343  002766  0E15               	movlw	low STR_3
  1344  002768  6E0C               	movwf	LCD_String_xy@msg^0,c
  1345  00276A  0E08               	movlw	high STR_3
  1346  00276C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1347  00276E  0E01               	movlw	1
  1348  002770  EC1D  F025         	call	_LCD_String_xy
  1349                           
  1350                           ;distance_finding.c: 54:         LCD_String_xy(2,0,"Type 2 for TEMPERA ");
  1351  002774  0E00               	movlw	0
  1352  002776  6E0B               	movwf	LCD_String_xy@pos^0,c
  1353  002778  0E01               	movlw	low STR_4
  1354  00277A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1355  00277C  0E08               	movlw	high STR_4
  1356  00277E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1357  002780  0E02               	movlw	2
  1358  002782  EC1D  F025         	call	_LCD_String_xy
  1359  002786                     
  1360                           ;distance_finding.c: 55:         Secuence3();
  1361  002786  EC8F  F017         	call	_Secuence3	;wreg free
  1362  00278A                     l5392:
  1363                           
  1364                           ;distance_finding.c: 52:         while(a<=0){
  1365  00278A  0100               	movlb	0	; () banked
  1366  00278C  BFF4               	btfsc	(_a+1)& (0+255),7,b
  1367  00278E  EFD1  F013         	goto	u6871
  1368  002792  51F4               	movf	(_a+1)& (0+255),w,b
  1369  002794  E108               	bnz	u6870
  1370  002796  05F3               	decf	_a& (0+255),w,b
  1371  002798  A0D8               	btfss	status,0,c
  1372  00279A  EFD1  F013         	goto	u6871
  1373  00279E  EFD3  F013         	goto	u6870
  1374  0027A2                     u6871:
  1375  0027A2  EFB1  F013         	goto	l5388
  1376  0027A6                     u6870:
  1377  0027A6                     
  1378                           ; BSR set to: 0
  1379                           ;distance_finding.c: 57:         LCD_Clear();
  1380  0027A6  ECD7  F025         	call	_LCD_Clear	;wreg free
  1381  0027AA                     
  1382                           ;distance_finding.c: 58:         ADCON0bits.GO_DONE = 1;
  1383  0027AA  82C2               	bsf	194,1,c	;volatile
  1384                           
  1385                           ;distance_finding.c: 59:         while(ADCON0bits.GO_DONE == 1){
  1386  0027AC  EFD2  F014         	goto	l93
  1387  0027B0                     l96:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;distance_finding.c: 61:         ADCON0bits.GO_DONE = 1;
  1391  0027B0  82C2               	bsf	194,1,c	;volatile
  1392  0027B2                     l97:
  1393  0027B2  B2C2               	btfsc	194,1,c	;volatile
  1394  0027B4  EFDE  F013         	goto	u6881
  1395  0027B8  EFE0  F013         	goto	u6880
  1396  0027BC                     u6881:
  1397  0027BC  EFD9  F013         	goto	l97
  1398  0027C0                     u6880:
  1399  0027C0                     
  1400                           ;distance_finding.c: 63:         ADC = ADRESH;
  1401  0027C0  CFC4 F0F5          	movff	4036,_ADC	;volatile
  1402  0027C4  0100               	movlb	0	; () banked
  1403  0027C6  6BF6               	clrf	(_ADC+1)& (0+255),b
  1404  0027C8                     
  1405                           ; BSR set to: 0
  1406                           ;distance_finding.c: 64:         ADC=ADC<<8;
  1407  0027C8  51F5               	movf	_ADC& (0+255),w,b
  1408  0027CA  6FF6               	movwf	(_ADC+1)& (0+255),b
  1409  0027CC  6BF5               	clrf	_ADC& (0+255),b
  1410  0027CE                     
  1411                           ; BSR set to: 0
  1412                           ;distance_finding.c: 65:         ADC=ADC+ADRESL;
  1413  0027CE  50C3               	movf	195,w,c	;volatile
  1414  0027D0  25F5               	addwf	_ADC& (0+255),w,b
  1415  0027D2  6FF5               	movwf	_ADC& (0+255),b
  1416  0027D4  0E00               	movlw	0
  1417  0027D6  21F6               	addwfc	(_ADC+1)& (0+255),w,b
  1418  0027D8  6FF6               	movwf	(_ADC+1)& (0+255),b
  1419  0027DA                     
  1420                           ; BSR set to: 0
  1421                           ;distance_finding.c: 66:         volt=ADC*5.0/1024.0;
  1422  0027DA  0E00               	movlw	0
  1423  0027DC  6E13               	movwf	___flmul@a^0,c
  1424  0027DE  0E00               	movlw	0
  1425  0027E0  6E14               	movwf	(___flmul@a+1)^0,c
  1426  0027E2  0EA0               	movlw	160
  1427  0027E4  6E15               	movwf	(___flmul@a+2)^0,c
  1428  0027E6  0E40               	movlw	64
  1429  0027E8  6E16               	movwf	(___flmul@a+3)^0,c
  1430  0027EA  C0F5  F001         	movff	_ADC,___xxtofl@val
  1431  0027EE  C0F6  F002         	movff	_ADC+1,___xxtofl@val+1
  1432  0027F2  0E00               	movlw	0
  1433  0027F4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1434  0027F6  0EFF               	movlw	-1
  1435  0027F8  6E03               	movwf	(___xxtofl@val+2)^0,c
  1436  0027FA  6E04               	movwf	(___xxtofl@val+3)^0,c
  1437  0027FC  0E01               	movlw	1
  1438  0027FE  EC28  F01C         	call	___xxtofl
  1439  002802  C001  F00F         	movff	?___xxtofl,___flmul@b
  1440  002806  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1441  00280A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1442  00280E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1443  002812  EC7B  F00F         	call	___flmul	;wreg free
  1444  002816  C00F  F028         	movff	?___flmul,___fldiv@b
  1445  00281A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1446  00281E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1447  002822  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1448  002826  0E00               	movlw	0
  1449  002828  6E2C               	movwf	___fldiv@a^0,c
  1450  00282A  0E00               	movlw	0
  1451  00282C  6E2D               	movwf	(___fldiv@a+1)^0,c
  1452  00282E  0E80               	movlw	128
  1453  002830  6E2E               	movwf	(___fldiv@a+2)^0,c
  1454  002832  0E44               	movlw	68
  1455  002834  6E2F               	movwf	(___fldiv@a+3)^0,c
  1456  002836  EC90  F011         	call	___fldiv	;wreg free
  1457  00283A  C028  F108         	movff	?___fldiv,_volt
  1458  00283E  C029  F109         	movff	?___fldiv+1,_volt+1
  1459  002842  C02A  F10A         	movff	?___fldiv+2,_volt+2
  1460  002846  C02B  F10B         	movff	?___fldiv+3,_volt+3
  1461  00284A                     
  1462                           ;distance_finding.c: 69:         LCD_String_xy(2,0,"2 for TEMPERATU");
  1463  00284A  0E00               	movlw	0
  1464  00284C  6E0B               	movwf	LCD_String_xy@pos^0,c
  1465  00284E  0E3B               	movlw	low STR_5
  1466  002850  6E0C               	movwf	LCD_String_xy@msg^0,c
  1467  002852  0E08               	movlw	high STR_5
  1468  002854  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1469  002856  0E02               	movlw	2
  1470  002858  EC1D  F025         	call	_LCD_String_xy
  1471  00285C                     
  1472                           ;distance_finding.c: 70:         sprintf(Total_distance,"%0.3f Volts",volt);
  1473  00285C  0EDB               	movlw	low main@Total_distance
  1474  00285E  0100               	movlb	0	; () banked
  1475  002860  6FC7               	movwf	sprintf@s& (0+255),b
  1476  002862  0E00               	movlw	high main@Total_distance
  1477  002864  6FC8               	movwf	(sprintf@s+1)& (0+255),b
  1478  002866  0E66               	movlw	low STR_6
  1479  002868  6FC9               	movwf	sprintf@fmt& (0+255),b
  1480  00286A  0E08               	movlw	high STR_6
  1481  00286C  6FCA               	movwf	(sprintf@fmt+1)& (0+255),b
  1482  00286E  C108  F0CB         	movff	_volt,?_sprintf+4
  1483  002872  C109  F0CC         	movff	_volt+1,?_sprintf+5
  1484  002876  C10A  F0CD         	movff	_volt+2,?_sprintf+6
  1485  00287A  C10B  F0CE         	movff	_volt+3,?_sprintf+7
  1486  00287E  ECF5  F023         	call	_sprintf	;wreg free
  1487  002882                     
  1488                           ;distance_finding.c: 71:         LCD_String_xy(1,0,Total_distance);
  1489  002882  0E00               	movlw	0
  1490  002884  6E0B               	movwf	LCD_String_xy@pos^0,c
  1491  002886  0EDB               	movlw	low main@Total_distance
  1492  002888  6E0C               	movwf	LCD_String_xy@msg^0,c
  1493  00288A  0E00               	movlw	high main@Total_distance
  1494  00288C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1495  00288E  0E01               	movlw	1
  1496  002890  EC1D  F025         	call	_LCD_String_xy
  1497  002894                     
  1498                           ;distance_finding.c: 74:         Secuence3();
  1499  002894  EC8F  F017         	call	_Secuence3	;wreg free
  1500  002898                     l5412:
  1501                           
  1502                           ;distance_finding.c: 60:         while(a==1){
  1503  002898  0100               	movlb	0	; () banked
  1504  00289A  05F3               	decf	_a& (0+255),w,b
  1505  00289C  11F4               	iorwf	(_a+1)& (0+255),w,b
  1506  00289E  B4D8               	btfsc	status,2,c
  1507  0028A0  EF54  F014         	goto	u6891
  1508  0028A4  EF56  F014         	goto	u6890
  1509  0028A8                     u6891:
  1510  0028A8  EFD8  F013         	goto	l96
  1511  0028AC                     u6890:
  1512  0028AC                     
  1513                           ; BSR set to: 0
  1514                           ;distance_finding.c: 76:         LCD_Clear();
  1515  0028AC  ECD7  F025         	call	_LCD_Clear	;wreg free
  1516                           
  1517                           ;distance_finding.c: 77:         while(a==2){
  1518  0028B0  EFC7  F014         	goto	l5426
  1519  0028B4                     l102:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;distance_finding.c: 78:         ADCON0bits.GO_DONE = 1;
  1523  0028B4  82C2               	bsf	194,1,c	;volatile
  1524  0028B6                     l103:
  1525  0028B6  B2C2               	btfsc	194,1,c	;volatile
  1526  0028B8  EF60  F014         	goto	u6901
  1527  0028BC  EF62  F014         	goto	u6900
  1528  0028C0                     u6901:
  1529  0028C0  EF5B  F014         	goto	l103
  1530  0028C4                     u6900:
  1531  0028C4                     
  1532                           ;distance_finding.c: 80:         temp = ADRESL;
  1533  0028C4  50C3               	movf	195,w,c	;volatile
  1534  0028C6  6E01               	movwf	___xxtofl@val^0,c
  1535  0028C8  6A02               	clrf	(___xxtofl@val+1)^0,c
  1536  0028CA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1537  0028CC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1538  0028CE  0E00               	movlw	0
  1539  0028D0  EC28  F01C         	call	___xxtofl
  1540  0028D4  C001  F10C         	movff	?___xxtofl,_temp
  1541  0028D8  C002  F10D         	movff	?___xxtofl+1,_temp+1
  1542  0028DC  C003  F10E         	movff	?___xxtofl+2,_temp+2
  1543  0028E0  C004  F10F         	movff	?___xxtofl+3,_temp+3
  1544                           
  1545                           ;distance_finding.c: 81:         temp2 =((temp / 2)+3);
  1546  0028E4  0E00               	movlw	0
  1547  0028E6  6E45               	movwf	___fladd@a^0,c
  1548  0028E8  0E00               	movlw	0
  1549  0028EA  6E46               	movwf	(___fladd@a+1)^0,c
  1550  0028EC  0E40               	movlw	64
  1551  0028EE  6E47               	movwf	(___fladd@a+2)^0,c
  1552  0028F0  0E40               	movlw	64
  1553  0028F2  6E48               	movwf	(___fladd@a+3)^0,c
  1554  0028F4  0E00               	movlw	0
  1555  0028F6  6E2C               	movwf	___fldiv@a^0,c
  1556  0028F8  0E00               	movlw	0
  1557  0028FA  6E2D               	movwf	(___fldiv@a+1)^0,c
  1558  0028FC  0E00               	movlw	0
  1559  0028FE  6E2E               	movwf	(___fldiv@a+2)^0,c
  1560  002900  0E40               	movlw	64
  1561  002902  6E2F               	movwf	(___fldiv@a+3)^0,c
  1562  002904  C10C  F028         	movff	_temp,___fldiv@b
  1563  002908  C10D  F029         	movff	_temp+1,___fldiv@b+1
  1564  00290C  C10E  F02A         	movff	_temp+2,___fldiv@b+2
  1565  002910  C10F  F02B         	movff	_temp+3,___fldiv@b+3
  1566  002914  EC90  F011         	call	___fldiv	;wreg free
  1567  002918  C028  F041         	movff	?___fldiv,___fladd@b
  1568  00291C  C029  F042         	movff	?___fldiv+1,___fladd@b+1
  1569  002920  C02A  F043         	movff	?___fldiv+2,___fladd@b+2
  1570  002924  C02B  F044         	movff	?___fldiv+3,___fladd@b+3
  1571  002928  EC1B  F00D         	call	___fladd	;wreg free
  1572  00292C  C041  F051         	movff	?___fladd,___fltol@f1
  1573  002930  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  1574  002934  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  1575  002938  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  1576  00293C  EC40  F01F         	call	___fltol	;wreg free
  1577  002940  C051  F114         	movff	?___fltol,_temp2
  1578  002944  C052  F115         	movff	?___fltol+1,_temp2+1
  1579  002948                     
  1580                           ;distance_finding.c: 82:         LCD_String_xy(2,0,"1 for VOLTAGE ");
  1581  002948  0E00               	movlw	0
  1582  00294A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1583  00294C  0E1A               	movlw	low (STR_3+5)
  1584  00294E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1585  002950  0E08               	movlw	high (STR_3+5)
  1586  002952  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1587  002954  0E02               	movlw	2
  1588  002956  EC1D  F025         	call	_LCD_String_xy
  1589  00295A                     
  1590                           ;distance_finding.c: 83:         sprintf(Total_distance,"%d °",temp2);
  1591  00295A  0EDB               	movlw	low main@Total_distance
  1592  00295C  0100               	movlb	0	; () banked
  1593  00295E  6FC7               	movwf	sprintf@s& (0+255),b
  1594  002960  0E00               	movlw	high main@Total_distance
  1595  002962  6FC8               	movwf	(sprintf@s+1)& (0+255),b
  1596  002964  0E78               	movlw	low STR_8
  1597  002966  6FC9               	movwf	sprintf@fmt& (0+255),b
  1598  002968  0E08               	movlw	high STR_8
  1599  00296A  6FCA               	movwf	(sprintf@fmt+1)& (0+255),b
  1600  00296C  C114  F0CB         	movff	_temp2,?_sprintf+4
  1601  002970  C115  F0CC         	movff	_temp2+1,?_sprintf+5
  1602  002974  ECF5  F023         	call	_sprintf	;wreg free
  1603  002978                     
  1604                           ;distance_finding.c: 84:         LCD_String_xy(1,0,Total_distance);
  1605  002978  0E00               	movlw	0
  1606  00297A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1607  00297C  0EDB               	movlw	low main@Total_distance
  1608  00297E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1609  002980  0E00               	movlw	high main@Total_distance
  1610  002982  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1611  002984  0E01               	movlw	1
  1612  002986  EC1D  F025         	call	_LCD_String_xy
  1613  00298A                     
  1614                           ;distance_finding.c: 86:         Secuence3();
  1615  00298A  EC8F  F017         	call	_Secuence3	;wreg free
  1616  00298E                     l5426:
  1617                           
  1618                           ;distance_finding.c: 77:         while(a==2){
  1619  00298E  0E02               	movlw	2
  1620  002990  0100               	movlb	0	; () banked
  1621  002992  19F3               	xorwf	_a& (0+255),w,b
  1622  002994  11F4               	iorwf	(_a+1)& (0+255),w,b
  1623  002996  B4D8               	btfsc	status,2,c
  1624  002998  EFD0  F014         	goto	u6911
  1625  00299C  EFD2  F014         	goto	u6910
  1626  0029A0                     u6911:
  1627  0029A0  EF5A  F014         	goto	l102
  1628  0029A4                     u6910:
  1629  0029A4                     l93:
  1630                           
  1631                           ;distance_finding.c: 59:         while(ADCON0bits.GO_DONE == 1){
  1632  0029A4  B2C2               	btfsc	194,1,c	;volatile
  1633  0029A6  EFD7  F014         	goto	u6921
  1634  0029AA  EFD9  F014         	goto	u6920
  1635  0029AE                     u6921:
  1636  0029AE  EF4C  F014         	goto	l5412
  1637  0029B2                     u6920:
  1638  0029B2  EFC5  F013         	goto	l5392
  1639  0029B6  EF00  F000         	goto	start
  1640  0029BA                     __end_of_main:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _sprintf *****************
  1644 ;; Defined at:
  1645 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  s               2  103[BANK0 ] PTR unsigned char 
  1648 ;;		 -> main@Total_distance(20), 
  1649 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  1650 ;;		 -> STR_11(6), STR_10(3), STR_8(5), STR_6(12), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  f               6  115[BANK0 ] struct _IO_FILE
  1653 ;;  ap              2  113[BANK0 ] PTR void [1]
  1654 ;;		 -> ?_sprintf(2), 
  1655 ;;  ret             2    0        int 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2  103[BANK0 ] int 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1665 ;;      Params:         0       8       0       0       0       0       0       0       0
  1666 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1668 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1669 ;;Total ram usage:       18 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    7
  1672 ;; This function calls:
  1673 ;;		_vfprintf
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text1
  1680  0047EA                     __ptext1:
  1681                           	callstack 0
  1682  0047EA                     _sprintf:
  1683                           	callstack 23
  1684  0047EA  0ECB               	movlw	low (?_sprintf+4)
  1685  0047EC  0100               	movlb	0	; () banked
  1686  0047EE  6FD1               	movwf	sprintf@ap& (0+255),b
  1687  0047F0  0E00               	movlw	high (?_sprintf+4)
  1688  0047F2  6FD2               	movwf	(sprintf@ap+1)& (0+255),b
  1689  0047F4  C0C7  F0D3         	movff	sprintf@s,sprintf@f
  1690  0047F8  C0C8  F0D4         	movff	sprintf@s+1,sprintf@f+1
  1691  0047FC                     
  1692                           ; BSR set to: 0
  1693  0047FC  0E00               	movlw	0
  1694  0047FE  6FD6               	movwf	(sprintf@f+3)& (0+255),b
  1695  004800  0E00               	movlw	0
  1696  004802  6FD5               	movwf	(sprintf@f+2)& (0+255),b
  1697  004804                     
  1698                           ; BSR set to: 0
  1699  004804  0E00               	movlw	0
  1700  004806  6FD8               	movwf	(sprintf@f+5)& (0+255),b
  1701  004808  0E00               	movlw	0
  1702  00480A  6FD7               	movwf	(sprintf@f+4)& (0+255),b
  1703  00480C                     
  1704                           ; BSR set to: 0
  1705  00480C  0ED3               	movlw	low sprintf@f
  1706  00480E  6FBF               	movwf	vfprintf@fp& (0+255),b
  1707  004810  0E00               	movlw	high sprintf@f
  1708  004812  6FC0               	movwf	(vfprintf@fp+1)& (0+255),b
  1709  004814  C0C9  F0C1         	movff	sprintf@fmt,vfprintf@fmt
  1710  004818  C0CA  F0C2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1711  00481C  0ED1               	movlw	low sprintf@ap
  1712  00481E  6FC3               	movwf	vfprintf@ap& (0+255),b
  1713  004820  0E00               	movlw	high sprintf@ap
  1714  004822  6FC4               	movwf	(vfprintf@ap+1)& (0+255),b
  1715  004824  EC06  F023         	call	_vfprintf	;wreg free
  1716  004828  0100               	movlb	0	; () banked
  1717  00482A  51D5               	movf	(sprintf@f+2)& (0+255),w,b
  1718  00482C  25C7               	addwf	sprintf@s& (0+255),w,b
  1719  00482E  6ED9               	movwf	fsr2l,c
  1720  004830  51D6               	movf	(sprintf@f+3)& (0+255),w,b
  1721  004832  21C8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1722  004834  6EDA               	movwf	fsr2h,c
  1723  004836  0E00               	movlw	0
  1724  004838  6EDF               	movwf	indf2,c
  1725  00483A                     
  1726                           ; BSR set to: 0
  1727  00483A  0012               	return		;funcret
  1728  00483C                     __end_of_sprintf:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function _vfprintf *****************
  1732 ;; Defined at:
  1733 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  fp              2   95[BANK0 ] PTR struct _IO_FILE
  1736 ;;		 -> sprintf@f(6), 
  1737 ;;  fmt             2   97[BANK0 ] PTR const unsigned char 
  1738 ;;		 -> STR_11(6), STR_10(3), STR_8(5), STR_6(12), 
  1739 ;;  ap              2   99[BANK0 ] PTR PTR void 
  1740 ;;		 -> sprintf@ap(2), 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  cfmt            2  101[BANK0 ] PTR unsigned char 
  1743 ;;		 -> STR_11(6), STR_10(3), STR_8(5), STR_6(12), 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2   95[BANK0 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1753 ;;      Params:         0       6       0       0       0       0       0       0       0
  1754 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1756 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1757 ;;Total ram usage:        8 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    6
  1760 ;; This function calls:
  1761 ;;		_vfpfcnvrt
  1762 ;; This function is called by:
  1763 ;;		_sprintf
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text2
  1768  00460C                     __ptext2:
  1769                           	callstack 0
  1770  00460C                     _vfprintf:
  1771                           	callstack 23
  1772  00460C                     
  1773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1774  00460C  C0C1  F0C5         	movff	vfprintf@fmt,vfprintf@cfmt
  1775  004610  C0C2  F0C6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1776  004614                     
  1777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1778  004614  0E00               	movlw	0
  1779  004616  0101               	movlb	1	; () banked
  1780  004618  6F11               	movwf	(_nout+1)& (0+255),b
  1781  00461A  0E00               	movlw	0
  1782  00461C  6F10               	movwf	_nout& (0+255),b
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1785  00461E  EF28  F023         	goto	l4910
  1786  004622                     l4908:
  1787                           
  1788                           ; BSR set to: 1
  1789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1790  004622  C0BF  F09F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1791  004626  C0C0  F0A0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1792  00462A  0EC5               	movlw	low vfprintf@cfmt
  1793  00462C  0100               	movlb	0	; () banked
  1794  00462E  6FA1               	movwf	vfpfcnvrt@fmt& (0+255),b
  1795  004630  0E00               	movlw	high vfprintf@cfmt
  1796  004632  6FA2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1797  004634  C0C3  F0A3         	movff	vfprintf@ap,vfpfcnvrt@ap
  1798  004638  C0C4  F0A4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1799  00463C  EC22  F00A         	call	_vfpfcnvrt	;wreg free
  1800  004640  0100               	movlb	0	; () banked
  1801  004642  519F               	movf	?_vfpfcnvrt& (0+255),w,b
  1802  004644  0101               	movlb	1	; () banked
  1803  004646  2710               	addwf	_nout& (0+255),f,b
  1804  004648  0100               	movlb	0	; () banked
  1805  00464A  51A0               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1806  00464C  0101               	movlb	1	; () banked
  1807  00464E  2311               	addwfc	(_nout+1)& (0+255),f,b
  1808  004650                     l4910:
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1812  004650  C0C5  FFF6         	movff	vfprintf@cfmt,tblptrl
  1813  004654  C0C6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1814  004658                     	if	0	;tblptru may be non-zero
  1815  004658                     	endif
  1816  004658                     	if	0	;tblptru may be non-zero
  1817  004658                     	endif
  1818  004658  0008               	tblrd		*
  1819  00465A  50F5               	movf	tablat,w,c
  1820  00465C  0900               	iorlw	0
  1821  00465E  A4D8               	btfss	status,2,c
  1822  004660  EF34  F023         	goto	u6101
  1823  004664  EF36  F023         	goto	u6100
  1824  004668                     u6101:
  1825  004668  EF11  F023         	goto	l4908
  1826  00466C                     u6100:
  1827  00466C                     
  1828                           ; BSR set to: 1
  1829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1830  00466C  C110  F0BF         	movff	_nout,?_vfprintf
  1831  004670  C111  F0C0         	movff	_nout+1,?_vfprintf+1
  1832  004674                     
  1833                           ; BSR set to: 1
  1834  004674  0012               	return		;funcret
  1835  004676                     __end_of_vfprintf:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _vfpfcnvrt *****************
  1839 ;; Defined at:
  1840 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  fp              2   63[BANK0 ] PTR struct _IO_FILE
  1843 ;;		 -> sprintf@f(6), 
  1844 ;;  fmt             2   65[BANK0 ] PTR PTR unsigned char 
  1845 ;;		 -> vfprintf@cfmt(2), 
  1846 ;;  ap              2   67[BANK0 ] PTR PTR void 
  1847 ;;		 -> sprintf@ap(2), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  ll              8   73[BANK0 ] long long 
  1850 ;;  llu             8    0        unsigned long long 
  1851 ;;  f               4   87[BANK0 ] unsigned long long 
  1852 ;;  ct              3   91[BANK0 ] unsigned char [3]
  1853 ;;  vp              3    0        PTR void 
  1854 ;;  cp              3    0        PTR unsigned char 
  1855 ;;  done            2   81[BANK0 ] int 
  1856 ;;  i               2    0        int 
  1857 ;;  c               1   94[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   63[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1867 ;;      Params:         0       6       0       0       0       0       0       0       0
  1868 ;;      Locals:         0      22       0       0       0       0       0       0       0
  1869 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1870 ;;      Totals:         0      32       0       0       0       0       0       0       0
  1871 ;;Total ram usage:       32 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    5
  1874 ;; This function calls:
  1875 ;;		_atoi
  1876 ;;		_dtoa
  1877 ;;		_efgtoa
  1878 ;;		_fputc
  1879 ;;		_isdigit
  1880 ;;		_isupper
  1881 ;;		_strncmp
  1882 ;;		_tolower
  1883 ;; This function is called by:
  1884 ;;		_vfprintf
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text3
  1889  001444                     __ptext3:
  1890                           	callstack 0
  1891  001444                     _vfpfcnvrt:
  1892                           	callstack 23
  1893  001444                     
  1894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1895  001444  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1896  001448  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1897  00144C  CFDE FFF6          	movff	postinc2,tblptrl
  1898  001450  CFDD FFF7          	movff	postdec2,tblptrh
  1899  001454                     	if	0	;tblptru may be non-zero
  1900  001454                     	endif
  1901  001454                     	if	0	;tblptru may be non-zero
  1902  001454                     	endif
  1903  001454  0008               	tblrd		*
  1904  001456  50F5               	movf	tablat,w,c
  1905  001458  0A25               	xorlw	37
  1906  00145A  A4D8               	btfss	status,2,c
  1907  00145C  EF32  F00A         	goto	u5891
  1908  001460  EF34  F00A         	goto	u5890
  1909  001464                     u5891:
  1910  001464  EFFF  F00C         	goto	l4880
  1911  001468                     u5890:
  1912  001468                     
  1913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1914  001468  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1915  00146C  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1916  001470  2ADE               	incf	postinc2,f,c
  1917  001472  0E00               	movlw	0
  1918  001474  22DD               	addwfc	postdec2,f,c
  1919  001476                     
  1920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1921  001476  0E00               	movlw	0
  1922  001478  0101               	movlb	1	; () banked
  1923  00147A  6F13               	movwf	(_width+1)& (0+255),b
  1924  00147C  0E00               	movlw	0
  1925  00147E  6F12               	movwf	_width& (0+255),b
  1926  001480  C112  F0F1         	movff	_width,_flags
  1927  001484  C113  F0F2         	movff	_width+1,_flags+1
  1928  001488                     
  1929                           ; BSR set to: 1
  1930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1931  001488  0100               	movlb	0	; () banked
  1932  00148A  69EF               	setf	_prec& (0+255),b
  1933  00148C  69F0               	setf	(_prec+1)& (0+255),b
  1934  00148E                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1937  00148E  0E00               	movlw	0
  1938  001490  6FB2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1939  001492  0E00               	movlw	0
  1940  001494  6FB1               	movwf	vfpfcnvrt@done& (0+255),b
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1943  001496  EF93  F00A         	goto	l4792
  1944  00149A                     l4766:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1948  00149A  81F1               	bsf	_flags& (0+255),0,b
  1949  00149C                     l4768:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1953  00149C  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1954  0014A0  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  0014A4  2ADE               	incf	postinc2,f,c
  1956  0014A6  0E00               	movlw	0
  1957  0014A8  22DD               	addwfc	postdec2,f,c
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1960  0014AA  EF93  F00A         	goto	l4792
  1961  0014AE                     l4770:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1965  0014AE  83F1               	bsf	_flags& (0+255),1,b
  1966  0014B0  EF4E  F00A         	goto	l4768
  1967  0014B4                     l4774:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1971  0014B4  85F1               	bsf	_flags& (0+255),2,b
  1972  0014B6  EF4E  F00A         	goto	l4768
  1973  0014BA                     l4778:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1977  0014BA  87F1               	bsf	_flags& (0+255),3,b
  1978  0014BC  EF4E  F00A         	goto	l4768
  1979  0014C0                     l4782:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1983  0014C0  89F1               	bsf	_flags& (0+255),4,b
  1984  0014C2  EF4E  F00A         	goto	l4768
  1985  0014C6                     l4786:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1989  0014C6  0E00               	movlw	0
  1990  0014C8  6FB2               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1991  0014CA  0E01               	movlw	1
  1992  0014CC  6FB1               	movwf	vfpfcnvrt@done& (0+255),b
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1995  0014CE  EF93  F00A         	goto	l4792
  1996  0014D2                     l4790:
  1997                           
  1998                           ; BSR set to: 0
  1999  0014D2  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2000  0014D6  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2001  0014DA  CFDE FFF6          	movff	postinc2,tblptrl
  2002  0014DE  CFDD FFF7          	movff	postdec2,tblptrh
  2003  0014E2                     	if	0	;tblptru may be non-zero
  2004  0014E2                     	endif
  2005  0014E2                     	if	0	;tblptru may be non-zero
  2006  0014E2                     	endif
  2007  0014E2  0008               	tblrd		*
  2008  0014E4  50F5               	movf	tablat,w,c
  2009  0014E6  6FA5               	movwf	??_vfpfcnvrt& (0+255),b
  2010  0014E8  6BA6               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2011                           
  2012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2013                           ; Switch size 1, requested type "simple"
  2014                           ; Number of cases is 1, Range of values is 0 to 0
  2015                           ; switch strategies available:
  2016                           ; Name         Instructions Cycles
  2017                           ; simple_byte            4     3 (average)
  2018                           ;	Chosen strategy is simple_byte
  2019  0014EA  51A6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2020  0014EC  0A00               	xorlw	0	; case 0
  2021  0014EE  B4D8               	btfsc	status,2,c
  2022  0014F0  EF7C  F00A         	goto	l5520
  2023  0014F4  EF63  F00A         	goto	l4786
  2024  0014F8                     l5520:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ; Switch size 1, requested type "simple"
  2028                           ; Number of cases is 5, Range of values is 32 to 48
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte           16     9 (average)
  2032                           ;	Chosen strategy is simple_byte
  2033  0014F8  51A5               	movf	??_vfpfcnvrt& (0+255),w,b
  2034  0014FA  0A20               	xorlw	32	; case 32
  2035  0014FC  B4D8               	btfsc	status,2,c
  2036  0014FE  EF5D  F00A         	goto	l4778
  2037  001502  0A03               	xorlw	3	; case 35
  2038  001504  B4D8               	btfsc	status,2,c
  2039  001506  EF60  F00A         	goto	l4782
  2040  00150A  0A08               	xorlw	8	; case 43
  2041  00150C  B4D8               	btfsc	status,2,c
  2042  00150E  EF5A  F00A         	goto	l4774
  2043  001512  0A06               	xorlw	6	; case 45
  2044  001514  B4D8               	btfsc	status,2,c
  2045  001516  EF4D  F00A         	goto	l4766
  2046  00151A  0A1D               	xorlw	29	; case 48
  2047  00151C  B4D8               	btfsc	status,2,c
  2048  00151E  EF57  F00A         	goto	l4770
  2049  001522  EF63  F00A         	goto	l4786
  2050  001526                     l4792:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  2054  001526  51B1               	movf	vfpfcnvrt@done& (0+255),w,b
  2055  001528  11B2               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2056  00152A  B4D8               	btfsc	status,2,c
  2057  00152C  EF9A  F00A         	goto	u5901
  2058  001530  EF9C  F00A         	goto	u5900
  2059  001534                     u5901:
  2060  001534  EF69  F00A         	goto	l4790
  2061  001538                     u5900:
  2062  001538                     
  2063                           ; BSR set to: 0
  2064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  2065  001538  A1F1               	btfss	_flags& (0+255),0,b
  2066  00153A  EFA1  F00A         	goto	u5911
  2067  00153E  EFA3  F00A         	goto	u5910
  2068  001542                     u5911:
  2069  001542  EFA4  F00A         	goto	l4796
  2070  001546                     u5910:
  2071  001546                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  2074  001546  93F1               	bcf	_flags& (0+255),1,b
  2075  001548                     l4796:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  2079  001548  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2080  00154C  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2081  001550  CFDE FFF6          	movff	postinc2,tblptrl
  2082  001554  CFDD FFF7          	movff	postdec2,tblptrh
  2083  001558                     	if	0	;tblptru may be non-zero
  2084  001558                     	endif
  2085  001558                     	if	0	;tblptru may be non-zero
  2086  001558                     	endif
  2087  001558  0008               	tblrd		*
  2088  00155A  50F5               	movf	tablat,w,c
  2089  00155C  0A2E               	xorlw	46
  2090  00155E  A4D8               	btfss	status,2,c
  2091  001560  EFB4  F00A         	goto	u5921
  2092  001564  EFB6  F00A         	goto	u5920
  2093  001568                     u5921:
  2094  001568  EF34  F00B         	goto	l4816
  2095  00156C                     u5920:
  2096  00156C                     
  2097                           ; BSR set to: 0
  2098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  2099  00156C  0E00               	movlw	0
  2100  00156E  6FF0               	movwf	(_prec+1)& (0+255),b
  2101  001570  0E00               	movlw	0
  2102  001572  6FEF               	movwf	_prec& (0+255),b
  2103  001574                     
  2104                           ; BSR set to: 0
  2105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  2106  001574  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2107  001578  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2108  00157C  2ADE               	incf	postinc2,f,c
  2109  00157E  0E00               	movlw	0
  2110  001580  22DD               	addwfc	postdec2,f,c
  2111  001582                     
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  2114  001582  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2115  001586  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2116  00158A  CFDE FFF6          	movff	postinc2,tblptrl
  2117  00158E  CFDD FFF7          	movff	postdec2,tblptrh
  2118  001592                     	if	0	;tblptru may be non-zero
  2119  001592                     	endif
  2120  001592                     	if	0	;tblptru may be non-zero
  2121  001592                     	endif
  2122  001592  0008               	tblrd		*
  2123  001594  50F5               	movf	tablat,w,c
  2124  001596  0A2A               	xorlw	42
  2125  001598  A4D8               	btfss	status,2,c
  2126  00159A  EFD1  F00A         	goto	u5931
  2127  00159E  EFD3  F00A         	goto	u5930
  2128  0015A2                     u5931:
  2129  0015A2  EFF0  F00A         	goto	l4806
  2130  0015A6                     u5930:
  2131  0015A6                     
  2132                           ; BSR set to: 0
  2133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  2134  0015A6  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2135  0015AA  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2136  0015AE  2ADE               	incf	postinc2,f,c
  2137  0015B0  0E00               	movlw	0
  2138  0015B2  22DD               	addwfc	postdec2,f,c
  2139                           
  2140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2141  0015B4  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2142  0015B8  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2143  0015BC  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2144  0015C0  0E02               	movlw	2
  2145  0015C2  26DE               	addwf	postinc2,f,c
  2146  0015C4  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2147  0015C8  0E00               	movlw	0
  2148  0015CA  22DD               	addwfc	postdec2,f,c
  2149  0015CC  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2150  0015D0  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2151  0015D4  CFDE F0EF          	movff	postinc2,_prec
  2152  0015D8  CFDD F0F0          	movff	postdec2,_prec+1
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  2155  0015DC  EF34  F00B         	goto	l4816
  2156  0015E0                     l4806:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  2160  0015E0  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2161  0015E4  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  0015E8  CFDE F008          	movff	postinc2,atoi@s
  2163  0015EC  CFDD F009          	movff	postdec2,atoi@s+1
  2164  0015F0  EC02  F01D         	call	_atoi	;wreg free
  2165  0015F4  C008  F0EF         	movff	?_atoi,_prec
  2166  0015F8  C009  F0F0         	movff	?_atoi+1,_prec+1
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2169  0015FC  EF07  F00B         	goto	l4810
  2170  001600                     l4808:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  2174  001600  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2175  001604  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2176  001608  2ADE               	incf	postinc2,f,c
  2177  00160A  0E00               	movlw	0
  2178  00160C  22DD               	addwfc	postdec2,f,c
  2179  00160E                     l4810:
  2180  00160E  0ED0               	movlw	208
  2181  001610  0100               	movlb	0	; () banked
  2182  001612  6FA5               	movwf	??_vfpfcnvrt& (0+255),b
  2183  001614  0EFF               	movlw	255
  2184  001616  6FA6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2185  001618  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  00161C  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  001620  CFDE FFF6          	movff	postinc2,tblptrl
  2188  001624  CFDD FFF7          	movff	postdec2,tblptrh
  2189  001628                     	if	0	;tblptru may be non-zero
  2190  001628                     	endif
  2191  001628                     	if	0	;tblptru may be non-zero
  2192  001628                     	endif
  2193  001628  0008               	tblrd		*
  2194  00162A  50F5               	movf	tablat,w,c
  2195  00162C  6FA7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2196  00162E  6BA8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2197  001630  51A5               	movf	??_vfpfcnvrt& (0+255),w,b
  2198  001632  27A7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2199  001634  51A6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2200  001636  23A8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2201  001638  51A8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2202  00163A  E10A               	bnz	u5940
  2203  00163C  0E0A               	movlw	10
  2204  00163E  5DA7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2205  001640  A0D8               	btfss	status,0,c
  2206  001642  EF25  F00B         	goto	u5941
  2207  001646  EF28  F00B         	goto	u5940
  2208  00164A                     u5941:
  2209  00164A  0E01               	movlw	1
  2210  00164C  EF29  F00B         	goto	u5950
  2211  001650                     u5940:
  2212  001650  0E00               	movlw	0
  2213  001652                     u5950:
  2214  001652  6FB3               	movwf	_vfpfcnvrt$953& (0+255),b
  2215  001654  6BB4               	clrf	(_vfpfcnvrt$953+1)& (0+255),b
  2216  001656                     
  2217                           ; BSR set to: 0
  2218  001656  51B3               	movf	_vfpfcnvrt$953& (0+255),w,b
  2219  001658  11B4               	iorwf	(_vfpfcnvrt$953+1)& (0+255),w,b
  2220  00165A  A4D8               	btfss	status,2,c
  2221  00165C  EF32  F00B         	goto	u5961
  2222  001660  EF34  F00B         	goto	u5960
  2223  001664                     u5961:
  2224  001664  EF00  F00B         	goto	l4808
  2225  001668                     u5960:
  2226  001668                     l4816:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  2230  001668  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2231  00166C  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2232  001670  CFDE FFF6          	movff	postinc2,tblptrl
  2233  001674  CFDD FFF7          	movff	postdec2,tblptrh
  2234  001678                     	if	0	;tblptru may be non-zero
  2235  001678                     	endif
  2236  001678                     	if	0	;tblptru may be non-zero
  2237  001678                     	endif
  2238  001678  0008               	tblrd		*
  2239  00167A  50F5               	movf	tablat,w,c
  2240  00167C  6E07               	movwf	tolower@c^0,c
  2241  00167E  6A08               	clrf	(tolower@c+1)^0,c
  2242  001680  EC3B  F023         	call	_tolower	;wreg free
  2243  001684  5007               	movf	?_tolower^0,w,c
  2244  001686  0100               	movlb	0	; () banked
  2245  001688  6FBB               	movwf	vfpfcnvrt@ct& (0+255),b
  2246  00168A                     
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  2249  00168A  51BB               	movf	vfpfcnvrt@ct& (0+255),w,b
  2250  00168C  B4D8               	btfsc	status,2,c
  2251  00168E  EF4B  F00B         	goto	u5971
  2252  001692  EF4D  F00B         	goto	u5970
  2253  001696                     u5971:
  2254  001696  EF87  F00B         	goto	l4826
  2255  00169A                     u5970:
  2256  00169A                     
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  2259  00169A  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  00169E  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  0016A2  CFDE F0A5          	movff	postinc2,??_vfpfcnvrt
  2262  0016A6  CFDD F0A6          	movff	postdec2,??_vfpfcnvrt+1
  2263  0016AA  0E01               	movlw	1
  2264  0016AC  27A5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2265  0016AE  0E00               	movlw	0
  2266  0016B0  23A6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2267  0016B2  C0A5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2268  0016B6  C0A6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2269  0016BA                     	if	0	;tblptru may be non-zero
  2270  0016BA                     	endif
  2271  0016BA                     	if	0	;tblptru may be non-zero
  2272  0016BA                     	endif
  2273  0016BA  0008               	tblrd		*
  2274  0016BC  50F5               	movf	tablat,w,c
  2275  0016BE  6E07               	movwf	tolower@c^0,c
  2276  0016C0  6A08               	clrf	(tolower@c+1)^0,c
  2277  0016C2  EC3B  F023         	call	_tolower	;wreg free
  2278  0016C6  5007               	movf	?_tolower^0,w,c
  2279  0016C8  0100               	movlb	0	; () banked
  2280  0016CA  6FBC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2281  0016CC                     
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  2284  0016CC  51BC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2285  0016CE  B4D8               	btfsc	status,2,c
  2286  0016D0  EF6C  F00B         	goto	u5981
  2287  0016D4  EF6E  F00B         	goto	u5980
  2288  0016D8                     u5981:
  2289  0016D8  EF87  F00B         	goto	l4826
  2290  0016DC                     u5980:
  2291  0016DC                     
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  2294  0016DC  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2295  0016E0  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2296  0016E4  CFDE F0A5          	movff	postinc2,??_vfpfcnvrt
  2297  0016E8  CFDD F0A6          	movff	postdec2,??_vfpfcnvrt+1
  2298  0016EC  0E02               	movlw	2
  2299  0016EE  27A5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2300  0016F0  0E00               	movlw	0
  2301  0016F2  23A6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2302  0016F4  C0A5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2303  0016F8  C0A6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2304  0016FC                     	if	0	;tblptru may be non-zero
  2305  0016FC                     	endif
  2306  0016FC                     	if	0	;tblptru may be non-zero
  2307  0016FC                     	endif
  2308  0016FC  0008               	tblrd		*
  2309  0016FE  50F5               	movf	tablat,w,c
  2310  001700  6E07               	movwf	tolower@c^0,c
  2311  001702  6A08               	clrf	(tolower@c+1)^0,c
  2312  001704  EC3B  F023         	call	_tolower	;wreg free
  2313  001708  5007               	movf	?_tolower^0,w,c
  2314  00170A  0100               	movlb	0	; () banked
  2315  00170C  6FBD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2316  00170E                     l4826:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2320  00170E  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2321  001712  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2322  001716  CFDE FFF6          	movff	postinc2,tblptrl
  2323  00171A  CFDD FFF7          	movff	postdec2,tblptrh
  2324  00171E                     	if	0	;tblptru may be non-zero
  2325  00171E                     	endif
  2326  00171E                     	if	0	;tblptru may be non-zero
  2327  00171E                     	endif
  2328  00171E  0008               	tblrd		*
  2329  001720  50F5               	movf	tablat,w,c
  2330  001722  0A64               	xorlw	100
  2331  001724  B4D8               	btfsc	status,2,c
  2332  001726  EF97  F00B         	goto	u5991
  2333  00172A  EF99  F00B         	goto	u5990
  2334  00172E                     u5991:
  2335  00172E  EFAB  F00B         	goto	l4830
  2336  001732                     u5990:
  2337  001732                     
  2338                           ; BSR set to: 0
  2339  001732  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2340  001736  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2341  00173A  CFDE FFF6          	movff	postinc2,tblptrl
  2342  00173E  CFDD FFF7          	movff	postdec2,tblptrh
  2343  001742                     	if	0	;tblptru may be non-zero
  2344  001742                     	endif
  2345  001742                     	if	0	;tblptru may be non-zero
  2346  001742                     	endif
  2347  001742  0008               	tblrd		*
  2348  001744  50F5               	movf	tablat,w,c
  2349  001746  0A69               	xorlw	105
  2350  001748  A4D8               	btfss	status,2,c
  2351  00174A  EFA9  F00B         	goto	u6001
  2352  00174E  EFAB  F00B         	goto	u6000
  2353  001752                     u6001:
  2354  001752  EFEB  F00B         	goto	l4836
  2355  001756                     u6000:
  2356  001756                     l4830:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2360  001756  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2361  00175A  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2362  00175E  2ADE               	incf	postinc2,f,c
  2363  001760  0E00               	movlw	0
  2364  001762  22DD               	addwfc	postdec2,f,c
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2367  001764  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2368  001768  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2369  00176C  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2370  001770  0E02               	movlw	2
  2371  001772  26DE               	addwf	postinc2,f,c
  2372  001774  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2373  001778  0E00               	movlw	0
  2374  00177A  22DD               	addwfc	postdec2,f,c
  2375  00177C  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2376  001780  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2377  001784  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  2378  001788  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  2379  00178C  0E00               	movlw	0
  2380  00178E  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2381  001790  0EFF               	movlw	-1
  2382  001792  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2383  001794  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2384  001796  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2385  001798  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2386  00179A  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2387  00179C  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2388  00179E                     
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2391  00179E  C09F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2392  0017A2  C0A0  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2393  0017A6  C0A9  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2394  0017AA  C0AA  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2395  0017AE  C0AB  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2396  0017B2  C0AC  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2397  0017B6  C0AD  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2398  0017BA  C0AE  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2399  0017BE  C0AF  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2400  0017C2  C0B0  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2401  0017C6  ECDD  F014         	call	_dtoa	;wreg free
  2402  0017CA  C01C  F09F         	movff	?_dtoa,?_vfpfcnvrt
  2403  0017CE  C01D  F0A0         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2404  0017D2  EF1A  F00D         	goto	l1108
  2405  0017D6                     l4836:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  2409  0017D6  0E66               	movlw	102
  2410  0017D8  19BB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2411  0017DA  A4D8               	btfss	status,2,c
  2412  0017DC  EFF2  F00B         	goto	u6011
  2413  0017E0  EFF4  F00B         	goto	u6010
  2414  0017E4                     u6011:
  2415  0017E4  EF34  F00C         	goto	l4848
  2416  0017E8                     u6010:
  2417  0017E8                     
  2418                           ; BSR set to: 0
  2419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  2420  0017E8  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421  0017EC  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422  0017F0  CFDE FFF6          	movff	postinc2,tblptrl
  2423  0017F4  CFDD FFF7          	movff	postdec2,tblptrh
  2424  0017F8                     	if	0	;tblptru may be non-zero
  2425  0017F8                     	endif
  2426  0017F8                     	if	0	;tblptru may be non-zero
  2427  0017F8                     	endif
  2428  0017F8  0008               	tblrd		*
  2429  0017FA  CFF5 F0BE          	movff	tablat,vfpfcnvrt@c
  2430  0017FE                     
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  2433  0017FE  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2434  001802  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2435  001806  2ADE               	incf	postinc2,f,c
  2436  001808  0E00               	movlw	0
  2437  00180A  22DD               	addwfc	postdec2,f,c
  2438  00180C                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2441  00180C  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2442  001810  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2443  001814  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2444  001818  0E04               	movlw	4
  2445  00181A  26DE               	addwf	postinc2,f,c
  2446  00181C  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2447  001820  0E00               	movlw	0
  2448  001822  22DD               	addwfc	postdec2,f,c
  2449  001824  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2450  001828  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2451  00182C  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f
  2452  001830  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+1
  2453  001834  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+2
  2454  001838  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+3
  2455  00183C                     l4844:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2459  00183C  C09F  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2460  001840  C0A0  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2461  001844  C0B7  F062         	movff	vfpfcnvrt@f,efgtoa@f
  2462  001848  C0B8  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2463  00184C  C0B9  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2464  001850  C0BA  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2465  001854  C0BE  F066         	movff	vfpfcnvrt@c,efgtoa@c
  2466  001858  EC4A  F004         	call	_efgtoa	;wreg free
  2467  00185C  C060  F09F         	movff	?_efgtoa,?_vfpfcnvrt
  2468  001860  C061  F0A0         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2469  001864  EF1A  F00D         	goto	l1108
  2470  001868                     l4848:
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2474  001868  0EBB               	movlw	low vfpfcnvrt@ct
  2475  00186A  6E01               	movwf	strncmp@_l^0,c
  2476  00186C  0E00               	movlw	high vfpfcnvrt@ct
  2477  00186E  6E02               	movwf	(strncmp@_l+1)^0,c
  2478  001870  0E8D               	movlw	low STR_20
  2479  001872  6E03               	movwf	strncmp@_r^0,c
  2480  001874  0E08               	movlw	high STR_20
  2481  001876  6E04               	movwf	(strncmp@_r+1)^0,c
  2482  001878  0E00               	movlw	0
  2483  00187A  6E06               	movwf	(strncmp@n+1)^0,c
  2484  00187C  0E02               	movlw	2
  2485  00187E  6E05               	movwf	strncmp@n^0,c
  2486  001880  ECC4  F020         	call	_strncmp	;wreg free
  2487  001884  5001               	movf	?_strncmp^0,w,c
  2488  001886  1002               	iorwf	(?_strncmp+1)^0,w,c
  2489  001888  A4D8               	btfss	status,2,c
  2490  00188A  EF49  F00C         	goto	u6021
  2491  00188E  EF4B  F00C         	goto	u6020
  2492  001892                     u6021:
  2493  001892  EFC7  F00C         	goto	l4864
  2494  001896                     u6020:
  2495  001896                     
  2496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2497  001896  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  00189A  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  00189E  CFDE F0A5          	movff	postinc2,??_vfpfcnvrt
  2500  0018A2  CFDD F0A6          	movff	postdec2,??_vfpfcnvrt+1
  2501  0018A6  0E01               	movlw	1
  2502  0018A8  0100               	movlb	0	; () banked
  2503  0018AA  27A5               	addwf	??_vfpfcnvrt& (0+255),f,b
  2504  0018AC  0E00               	movlw	0
  2505  0018AE  23A6               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2506  0018B0  C0A5  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2507  0018B4  C0A6  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2508  0018B8                     	if	0	;tblptru may be non-zero
  2509  0018B8                     	endif
  2510  0018B8                     	if	0	;tblptru may be non-zero
  2511  0018B8                     	endif
  2512  0018B8  0008               	tblrd		*
  2513  0018BA  CFF5 F0BE          	movff	tablat,vfpfcnvrt@c
  2514  0018BE  0EBF               	movlw	191
  2515  0018C0  6FA5               	movwf	??_vfpfcnvrt& (0+255),b
  2516  0018C2  0EFF               	movlw	255
  2517  0018C4  6FA6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2518  0018C6  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2519  0018CA  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2520  0018CE  CFDE FFF6          	movff	postinc2,tblptrl
  2521  0018D2  CFDD FFF7          	movff	postdec2,tblptrh
  2522  0018D6                     	if	0	;tblptru may be non-zero
  2523  0018D6                     	endif
  2524  0018D6                     	if	0	;tblptru may be non-zero
  2525  0018D6                     	endif
  2526  0018D6  0008               	tblrd		*
  2527  0018D8  50F5               	movf	tablat,w,c
  2528  0018DA  6FA7               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2529  0018DC  6BA8               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2530  0018DE  51A5               	movf	??_vfpfcnvrt& (0+255),w,b
  2531  0018E0  27A7               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2532  0018E2  51A6               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2533  0018E4  23A8               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2534  0018E6  51A8               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2535  0018E8  E10A               	bnz	u6030
  2536  0018EA  0E1A               	movlw	26
  2537  0018EC  5DA7               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2538  0018EE  A0D8               	btfss	status,0,c
  2539  0018F0  EF7C  F00C         	goto	u6031
  2540  0018F4  EF7F  F00C         	goto	u6030
  2541  0018F8                     u6031:
  2542  0018F8  0E01               	movlw	1
  2543  0018FA  EF80  F00C         	goto	u6040
  2544  0018FE                     u6030:
  2545  0018FE  0E00               	movlw	0
  2546  001900                     u6040:
  2547  001900  6FB5               	movwf	_vfpfcnvrt$958& (0+255),b
  2548  001902  6BB6               	clrf	(_vfpfcnvrt$958+1)& (0+255),b
  2549  001904                     
  2550                           ; BSR set to: 0
  2551  001904  51B5               	movf	_vfpfcnvrt$958& (0+255),w,b
  2552  001906  11B6               	iorwf	(_vfpfcnvrt$958+1)& (0+255),w,b
  2553  001908  B4D8               	btfsc	status,2,c
  2554  00190A  EF89  F00C         	goto	u6051
  2555  00190E  EF8B  F00C         	goto	u6050
  2556  001912                     u6051:
  2557  001912  EFA5  F00C         	goto	l4858
  2558  001916                     u6050:
  2559  001916                     
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2562  001916  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2563  00191A  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2564  00191E  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2565  001922  0E04               	movlw	4
  2566  001924  26DE               	addwf	postinc2,f,c
  2567  001926  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2568  00192A  0E00               	movlw	0
  2569  00192C  22DD               	addwfc	postdec2,f,c
  2570  00192E  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2571  001932  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2572  001936  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f
  2573  00193A  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+1
  2574  00193E  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+2
  2575  001942  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+3
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2578  001946  EFBD  F00C         	goto	l1116
  2579  00194A                     l4858:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2583  00194A  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2584  00194E  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2585  001952  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  2586  001956  0E04               	movlw	4
  2587  001958  26DE               	addwf	postinc2,f,c
  2588  00195A  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  2589  00195E  0E00               	movlw	0
  2590  001960  22DD               	addwfc	postdec2,f,c
  2591  001962  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2592  001966  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2593  00196A  CFDE F0B7          	movff	postinc2,vfpfcnvrt@f
  2594  00196E  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f+1
  2595  001972  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+2
  2596  001976  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+3
  2597  00197A                     l1116:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2601  00197A  0E02               	movlw	2
  2602  00197C  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  001980  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  001984  26DE               	addwf	postinc2,f,c
  2605  001986  0E00               	movlw	0
  2606  001988  22DD               	addwfc	postdec2,f,c
  2607  00198A  EF1E  F00C         	goto	l4844
  2608  00198E                     l4864:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2611  00198E  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2612  001992  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2613  001996  CFDE FFF6          	movff	postinc2,tblptrl
  2614  00199A  CFDD FFF7          	movff	postdec2,tblptrh
  2615  00199E                     	if	0	;tblptru may be non-zero
  2616  00199E                     	endif
  2617  00199E                     	if	0	;tblptru may be non-zero
  2618  00199E                     	endif
  2619  00199E  0008               	tblrd		*
  2620  0019A0  50F5               	movf	tablat,w,c
  2621  0019A2  0A25               	xorlw	37
  2622  0019A4  A4D8               	btfss	status,2,c
  2623  0019A6  EFD7  F00C         	goto	u6061
  2624  0019AA  EFD9  F00C         	goto	u6060
  2625  0019AE                     u6061:
  2626  0019AE  EFF1  F00C         	goto	l4874
  2627  0019B2                     u6060:
  2628  0019B2                     
  2629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2630  0019B2  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2631  0019B6  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2632  0019BA  2ADE               	incf	postinc2,f,c
  2633  0019BC  0E00               	movlw	0
  2634  0019BE  22DD               	addwfc	postdec2,f,c
  2635  0019C0                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2637  0019C0  0E00               	movlw	0
  2638  0019C2  6E02               	movwf	(fputc@c+1)^0,c
  2639  0019C4  0E25               	movlw	37
  2640  0019C6  6E01               	movwf	fputc@c^0,c
  2641  0019C8  C09F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2642  0019CC  C0A0  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2643  0019D0  EC2F  F021         	call	_fputc	;wreg free
  2644  0019D4                     l4870:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2647  0019D4  0E00               	movlw	0
  2648  0019D6  0100               	movlb	0	; () banked
  2649  0019D8  6FA0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2650  0019DA  0E01               	movlw	1
  2651  0019DC  6F9F               	movwf	?_vfpfcnvrt& (0+255),b
  2652  0019DE  EF1A  F00D         	goto	l1108
  2653  0019E2                     l4874:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2656  0019E2  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2657  0019E6  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2658  0019EA  2ADE               	incf	postinc2,f,c
  2659  0019EC  0E00               	movlw	0
  2660  0019EE  22DD               	addwfc	postdec2,f,c
  2661  0019F0                     
  2662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2663  0019F0  0E00               	movlw	0
  2664  0019F2  0100               	movlb	0	; () banked
  2665  0019F4  6FA0               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2666  0019F6  0E00               	movlw	0
  2667  0019F8  6F9F               	movwf	?_vfpfcnvrt& (0+255),b
  2668  0019FA  EF1A  F00D         	goto	l1108
  2669  0019FE                     l4880:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2672  0019FE  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  001A02  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  001A06  CFDE FFF6          	movff	postinc2,tblptrl
  2675  001A0A  CFDD FFF7          	movff	postdec2,tblptrh
  2676  001A0E                     	if	0	;tblptru may be non-zero
  2677  001A0E                     	endif
  2678  001A0E                     	if	0	;tblptru may be non-zero
  2679  001A0E                     	endif
  2680  001A0E  0008               	tblrd		*
  2681  001A10  50F5               	movf	tablat,w,c
  2682  001A12  6E01               	movwf	fputc@c^0,c
  2683  001A14  6A02               	clrf	(fputc@c+1)^0,c
  2684  001A16  C09F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2685  001A1A  C0A0  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2686  001A1E  EC2F  F021         	call	_fputc	;wreg free
  2687  001A22                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2689  001A22  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2690  001A26  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2691  001A2A  2ADE               	incf	postinc2,f,c
  2692  001A2C  0E00               	movlw	0
  2693  001A2E  22DD               	addwfc	postdec2,f,c
  2694  001A30  EFEA  F00C         	goto	l4870
  2695  001A34                     l1108:
  2696  001A34  0012               	return		;funcret
  2697  001A36                     __end_of_vfpfcnvrt:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _strncmp *****************
  2701 ;; Defined at:
  2702 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2705 ;;		 -> vfpfcnvrt@ct(3), 
  2706 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2707 ;;		 -> STR_22(3), 
  2708 ;;  n               2    4[COMRAM] unsigned int 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2711 ;;		 -> STR_22(3), 
  2712 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2713 ;;		 -> vfpfcnvrt@ct(3), 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2    0[COMRAM] int 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:         6       0       0       0       0       0       0       0       0
  2724 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2726 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:       11 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_vfpfcnvrt
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text4
  2737  004188                     __ptext4:
  2738                           	callstack 0
  2739  004188                     _strncmp:
  2740                           	callstack 27
  2741  004188  C001  F008         	movff	strncmp@_l,strncmp@l
  2742  00418C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2743  004190  C003  F00A         	movff	strncmp@_r,strncmp@r
  2744  004194  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2745  004198  0605               	decf	strncmp@n^0,f,c
  2746  00419A  A0D8               	btfss	status,0,c
  2747  00419C  0606               	decf	(strncmp@n+1)^0,f,c
  2748  00419E  2805               	incf	strncmp@n^0,w,c
  2749  0041A0  E106               	bnz	u5841
  2750  0041A2  2806               	incf	(strncmp@n+1)^0,w,c
  2751  0041A4  A4D8               	btfss	status,2,c
  2752  0041A6  EFD7  F020         	goto	u5841
  2753  0041AA  EFD9  F020         	goto	u5840
  2754  0041AE                     u5841:
  2755  0041AE  EFE6  F020         	goto	l4704
  2756  0041B2                     u5840:
  2757  0041B2  0E00               	movlw	0
  2758  0041B4  6E02               	movwf	(?_strncmp+1)^0,c
  2759  0041B6  0E00               	movlw	0
  2760  0041B8  6E01               	movwf	?_strncmp^0,c
  2761  0041BA  EF2E  F021         	goto	l1244
  2762  0041BE                     l4702:
  2763  0041BE  4A08               	infsnz	strncmp@l^0,f,c
  2764  0041C0  2A09               	incf	(strncmp@l+1)^0,f,c
  2765  0041C2  4A0A               	infsnz	strncmp@r^0,f,c
  2766  0041C4  2A0B               	incf	(strncmp@r+1)^0,f,c
  2767  0041C6  0605               	decf	strncmp@n^0,f,c
  2768  0041C8  A0D8               	btfss	status,0,c
  2769  0041CA  0606               	decf	(strncmp@n+1)^0,f,c
  2770  0041CC                     l4704:
  2771  0041CC  C008  FFD9         	movff	strncmp@l,fsr2l
  2772  0041D0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2773  0041D4  50DF               	movf	indf2,w,c
  2774  0041D6  B4D8               	btfsc	status,2,c
  2775  0041D8  EFF0  F020         	goto	u5851
  2776  0041DC  EFF2  F020         	goto	u5850
  2777  0041E0                     u5851:
  2778  0041E0  EF1D  F021         	goto	l4712
  2779  0041E4                     u5850:
  2780  0041E4  C00A  FFF6         	movff	strncmp@r,tblptrl
  2781  0041E8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2782  0041EC                     	if	0	;tblptru may be non-zero
  2783  0041EC                     	endif
  2784  0041EC                     	if	0	;tblptru may be non-zero
  2785  0041EC                     	endif
  2786  0041EC  0008               	tblrd		*
  2787  0041EE  50F5               	movf	tablat,w,c
  2788  0041F0  0900               	iorlw	0
  2789  0041F2  B4D8               	btfsc	status,2,c
  2790  0041F4  EFFE  F020         	goto	u5861
  2791  0041F8  EF00  F021         	goto	u5860
  2792  0041FC                     u5861:
  2793  0041FC  EF1D  F021         	goto	l4712
  2794  004200                     u5860:
  2795  004200  5005               	movf	strncmp@n^0,w,c
  2796  004202  1006               	iorwf	(strncmp@n+1)^0,w,c
  2797  004204  B4D8               	btfsc	status,2,c
  2798  004206  EF07  F021         	goto	u5871
  2799  00420A  EF09  F021         	goto	u5870
  2800  00420E                     u5871:
  2801  00420E  EF1D  F021         	goto	l4712
  2802  004212                     u5870:
  2803  004212  C008  FFD9         	movff	strncmp@l,fsr2l
  2804  004216  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2805  00421A  50DF               	movf	indf2,w,c
  2806  00421C  6E07               	movwf	??_strncmp^0,c
  2807  00421E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2808  004222  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2809  004226                     	if	0	;tblptru may be non-zero
  2810  004226                     	endif
  2811  004226                     	if	0	;tblptru may be non-zero
  2812  004226                     	endif
  2813  004226  0008               	tblrd		*
  2814  004228  50F5               	movf	tablat,w,c
  2815  00422A  1807               	xorwf	??_strncmp^0,w,c
  2816  00422C  B4D8               	btfsc	status,2,c
  2817  00422E  EF1B  F021         	goto	u5881
  2818  004232  EF1D  F021         	goto	u5880
  2819  004236                     u5881:
  2820  004236  EFDF  F020         	goto	l4702
  2821  00423A                     u5880:
  2822  00423A                     l4712:
  2823  00423A  C008  FFD9         	movff	strncmp@l,fsr2l
  2824  00423E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2825  004242  50DF               	movf	indf2,w,c
  2826  004244  6E07               	movwf	??_strncmp^0,c
  2827  004246  C00A  FFF6         	movff	strncmp@r,tblptrl
  2828  00424A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2829  00424E                     	if	0	;tblptru may be non-zero
  2830  00424E                     	endif
  2831  00424E                     	if	0	;tblptru may be non-zero
  2832  00424E                     	endif
  2833  00424E  0008               	tblrd		*
  2834  004250  50F5               	movf	tablat,w,c
  2835  004252  5C07               	subwf	??_strncmp^0,w,c
  2836  004254  6E01               	movwf	?_strncmp^0,c
  2837  004256  6A02               	clrf	(?_strncmp+1)^0,c
  2838  004258  A0D8               	btfss	status,0,c
  2839  00425A  0602               	decf	(?_strncmp+1)^0,f,c
  2840  00425C                     l1244:
  2841  00425C  0012               	return		;funcret
  2842  00425E                     __end_of_strncmp:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _efgtoa *****************
  2846 ;; Defined at:
  2847 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2850 ;;		 -> sprintf@f(6), 
  2851 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2852 ;;  c               1    6[BANK0 ] unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  u               4   59[BANK0 ] unsigned char 
  2855 ;;  g               4   51[BANK0 ] unsigned char 
  2856 ;;  l               4   45[BANK0 ] unsigned char 
  2857 ;;  h               4   41[BANK0 ] unsigned char 
  2858 ;;  ou              4    7[BANK0 ] unsigned char 
  2859 ;;  n               2   57[BANK0 ] int 
  2860 ;;  e               2   55[BANK0 ] int 
  2861 ;;  i               2   49[BANK0 ] int 
  2862 ;;  w               2   38[BANK0 ] int 
  2863 ;;  p               2   35[BANK0 ] int 
  2864 ;;  sign            2   33[BANK0 ] int 
  2865 ;;  d               2   31[BANK0 ] int 
  2866 ;;  ne              2   29[BANK0 ] int 
  2867 ;;  m               2   27[BANK0 ] int 
  2868 ;;  pp              2   25[BANK0 ] int 
  2869 ;;  t               2   23[BANK0 ] int 
  2870 ;;  mode            1   40[BANK0 ] unsigned char 
  2871 ;;  nmode           1   37[BANK0 ] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2    0[BANK0 ] int 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2881 ;;      Params:         0       7       0       0       0       0       0       0       0
  2882 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2883 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2884 ;;      Totals:         5      63       0       0       0       0       0       0       0
  2885 ;;Total ram usage:       68 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    4
  2888 ;; This function calls:
  2889 ;;		___awdiv
  2890 ;;		___awmod
  2891 ;;		___fladd
  2892 ;;		___fldiv
  2893 ;;		___fleq
  2894 ;;		___flge
  2895 ;;		___flmul
  2896 ;;		___flneg
  2897 ;;		___flsub
  2898 ;;		___fltol
  2899 ;;		___fpclassifyf
  2900 ;;		_floorf
  2901 ;;		_isupper
  2902 ;;		_pad
  2903 ;;		_strcpy
  2904 ;;		_tolower
  2905 ;; This function is called by:
  2906 ;;		_vfpfcnvrt
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text5
  2911  000894                     __ptext5:
  2912                           	callstack 0
  2913  000894                     _efgtoa:
  2914                           	callstack 23
  2915  000894                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2917  000894  0E00               	movlw	0
  2918  000896  0100               	movlb	0	; () banked
  2919  000898  6F82               	movwf	(efgtoa@sign+1)& (0+255),b
  2920  00089A  0E00               	movlw	0
  2921  00089C  6F81               	movwf	efgtoa@sign& (0+255),b
  2922  00089E                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2925  00089E  C062  F093         	movff	efgtoa@f,efgtoa@g
  2926  0008A2  C063  F094         	movff	efgtoa@f+1,efgtoa@g+1
  2927  0008A6  C064  F095         	movff	efgtoa@f+2,efgtoa@g+2
  2928  0008AA  C065  F096         	movff	efgtoa@f+3,efgtoa@g+3
  2929  0008AE                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2932  0008AE  BF96               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2933  0008B0  EF5E  F004         	goto	u5250
  2934  0008B4  EF5C  F004         	goto	u5251
  2935  0008B8                     u5251:
  2936  0008B8  EF74  F004         	goto	l4366
  2937  0008BC                     u5250:
  2938  0008BC                     
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2941  0008BC  0E00               	movlw	0
  2942  0008BE  6F82               	movwf	(efgtoa@sign+1)& (0+255),b
  2943  0008C0  0E01               	movlw	1
  2944  0008C2  6F81               	movwf	efgtoa@sign& (0+255),b
  2945  0008C4                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2948  0008C4  C093  F001         	movff	efgtoa@g,___flneg@f1
  2949  0008C8  C094  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2950  0008CC  C095  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2951  0008D0  C096  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2952  0008D4  EC59  F025         	call	___flneg	;wreg free
  2953  0008D8  C001  F093         	movff	?___flneg,efgtoa@g
  2954  0008DC  C002  F094         	movff	?___flneg+1,efgtoa@g+1
  2955  0008E0  C003  F095         	movff	?___flneg+2,efgtoa@g+2
  2956  0008E4  C004  F096         	movff	?___flneg+3,efgtoa@g+3
  2957  0008E8                     l4366:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2960  0008E8  0E00               	movlw	0
  2961  0008EA  0100               	movlb	0	; () banked
  2962  0008EC  6F9A               	movwf	(efgtoa@n+1)& (0+255),b
  2963  0008EE  0E00               	movlw	0
  2964  0008F0  6F99               	movwf	efgtoa@n& (0+255),b
  2965  0008F2                     
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2968  0008F2  C112  F086         	movff	_width,efgtoa@w
  2969  0008F6  C113  F087         	movff	_width+1,efgtoa@w+1
  2970  0008FA                     
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2973  0008FA  5181               	movf	efgtoa@sign& (0+255),w,b
  2974  0008FC  1182               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2975  0008FE  A4D8               	btfss	status,2,c
  2976  000900  EF84  F004         	goto	u5261
  2977  000904  EF86  F004         	goto	u5260
  2978  000908                     u5261:
  2979  000908  EF8D  F004         	goto	l4374
  2980  00090C                     u5260:
  2981  00090C                     
  2982                           ; BSR set to: 0
  2983  00090C  A5F1               	btfss	_flags& (0+255),2,b
  2984  00090E  EF8B  F004         	goto	u5271
  2985  000912  EF8D  F004         	goto	u5270
  2986  000916                     u5271:
  2987  000916  EFA7  F004         	goto	l4386
  2988  00091A                     u5270:
  2989  00091A                     l4374:
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2993  00091A  5181               	movf	efgtoa@sign& (0+255),w,b
  2994  00091C  1182               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2995  00091E  A4D8               	btfss	status,2,c
  2996  000920  EF94  F004         	goto	u5281
  2997  000924  EF96  F004         	goto	u5280
  2998  000928                     u5281:
  2999  000928  EF9C  F004         	goto	l4378
  3000  00092C                     u5280:
  3001  00092C                     
  3002                           ; BSR set to: 0
  3003  00092C  0E00               	movlw	0
  3004  00092E  6F6C               	movwf	(_efgtoa$928+1)& (0+255),b
  3005  000930  0E2B               	movlw	43
  3006  000932  6F6B               	movwf	_efgtoa$928& (0+255),b
  3007  000934  EFA0  F004         	goto	l4380
  3008  000938                     l4378:
  3009                           
  3010                           ; BSR set to: 0
  3011  000938  0E00               	movlw	0
  3012  00093A  6F6C               	movwf	(_efgtoa$928+1)& (0+255),b
  3013  00093C  0E2D               	movlw	45
  3014  00093E  6F6B               	movwf	_efgtoa$928& (0+255),b
  3015  000940                     l4380:
  3016                           
  3017                           ; BSR set to: 0
  3018  000940  C06B  F11A         	movff	_efgtoa$928,_dbuf
  3019  000944                     
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  3022  000944  4B99               	infsnz	efgtoa@n& (0+255),f,b
  3023  000946  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  3024  000948                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  3027  000948  0786               	decf	efgtoa@w& (0+255),f,b
  3028  00094A  A0D8               	btfss	status,0,c
  3029  00094C  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  3030  00094E                     l4386:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3034  00094E  C093  F001         	movff	efgtoa@g,___fpclassifyf@x
  3035  000952  C094  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3036  000956  C095  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3037  00095A  C096  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3038  00095E  EC45  F020         	call	___fpclassifyf	;wreg free
  3039  000962  0401               	decf	?___fpclassifyf^0,w,c
  3040  000964  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3041  000966  A4D8               	btfss	status,2,c
  3042  000968  EFB8  F004         	goto	u5291
  3043  00096C  EFBA  F004         	goto	u5290
  3044  000970                     u5291:
  3045  000970  EF11  F005         	goto	l4404
  3046  000974                     u5290:
  3047  000974  0EBF               	movlw	191
  3048  000976  6E5B               	movwf	??_efgtoa^0,c
  3049  000978  0EFF               	movlw	255
  3050  00097A  6E5C               	movwf	(??_efgtoa+1)^0,c
  3051  00097C  0100               	movlb	0	; () banked
  3052  00097E  5166               	movf	efgtoa@c& (0+255),w,b
  3053  000980  6E5D               	movwf	(??_efgtoa+2)^0,c
  3054  000982  6A5E               	clrf	(??_efgtoa+3)^0,c
  3055  000984  505B               	movf	??_efgtoa^0,w,c
  3056  000986  265D               	addwf	(??_efgtoa+2)^0,f,c
  3057  000988  505C               	movf	(??_efgtoa+1)^0,w,c
  3058  00098A  225E               	addwfc	(??_efgtoa+3)^0,f,c
  3059  00098C  505E               	movf	(??_efgtoa+3)^0,w,c
  3060  00098E  E10A               	bnz	u5300
  3061  000990  0E1A               	movlw	26
  3062  000992  5C5D               	subwf	(??_efgtoa+2)^0,w,c
  3063  000994  A0D8               	btfss	status,0,c
  3064  000996  EFCF  F004         	goto	u5301
  3065  00099A  EFD2  F004         	goto	u5300
  3066  00099E                     u5301:
  3067  00099E  0E01               	movlw	1
  3068  0009A0  EFD3  F004         	goto	u5310
  3069  0009A4                     u5300:
  3070  0009A4  0E00               	movlw	0
  3071  0009A6                     u5310:
  3072  0009A6  6F6D               	movwf	_efgtoa$929& (0+255),b
  3073  0009A8  6B6E               	clrf	(_efgtoa$929+1)& (0+255),b
  3074  0009AA                     
  3075                           ; BSR set to: 0
  3076  0009AA  516D               	movf	_efgtoa$929& (0+255),w,b
  3077  0009AC  116E               	iorwf	(_efgtoa$929+1)& (0+255),w,b
  3078  0009AE  B4D8               	btfsc	status,2,c
  3079  0009B0  EFDC  F004         	goto	u5321
  3080  0009B4  EFDE  F004         	goto	u5320
  3081  0009B8                     u5321:
  3082  0009B8  EFEC  F004         	goto	l4396
  3083  0009BC                     u5320:
  3084  0009BC                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  3087  0009BC  0E1A               	movlw	low _dbuf
  3088  0009BE  2599               	addwf	efgtoa@n& (0+255),w,b
  3089  0009C0  6E01               	movwf	strcpy@dest^0,c
  3090  0009C2  0E01               	movlw	high _dbuf
  3091  0009C4  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3092  0009C6  6E02               	movwf	(strcpy@dest+1)^0,c
  3093  0009C8  0E7D               	movlw	low STR_12
  3094  0009CA  6E03               	movwf	strcpy@src^0,c
  3095  0009CC  0E08               	movlw	high STR_12
  3096  0009CE  6E04               	movwf	(strcpy@src+1)^0,c
  3097  0009D0  EC9A  F023         	call	_strcpy	;wreg free
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  3100  0009D4  EFF8  F004         	goto	l4398
  3101  0009D8                     l4396:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  3105  0009D8  0E1A               	movlw	low _dbuf
  3106  0009DA  2599               	addwf	efgtoa@n& (0+255),w,b
  3107  0009DC  6E01               	movwf	strcpy@dest^0,c
  3108  0009DE  0E01               	movlw	high _dbuf
  3109  0009E0  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3110  0009E2  6E02               	movwf	(strcpy@dest+1)^0,c
  3111  0009E4  0E85               	movlw	low STR_13
  3112  0009E6  6E03               	movwf	strcpy@src^0,c
  3113  0009E8  0E08               	movlw	high STR_13
  3114  0009EA  6E04               	movwf	(strcpy@src+1)^0,c
  3115  0009EC  EC9A  F023         	call	_strcpy	;wreg free
  3116  0009F0                     l4398:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3119  0009F0  0100               	movlb	0	; () banked
  3120  0009F2  0EFD               	movlw	253
  3121  0009F4  2786               	addwf	efgtoa@w& (0+255),f,b
  3122  0009F6  0EFF               	movlw	255
  3123  0009F8  2387               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3124  0009FA                     l4400:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3127  0009FA  C060  F011         	movff	efgtoa@fp,pad@fp
  3128  0009FE  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3129  000A02  0E1A               	movlw	low _dbuf
  3130  000A04  6E13               	movwf	pad@buf^0,c
  3131  000A06  0E01               	movlw	high _dbuf
  3132  000A08  6E14               	movwf	(pad@buf+1)^0,c
  3133  000A0A  C086  F015         	movff	efgtoa@w,pad@p
  3134  000A0E  C087  F016         	movff	efgtoa@w+1,pad@p+1
  3135  000A12  EC94  F021         	call	_pad	;wreg free
  3136  000A16  C011  F060         	movff	?_pad,?_efgtoa
  3137  000A1A  C012  F061         	movff	?_pad+1,?_efgtoa+1
  3138  000A1E  EF21  F00A         	goto	l1004
  3139  000A22                     l4404:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3142  000A22  C093  F001         	movff	efgtoa@g,___fpclassifyf@x
  3143  000A26  C094  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3144  000A2A  C095  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3145  000A2E  C096  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3146  000A32  EC45  F020         	call	___fpclassifyf	;wreg free
  3147  000A36  5001               	movf	?___fpclassifyf^0,w,c
  3148  000A38  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3149  000A3A  A4D8               	btfss	status,2,c
  3150  000A3C  EF22  F005         	goto	u5331
  3151  000A40  EF24  F005         	goto	u5330
  3152  000A44                     u5331:
  3153  000A44  EF64  F005         	goto	l4422
  3154  000A48                     u5330:
  3155  000A48  0EBF               	movlw	191
  3156  000A4A  6E5B               	movwf	??_efgtoa^0,c
  3157  000A4C  0EFF               	movlw	255
  3158  000A4E  6E5C               	movwf	(??_efgtoa+1)^0,c
  3159  000A50  0100               	movlb	0	; () banked
  3160  000A52  5166               	movf	efgtoa@c& (0+255),w,b
  3161  000A54  6E5D               	movwf	(??_efgtoa+2)^0,c
  3162  000A56  6A5E               	clrf	(??_efgtoa+3)^0,c
  3163  000A58  505B               	movf	??_efgtoa^0,w,c
  3164  000A5A  265D               	addwf	(??_efgtoa+2)^0,f,c
  3165  000A5C  505C               	movf	(??_efgtoa+1)^0,w,c
  3166  000A5E  225E               	addwfc	(??_efgtoa+3)^0,f,c
  3167  000A60  505E               	movf	(??_efgtoa+3)^0,w,c
  3168  000A62  E10A               	bnz	u5340
  3169  000A64  0E1A               	movlw	26
  3170  000A66  5C5D               	subwf	(??_efgtoa+2)^0,w,c
  3171  000A68  A0D8               	btfss	status,0,c
  3172  000A6A  EF39  F005         	goto	u5341
  3173  000A6E  EF3C  F005         	goto	u5340
  3174  000A72                     u5341:
  3175  000A72  0E01               	movlw	1
  3176  000A74  EF3D  F005         	goto	u5350
  3177  000A78                     u5340:
  3178  000A78  0E00               	movlw	0
  3179  000A7A                     u5350:
  3180  000A7A  6F6F               	movwf	_efgtoa$933& (0+255),b
  3181  000A7C  6B70               	clrf	(_efgtoa$933+1)& (0+255),b
  3182  000A7E                     
  3183                           ; BSR set to: 0
  3184  000A7E  516F               	movf	_efgtoa$933& (0+255),w,b
  3185  000A80  1170               	iorwf	(_efgtoa$933+1)& (0+255),w,b
  3186  000A82  B4D8               	btfsc	status,2,c
  3187  000A84  EF46  F005         	goto	u5361
  3188  000A88  EF48  F005         	goto	u5360
  3189  000A8C                     u5361:
  3190  000A8C  EF56  F005         	goto	l4414
  3191  000A90                     u5360:
  3192  000A90                     
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  3195  000A90  0E1A               	movlw	low _dbuf
  3196  000A92  2599               	addwf	efgtoa@n& (0+255),w,b
  3197  000A94  6E01               	movwf	strcpy@dest^0,c
  3198  000A96  0E01               	movlw	high _dbuf
  3199  000A98  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3200  000A9A  6E02               	movwf	(strcpy@dest+1)^0,c
  3201  000A9C  0E81               	movlw	low STR_16
  3202  000A9E  6E03               	movwf	strcpy@src^0,c
  3203  000AA0  0E08               	movlw	high STR_16
  3204  000AA2  6E04               	movwf	(strcpy@src+1)^0,c
  3205  000AA4  EC9A  F023         	call	_strcpy	;wreg free
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  3208  000AA8  EFF8  F004         	goto	l4398
  3209  000AAC                     l4414:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  3213  000AAC  0E1A               	movlw	low _dbuf
  3214  000AAE  2599               	addwf	efgtoa@n& (0+255),w,b
  3215  000AB0  6E01               	movwf	strcpy@dest^0,c
  3216  000AB2  0E01               	movlw	high _dbuf
  3217  000AB4  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3218  000AB6  6E02               	movwf	(strcpy@dest+1)^0,c
  3219  000AB8  0E89               	movlw	low STR_17
  3220  000ABA  6E03               	movwf	strcpy@src^0,c
  3221  000ABC  0E08               	movlw	high STR_17
  3222  000ABE  6E04               	movwf	(strcpy@src+1)^0,c
  3223  000AC0  EC9A  F023         	call	_strcpy	;wreg free
  3224  000AC4  EFF8  F004         	goto	l4398
  3225  000AC8                     l4422:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  3228  000AC8  0E00               	movlw	0
  3229  000ACA  0100               	movlb	0	; () banked
  3230  000ACC  6F9B               	movwf	efgtoa@u& (0+255),b
  3231  000ACE  0E00               	movlw	0
  3232  000AD0  6F9C               	movwf	(efgtoa@u+1)& (0+255),b
  3233  000AD2  0E80               	movlw	128
  3234  000AD4  6F9D               	movwf	(efgtoa@u+2)& (0+255),b
  3235  000AD6  0E3F               	movlw	63
  3236  000AD8  6F9E               	movwf	(efgtoa@u+3)& (0+255),b
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  3239  000ADA  0E00               	movlw	0
  3240  000ADC  6F98               	movwf	(efgtoa@e+1)& (0+255),b
  3241  000ADE  0E00               	movlw	0
  3242  000AE0  6F97               	movwf	efgtoa@e& (0+255),b
  3243  000AE2                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  3246  000AE2  C093  F001         	movff	efgtoa@g,___fleq@ff1
  3247  000AE6  C094  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3248  000AEA  C095  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3249  000AEE  C096  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3250  000AF2  0E00               	movlw	0
  3251  000AF4  6E05               	movwf	___fleq@ff2^0,c
  3252  000AF6  0E00               	movlw	0
  3253  000AF8  6E06               	movwf	(___fleq@ff2+1)^0,c
  3254  000AFA  0E00               	movlw	0
  3255  000AFC  6E07               	movwf	(___fleq@ff2+2)^0,c
  3256  000AFE  0E00               	movlw	0
  3257  000B00  6E08               	movwf	(___fleq@ff2+3)^0,c
  3258  000B02  ECB1  F022         	call	___fleq	;wreg free
  3259  000B06  B0D8               	btfsc	status,0,c
  3260  000B08  EF88  F005         	goto	u5371
  3261  000B0C  EF8A  F005         	goto	u5370
  3262  000B10                     u5371:
  3263  000B10  EF0D  F006         	goto	l4440
  3264  000B14                     u5370:
  3265  000B14  EFA9  F005         	goto	l4432
  3266  000B18                     l4428:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  3269  000B18  C09B  F00F         	movff	efgtoa@u,___flmul@b
  3270  000B1C  C09C  F010         	movff	efgtoa@u+1,___flmul@b+1
  3271  000B20  C09D  F011         	movff	efgtoa@u+2,___flmul@b+2
  3272  000B24  C09E  F012         	movff	efgtoa@u+3,___flmul@b+3
  3273  000B28  0E00               	movlw	0
  3274  000B2A  6E13               	movwf	___flmul@a^0,c
  3275  000B2C  0E00               	movlw	0
  3276  000B2E  6E14               	movwf	(___flmul@a+1)^0,c
  3277  000B30  0E20               	movlw	32
  3278  000B32  6E15               	movwf	(___flmul@a+2)^0,c
  3279  000B34  0E41               	movlw	65
  3280  000B36  6E16               	movwf	(___flmul@a+3)^0,c
  3281  000B38  EC7B  F00F         	call	___flmul	;wreg free
  3282  000B3C  C00F  F09B         	movff	?___flmul,efgtoa@u
  3283  000B40  C010  F09C         	movff	?___flmul+1,efgtoa@u+1
  3284  000B44  C011  F09D         	movff	?___flmul+2,efgtoa@u+2
  3285  000B48  C012  F09E         	movff	?___flmul+3,efgtoa@u+3
  3286  000B4C                     
  3287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  3288  000B4C  0100               	movlb	0	; () banked
  3289  000B4E  4B97               	infsnz	efgtoa@e& (0+255),f,b
  3290  000B50  2B98               	incf	(efgtoa@e+1)& (0+255),f,b
  3291  000B52                     l4432:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  3294  000B52  C093  F028         	movff	efgtoa@g,___flge@ff1
  3295  000B56  C094  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3296  000B5A  C095  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3297  000B5E  C096  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3298  000B62  0E00               	movlw	0
  3299  000B64  6E13               	movwf	___flmul@a^0,c
  3300  000B66  0E00               	movlw	0
  3301  000B68  6E14               	movwf	(___flmul@a+1)^0,c
  3302  000B6A  0E20               	movlw	32
  3303  000B6C  6E15               	movwf	(___flmul@a+2)^0,c
  3304  000B6E  0E41               	movlw	65
  3305  000B70  6E16               	movwf	(___flmul@a+3)^0,c
  3306  000B72  C09B  F00F         	movff	efgtoa@u,___flmul@b
  3307  000B76  C09C  F010         	movff	efgtoa@u+1,___flmul@b+1
  3308  000B7A  C09D  F011         	movff	efgtoa@u+2,___flmul@b+2
  3309  000B7E  C09E  F012         	movff	efgtoa@u+3,___flmul@b+3
  3310  000B82  EC7B  F00F         	call	___flmul	;wreg free
  3311  000B86  C00F  F02C         	movff	?___flmul,___flge@ff2
  3312  000B8A  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3313  000B8E  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3314  000B92  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3315  000B96  ECC3  F01F         	call	___flge	;wreg free
  3316  000B9A  B0D8               	btfsc	status,0,c
  3317  000B9C  EFD2  F005         	goto	u5381
  3318  000BA0  EFD4  F005         	goto	u5380
  3319  000BA4                     u5381:
  3320  000BA4  EF8C  F005         	goto	l4428
  3321  000BA8                     u5380:
  3322  000BA8  EFF4  F005         	goto	l4438
  3323  000BAC                     l4434:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  3326  000BAC  C09B  F028         	movff	efgtoa@u,___fldiv@b
  3327  000BB0  C09C  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3328  000BB4  C09D  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3329  000BB8  C09E  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3330  000BBC  0E00               	movlw	0
  3331  000BBE  6E2C               	movwf	___fldiv@a^0,c
  3332  000BC0  0E00               	movlw	0
  3333  000BC2  6E2D               	movwf	(___fldiv@a+1)^0,c
  3334  000BC4  0E20               	movlw	32
  3335  000BC6  6E2E               	movwf	(___fldiv@a+2)^0,c
  3336  000BC8  0E41               	movlw	65
  3337  000BCA  6E2F               	movwf	(___fldiv@a+3)^0,c
  3338  000BCC  EC90  F011         	call	___fldiv	;wreg free
  3339  000BD0  C028  F09B         	movff	?___fldiv,efgtoa@u
  3340  000BD4  C029  F09C         	movff	?___fldiv+1,efgtoa@u+1
  3341  000BD8  C02A  F09D         	movff	?___fldiv+2,efgtoa@u+2
  3342  000BDC  C02B  F09E         	movff	?___fldiv+3,efgtoa@u+3
  3343  000BE0                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  3345  000BE0  0100               	movlb	0	; () banked
  3346  000BE2  0797               	decf	efgtoa@e& (0+255),f,b
  3347  000BE4  A0D8               	btfss	status,0,c
  3348  000BE6  0798               	decf	(efgtoa@e+1)& (0+255),f,b
  3349  000BE8                     l4438:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  3352  000BE8  C093  F028         	movff	efgtoa@g,___flge@ff1
  3353  000BEC  C094  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3354  000BF0  C095  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3355  000BF4  C096  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3356  000BF8  C09B  F02C         	movff	efgtoa@u,___flge@ff2
  3357  000BFC  C09C  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3358  000C00  C09D  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3359  000C04  C09E  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3360  000C08  ECC3  F01F         	call	___flge	;wreg free
  3361  000C0C  A0D8               	btfss	status,0,c
  3362  000C0E  EF0B  F006         	goto	u5391
  3363  000C12  EF0D  F006         	goto	u5390
  3364  000C16                     u5391:
  3365  000C16  EFD6  F005         	goto	l4434
  3366  000C1A                     u5390:
  3367  000C1A                     l4440:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  3370  000C1A  C066  F007         	movff	efgtoa@c,tolower@c
  3371  000C1E  6A08               	clrf	(tolower@c+1)^0,c
  3372  000C20  EC3B  F023         	call	_tolower	;wreg free
  3373  000C24  5007               	movf	?_tolower^0,w,c
  3374  000C26  0100               	movlb	0	; () banked
  3375  000C28  6F88               	movwf	efgtoa@mode& (0+255),b
  3376  000C2A                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  3379  000C2A  C088  F085         	movff	efgtoa@mode,efgtoa@nmode
  3380  000C2E                     
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  3383  000C2E  0E67               	movlw	103
  3384  000C30  1988               	xorwf	efgtoa@mode& (0+255),w,b
  3385  000C32  A4D8               	btfss	status,2,c
  3386  000C34  EF1E  F006         	goto	u5401
  3387  000C38  EF20  F006         	goto	u5400
  3388  000C3C                     u5401:
  3389  000C3C  EF46  F006         	goto	l4454
  3390  000C40                     u5400:
  3391  000C40                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  3394  000C40  51EF               	movf	_prec& (0+255),w,b
  3395  000C42  11F0               	iorwf	(_prec+1)& (0+255),w,b
  3396  000C44  A4D8               	btfss	status,2,c
  3397  000C46  EF27  F006         	goto	u5411
  3398  000C4A  EF29  F006         	goto	u5410
  3399  000C4E                     u5411:
  3400  000C4E  EF2D  F006         	goto	l4450
  3401  000C52                     u5410:
  3402  000C52                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3405  000C52  0E00               	movlw	0
  3406  000C54  6FF0               	movwf	(_prec+1)& (0+255),b
  3407  000C56  0E01               	movlw	1
  3408  000C58  6FEF               	movwf	_prec& (0+255),b
  3409  000C5A                     l4450:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  3413  000C5A  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3414  000C5C  EF3A  F006         	goto	u5420
  3415  000C60  51F0               	movf	(_prec+1)& (0+255),w,b
  3416  000C62  E106               	bnz	u5421
  3417  000C64  05EF               	decf	_prec& (0+255),w,b
  3418  000C66  B0D8               	btfsc	status,0,c
  3419  000C68  EF38  F006         	goto	u5421
  3420  000C6C  EF3A  F006         	goto	u5420
  3421  000C70                     u5421:
  3422  000C70  EF40  F006         	goto	l1022
  3423  000C74                     u5420:
  3424  000C74                     l4452:
  3425                           
  3426                           ; BSR set to: 0
  3427  000C74  0E00               	movlw	0
  3428  000C76  6F84               	movwf	(efgtoa@p+1)& (0+255),b
  3429  000C78  0E06               	movlw	6
  3430  000C7A  6F83               	movwf	efgtoa@p& (0+255),b
  3431  000C7C  EF4F  F006         	goto	l4460
  3432  000C80                     l1022:
  3433                           
  3434                           ; BSR set to: 0
  3435  000C80  C0EF  F083         	movff	_prec,efgtoa@p
  3436  000C84  C0F0  F084         	movff	_prec+1,efgtoa@p+1
  3437  000C88  EF4F  F006         	goto	l4460
  3438  000C8C                     l4454:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3442  000C8C  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3443  000C8E  EF4B  F006         	goto	u5431
  3444  000C92  EF4D  F006         	goto	u5430
  3445  000C96                     u5431:
  3446  000C96  EF3A  F006         	goto	l4452
  3447  000C9A                     u5430:
  3448  000C9A  EF40  F006         	goto	l1022
  3449  000C9E                     l4460:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3453  000C9E  0E67               	movlw	103
  3454  000CA0  1988               	xorwf	efgtoa@mode& (0+255),w,b
  3455  000CA2  A4D8               	btfss	status,2,c
  3456  000CA4  EF56  F006         	goto	u5441
  3457  000CA8  EF58  F006         	goto	u5440
  3458  000CAC                     u5441:
  3459  000CAC  EF87  F006         	goto	l4470
  3460  000CB0                     u5440:
  3461  000CB0                     
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3464  000CB0  AF98               	btfss	(efgtoa@e+1)& (0+255),7,b
  3465  000CB2  EF66  F006         	goto	u5450
  3466  000CB6  0EFC               	movlw	252
  3467  000CB8  5D97               	subwf	efgtoa@e& (0+255),w,b
  3468  000CBA  0EFF               	movlw	255
  3469  000CBC  5998               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3470  000CBE  A0D8               	btfss	status,0,c
  3471  000CC0  EF64  F006         	goto	u5451
  3472  000CC4  EF66  F006         	goto	u5450
  3473  000CC8                     u5451:
  3474  000CC8  EF85  F006         	goto	l4468
  3475  000CCC                     u5450:
  3476  000CCC                     
  3477                           ; BSR set to: 0
  3478  000CCC  0EFF               	movlw	255
  3479  000CCE  6E5B               	movwf	??_efgtoa^0,c
  3480  000CD0  0EFF               	movlw	255
  3481  000CD2  6E5C               	movwf	(??_efgtoa+1)^0,c
  3482  000CD4  C083  F05D         	movff	efgtoa@p,??_efgtoa+2
  3483  000CD8  C084  F05E         	movff	efgtoa@p+1,??_efgtoa+3
  3484  000CDC  505B               	movf	??_efgtoa^0,w,c
  3485  000CDE  265D               	addwf	(??_efgtoa+2)^0,f,c
  3486  000CE0  505C               	movf	(??_efgtoa+1)^0,w,c
  3487  000CE2  225E               	addwfc	(??_efgtoa+3)^0,f,c
  3488  000CE4  5197               	movf	efgtoa@e& (0+255),w,b
  3489  000CE6  5C5D               	subwf	(??_efgtoa+2)^0,w,c
  3490  000CE8  505E               	movf	(??_efgtoa+3)^0,w,c
  3491  000CEA  0A80               	xorlw	128
  3492  000CEC  6E5F               	movwf	(??_efgtoa+4)^0,c
  3493  000CEE  5198               	movf	(efgtoa@e+1)& (0+255),w,b
  3494  000CF0  0A80               	xorlw	128
  3495  000CF2  585F               	subwfb	(??_efgtoa+4)^0,w,c
  3496  000CF4  A0D8               	btfss	status,0,c
  3497  000CF6  EF7F  F006         	goto	u5461
  3498  000CFA  EF81  F006         	goto	u5460
  3499  000CFE                     u5461:
  3500  000CFE  EF85  F006         	goto	l4468
  3501  000D02                     u5460:
  3502  000D02                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3505  000D02  0E66               	movlw	102
  3506  000D04  6F85               	movwf	efgtoa@nmode& (0+255),b
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3509  000D06  EF87  F006         	goto	l4470
  3510  000D0A                     l4468:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3514  000D0A  0E65               	movlw	101
  3515  000D0C  6F85               	movwf	efgtoa@nmode& (0+255),b
  3516  000D0E                     l4470:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3520  000D0E  C083  F07B         	movff	efgtoa@p,efgtoa@m
  3521  000D12  C084  F07C         	movff	efgtoa@p+1,efgtoa@m+1
  3522  000D16                     
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3525  000D16  0E67               	movlw	103
  3526  000D18  1988               	xorwf	efgtoa@mode& (0+255),w,b
  3527  000D1A  A4D8               	btfss	status,2,c
  3528  000D1C  EF92  F006         	goto	u5471
  3529  000D20  EF94  F006         	goto	u5470
  3530  000D24                     u5471:
  3531  000D24  EFA4  F006         	goto	l4478
  3532  000D28                     u5470:
  3533  000D28                     
  3534                           ; BSR set to: 0
  3535  000D28  0E66               	movlw	102
  3536  000D2A  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3537  000D2C  A4D8               	btfss	status,2,c
  3538  000D2E  EF9B  F006         	goto	u5481
  3539  000D32  EF9D  F006         	goto	u5480
  3540  000D36                     u5481:
  3541  000D36  EFA6  F006         	goto	l4480
  3542  000D3A                     u5480:
  3543  000D3A                     
  3544                           ; BSR set to: 0
  3545  000D3A  BF98               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3546  000D3C  EFA4  F006         	goto	u5490
  3547  000D40  EFA2  F006         	goto	u5491
  3548  000D44                     u5491:
  3549  000D44  EFA6  F006         	goto	l4480
  3550  000D48                     u5490:
  3551  000D48                     l4478:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3555  000D48  4B7B               	infsnz	efgtoa@m& (0+255),f,b
  3556  000D4A  2B7C               	incf	(efgtoa@m+1)& (0+255),f,b
  3557  000D4C                     l4480:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3561  000D4C  0E66               	movlw	102
  3562  000D4E  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3563  000D50  A4D8               	btfss	status,2,c
  3564  000D52  EFAD  F006         	goto	u5501
  3565  000D56  EFAF  F006         	goto	u5500
  3566  000D5A                     u5501:
  3567  000D5A  EFCF  F006         	goto	l4490
  3568  000D5E                     u5500:
  3569  000D5E                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3572  000D5E  BF98               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3573  000D60  EFB6  F006         	goto	u5510
  3574  000D64  EFB4  F006         	goto	u5511
  3575  000D68                     u5511:
  3576  000D68  EFC2  F006         	goto	l4486
  3577  000D6C                     u5510:
  3578  000D6C                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3581  000D6C  0E00               	movlw	0
  3582  000D6E  6F9B               	movwf	efgtoa@u& (0+255),b
  3583  000D70  0E00               	movlw	0
  3584  000D72  6F9C               	movwf	(efgtoa@u+1)& (0+255),b
  3585  000D74  0E80               	movlw	128
  3586  000D76  6F9D               	movwf	(efgtoa@u+2)& (0+255),b
  3587  000D78  0E3F               	movlw	63
  3588  000D7A  6F9E               	movwf	(efgtoa@u+3)& (0+255),b
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3591  000D7C  0E00               	movlw	0
  3592  000D7E  6F98               	movwf	(efgtoa@e+1)& (0+255),b
  3593  000D80  0E00               	movlw	0
  3594  000D82  6F97               	movwf	efgtoa@e& (0+255),b
  3595  000D84                     l4486:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3599  000D84  0E67               	movlw	103
  3600  000D86  1988               	xorwf	efgtoa@mode& (0+255),w,b
  3601  000D88  B4D8               	btfsc	status,2,c
  3602  000D8A  EFC9  F006         	goto	u5521
  3603  000D8E  EFCB  F006         	goto	u5520
  3604  000D92                     u5521:
  3605  000D92  EFCF  F006         	goto	l4490
  3606  000D96                     u5520:
  3607  000D96                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3610  000D96  5197               	movf	efgtoa@e& (0+255),w,b
  3611  000D98  277B               	addwf	efgtoa@m& (0+255),f,b
  3612  000D9A  5198               	movf	(efgtoa@e+1)& (0+255),w,b
  3613  000D9C  237C               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3614  000D9E                     l4490:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3618  000D9E  0E00               	movlw	0
  3619  000DA0  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  3620  000DA2  0E00               	movlw	0
  3621  000DA4  6F91               	movwf	efgtoa@i& (0+255),b
  3622  000DA6                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3625  000DA6  C093  F089         	movff	efgtoa@g,efgtoa@h
  3626  000DAA  C094  F08A         	movff	efgtoa@g+1,efgtoa@h+1
  3627  000DAE  C095  F08B         	movff	efgtoa@g+2,efgtoa@h+2
  3628  000DB2  C096  F08C         	movff	efgtoa@g+3,efgtoa@h+3
  3629  000DB6                     
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3632  000DB6  C09B  F067         	movff	efgtoa@u,efgtoa@ou
  3633  000DBA  C09C  F068         	movff	efgtoa@u+1,efgtoa@ou+1
  3634  000DBE  C09D  F069         	movff	efgtoa@u+2,efgtoa@ou+2
  3635  000DC2  C09E  F06A         	movff	efgtoa@u+3,efgtoa@ou+3
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3638  000DC6  EF60  F007         	goto	l4504
  3639  000DCA                     l4496:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3643  000DCA  C089  F028         	movff	efgtoa@h,___fldiv@b
  3644  000DCE  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3645  000DD2  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3646  000DD6  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3647  000DDA  C09B  F02C         	movff	efgtoa@u,___fldiv@a
  3648  000DDE  C09C  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3649  000DE2  C09D  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3650  000DE6  C09E  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3651  000DEA  EC90  F011         	call	___fldiv	;wreg free
  3652  000DEE  C028  F041         	movff	?___fldiv,floorf@x
  3653  000DF2  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3654  000DF6  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3655  000DFA  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3656  000DFE  EC1F  F01B         	call	_floorf	;wreg free
  3657  000E02  C041  F08D         	movff	?_floorf,efgtoa@l
  3658  000E06  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
  3659  000E0A  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
  3660  000E0E  C044  F090         	movff	?_floorf+3,efgtoa@l+3
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3663  000E12  C08D  F051         	movff	efgtoa@l,___fltol@f1
  3664  000E16  C08E  F052         	movff	efgtoa@l+1,___fltol@f1+1
  3665  000E1A  C08F  F053         	movff	efgtoa@l+2,___fltol@f1+2
  3666  000E1E  C090  F054         	movff	efgtoa@l+3,___fltol@f1+3
  3667  000E22  EC40  F01F         	call	___fltol	;wreg free
  3668  000E26  C051  F07F         	movff	?___fltol,efgtoa@d
  3669  000E2A  C052  F080         	movff	?___fltol+1,efgtoa@d+1
  3670  000E2E                     
  3671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3672  000E2E  C089  F051         	movff	efgtoa@h,___flsub@b
  3673  000E32  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
  3674  000E36  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
  3675  000E3A  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
  3676  000E3E  C09B  F013         	movff	efgtoa@u,___flmul@a
  3677  000E42  C09C  F014         	movff	efgtoa@u+1,___flmul@a+1
  3678  000E46  C09D  F015         	movff	efgtoa@u+2,___flmul@a+2
  3679  000E4A  C09E  F016         	movff	efgtoa@u+3,___flmul@a+3
  3680  000E4E  C08D  F00F         	movff	efgtoa@l,___flmul@b
  3681  000E52  C08E  F010         	movff	efgtoa@l+1,___flmul@b+1
  3682  000E56  C08F  F011         	movff	efgtoa@l+2,___flmul@b+2
  3683  000E5A  C090  F012         	movff	efgtoa@l+3,___flmul@b+3
  3684  000E5E  EC7B  F00F         	call	___flmul	;wreg free
  3685  000E62  C00F  F055         	movff	?___flmul,___flsub@a
  3686  000E66  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3687  000E6A  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3688  000E6E  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3689  000E72  ECB8  F024         	call	___flsub	;wreg free
  3690  000E76  C051  F089         	movff	?___flsub,efgtoa@h
  3691  000E7A  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
  3692  000E7E  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
  3693  000E82  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
  3694  000E86                     
  3695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3696  000E86  C09B  F028         	movff	efgtoa@u,___fldiv@b
  3697  000E8A  C09C  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3698  000E8E  C09D  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3699  000E92  C09E  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3700  000E96  0E00               	movlw	0
  3701  000E98  6E2C               	movwf	___fldiv@a^0,c
  3702  000E9A  0E00               	movlw	0
  3703  000E9C  6E2D               	movwf	(___fldiv@a+1)^0,c
  3704  000E9E  0E20               	movlw	32
  3705  000EA0  6E2E               	movwf	(___fldiv@a+2)^0,c
  3706  000EA2  0E41               	movlw	65
  3707  000EA4  6E2F               	movwf	(___fldiv@a+3)^0,c
  3708  000EA6  EC90  F011         	call	___fldiv	;wreg free
  3709  000EAA  C028  F09B         	movff	?___fldiv,efgtoa@u
  3710  000EAE  C029  F09C         	movff	?___fldiv+1,efgtoa@u+1
  3711  000EB2  C02A  F09D         	movff	?___fldiv+2,efgtoa@u+2
  3712  000EB6  C02B  F09E         	movff	?___fldiv+3,efgtoa@u+3
  3713  000EBA                     
  3714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3715  000EBA  0100               	movlb	0	; () banked
  3716  000EBC  4B91               	infsnz	efgtoa@i& (0+255),f,b
  3717  000EBE  2B92               	incf	(efgtoa@i+1)& (0+255),f,b
  3718  000EC0                     l4504:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3722  000EC0  517B               	movf	efgtoa@m& (0+255),w,b
  3723  000EC2  5D91               	subwf	efgtoa@i& (0+255),w,b
  3724  000EC4  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  3725  000EC6  0A80               	xorlw	128
  3726  000EC8  6E5B               	movwf	??_efgtoa^0,c
  3727  000ECA  517C               	movf	(efgtoa@m+1)& (0+255),w,b
  3728  000ECC  0A80               	xorlw	128
  3729  000ECE  585B               	subwfb	??_efgtoa^0,w,c
  3730  000ED0  A0D8               	btfss	status,0,c
  3731  000ED2  EF6D  F007         	goto	u5531
  3732  000ED6  EF6F  F007         	goto	u5530
  3733  000EDA                     u5531:
  3734  000EDA  EFE5  F006         	goto	l4496
  3735  000EDE                     u5530:
  3736  000EDE                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3739  000EDE  C09B  F00F         	movff	efgtoa@u,___flmul@b
  3740  000EE2  C09C  F010         	movff	efgtoa@u+1,___flmul@b+1
  3741  000EE6  C09D  F011         	movff	efgtoa@u+2,___flmul@b+2
  3742  000EEA  C09E  F012         	movff	efgtoa@u+3,___flmul@b+3
  3743  000EEE  0E00               	movlw	0
  3744  000EF0  6E13               	movwf	___flmul@a^0,c
  3745  000EF2  0E00               	movlw	0
  3746  000EF4  6E14               	movwf	(___flmul@a+1)^0,c
  3747  000EF6  0EA0               	movlw	160
  3748  000EF8  6E15               	movwf	(___flmul@a+2)^0,c
  3749  000EFA  0E40               	movlw	64
  3750  000EFC  6E16               	movwf	(___flmul@a+3)^0,c
  3751  000EFE  EC7B  F00F         	call	___flmul	;wreg free
  3752  000F02  C00F  F08D         	movff	?___flmul,efgtoa@l
  3753  000F06  C010  F08E         	movff	?___flmul+1,efgtoa@l+1
  3754  000F0A  C011  F08F         	movff	?___flmul+2,efgtoa@l+2
  3755  000F0E  C012  F090         	movff	?___flmul+3,efgtoa@l+3
  3756  000F12                     
  3757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3758  000F12  C089  F028         	movff	efgtoa@h,___flge@ff1
  3759  000F16  C08A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3760  000F1A  C08B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3761  000F1E  C08C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3762  000F22  C08D  F02C         	movff	efgtoa@l,___flge@ff2
  3763  000F26  C08E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3764  000F2A  C08F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3765  000F2E  C090  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3766  000F32  ECC3  F01F         	call	___flge	;wreg free
  3767  000F36  B0D8               	btfsc	status,0,c
  3768  000F38  EFA0  F007         	goto	u5541
  3769  000F3C  EFA2  F007         	goto	u5540
  3770  000F40                     u5541:
  3771  000F40  EFAD  F007         	goto	l4512
  3772  000F44                     u5540:
  3773  000F44                     
  3774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3775  000F44  0E00               	movlw	0
  3776  000F46  0100               	movlb	0	; () banked
  3777  000F48  6F8D               	movwf	efgtoa@l& (0+255),b
  3778  000F4A  0E00               	movlw	0
  3779  000F4C  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  3780  000F4E  0E00               	movlw	0
  3781  000F50  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  3782  000F52  0E00               	movlw	0
  3783  000F54  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3786  000F56  EFD6  F007         	goto	l4518
  3787  000F5A                     l4512:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3790  000F5A  C089  F001         	movff	efgtoa@h,___fleq@ff1
  3791  000F5E  C08A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3792  000F62  C08B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3793  000F66  C08C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3794  000F6A  C08D  F005         	movff	efgtoa@l,___fleq@ff2
  3795  000F6E  C08E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3796  000F72  C08F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3797  000F76  C090  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3798  000F7A  ECB1  F022         	call	___fleq	;wreg free
  3799  000F7E  A0D8               	btfss	status,0,c
  3800  000F80  EFC4  F007         	goto	u5551
  3801  000F84  EFC6  F007         	goto	u5550
  3802  000F88                     u5551:
  3803  000F88  EFD6  F007         	goto	l4518
  3804  000F8C                     u5550:
  3805  000F8C  0100               	movlb	0	; () banked
  3806  000F8E  B17F               	btfsc	efgtoa@d& (0+255),0,b
  3807  000F90  EFCC  F007         	goto	u5561
  3808  000F94  EFCE  F007         	goto	u5560
  3809  000F98                     u5561:
  3810  000F98  EFD6  F007         	goto	l4518
  3811  000F9C                     u5560:
  3812  000F9C                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3815  000F9C  0E00               	movlw	0
  3816  000F9E  6F8D               	movwf	efgtoa@l& (0+255),b
  3817  000FA0  0E00               	movlw	0
  3818  000FA2  6F8E               	movwf	(efgtoa@l+1)& (0+255),b
  3819  000FA4  0E00               	movlw	0
  3820  000FA6  6F8F               	movwf	(efgtoa@l+2)& (0+255),b
  3821  000FA8  0E00               	movlw	0
  3822  000FAA  6F90               	movwf	(efgtoa@l+3)& (0+255),b
  3823  000FAC                     l4518:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3826  000FAC  C093  F041         	movff	efgtoa@g,___fladd@b
  3827  000FB0  C094  F042         	movff	efgtoa@g+1,___fladd@b+1
  3828  000FB4  C095  F043         	movff	efgtoa@g+2,___fladd@b+2
  3829  000FB8  C096  F044         	movff	efgtoa@g+3,___fladd@b+3
  3830  000FBC  C08D  F045         	movff	efgtoa@l,___fladd@a
  3831  000FC0  C08E  F046         	movff	efgtoa@l+1,___fladd@a+1
  3832  000FC4  C08F  F047         	movff	efgtoa@l+2,___fladd@a+2
  3833  000FC8  C090  F048         	movff	efgtoa@l+3,___fladd@a+3
  3834  000FCC  EC1B  F00D         	call	___fladd	;wreg free
  3835  000FD0  C041  F089         	movff	?___fladd,efgtoa@h
  3836  000FD4  C042  F08A         	movff	?___fladd+1,efgtoa@h+1
  3837  000FD8  C043  F08B         	movff	?___fladd+2,efgtoa@h+2
  3838  000FDC  C044  F08C         	movff	?___fladd+3,efgtoa@h+3
  3839  000FE0                     
  3840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3841  000FE0  C067  F09B         	movff	efgtoa@ou,efgtoa@u
  3842  000FE4  C068  F09C         	movff	efgtoa@ou+1,efgtoa@u+1
  3843  000FE8  C069  F09D         	movff	efgtoa@ou+2,efgtoa@u+2
  3844  000FEC  C06A  F09E         	movff	efgtoa@ou+3,efgtoa@u+3
  3845  000FF0                     
  3846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3847  000FF0  0E65               	movlw	101
  3848  000FF2  0100               	movlb	0	; () banked
  3849  000FF4  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3850  000FF6  B4D8               	btfsc	status,2,c
  3851  000FF8  EF00  F008         	goto	u5571
  3852  000FFC  EF02  F008         	goto	u5570
  3853  001000                     u5571:
  3854  001000  EF08  F008         	goto	l4526
  3855  001004                     u5570:
  3856  001004                     
  3857                           ; BSR set to: 0
  3858  001004  C097  F07D         	movff	efgtoa@e,efgtoa@ne
  3859  001008  C098  F07E         	movff	efgtoa@e+1,efgtoa@ne+1
  3860  00100C  EF0C  F008         	goto	l1048
  3861  001010                     l4526:
  3862                           
  3863                           ; BSR set to: 0
  3864  001010  0E00               	movlw	0
  3865  001012  6F7E               	movwf	(efgtoa@ne+1)& (0+255),b
  3866  001014  0E00               	movlw	0
  3867  001016  6F7D               	movwf	efgtoa@ne& (0+255),b
  3868  001018                     l1048:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3872  001018  0E00               	movlw	0
  3873  00101A  6F7A               	movwf	(efgtoa@pp+1)& (0+255),b
  3874  00101C  0E00               	movlw	0
  3875  00101E  6F79               	movwf	efgtoa@pp& (0+255),b
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3878  001020  0E00               	movlw	0
  3879  001022  6F78               	movwf	(efgtoa@t+1)& (0+255),b
  3880  001024  0E00               	movlw	0
  3881  001026  6F77               	movwf	efgtoa@t& (0+255),b
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3884  001028  0E00               	movlw	0
  3885  00102A  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  3886  00102C  0E00               	movlw	0
  3887  00102E  6F91               	movwf	efgtoa@i& (0+255),b
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3890  001030  EF07  F009         	goto	l4576
  3891  001034                     l4528:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3895  001034  C089  F028         	movff	efgtoa@h,___fldiv@b
  3896  001038  C08A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3897  00103C  C08B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3898  001040  C08C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3899  001044  C09B  F02C         	movff	efgtoa@u,___fldiv@a
  3900  001048  C09C  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3901  00104C  C09D  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3902  001050  C09E  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3903  001054  EC90  F011         	call	___fldiv	;wreg free
  3904  001058  C028  F041         	movff	?___fldiv,floorf@x
  3905  00105C  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3906  001060  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3907  001064  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3908  001068  EC1F  F01B         	call	_floorf	;wreg free
  3909  00106C  C041  F08D         	movff	?_floorf,efgtoa@l
  3910  001070  C042  F08E         	movff	?_floorf+1,efgtoa@l+1
  3911  001074  C043  F08F         	movff	?_floorf+2,efgtoa@l+2
  3912  001078  C044  F090         	movff	?_floorf+3,efgtoa@l+3
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3915  00107C  C08D  F051         	movff	efgtoa@l,___fltol@f1
  3916  001080  C08E  F052         	movff	efgtoa@l+1,___fltol@f1+1
  3917  001084  C08F  F053         	movff	efgtoa@l+2,___fltol@f1+2
  3918  001088  C090  F054         	movff	efgtoa@l+3,___fltol@f1+3
  3919  00108C  EC40  F01F         	call	___fltol	;wreg free
  3920  001090  C051  F07F         	movff	?___fltol,efgtoa@d
  3921  001094  C052  F080         	movff	?___fltol+1,efgtoa@d+1
  3922  001098                     
  3923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3924  001098  0100               	movlb	0	; () banked
  3925  00109A  B9F1               	btfsc	_flags& (0+255),4,b
  3926  00109C  EF52  F008         	goto	u5581
  3927  0010A0  EF54  F008         	goto	u5580
  3928  0010A4                     u5581:
  3929  0010A4  EF71  F008         	goto	l4540
  3930  0010A8                     u5580:
  3931  0010A8                     
  3932                           ; BSR set to: 0
  3933  0010A8  517F               	movf	efgtoa@d& (0+255),w,b
  3934  0010AA  1180               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3935  0010AC  A4D8               	btfss	status,2,c
  3936  0010AE  EF5B  F008         	goto	u5591
  3937  0010B2  EF5D  F008         	goto	u5590
  3938  0010B6                     u5591:
  3939  0010B6  EF71  F008         	goto	l4540
  3940  0010BA                     u5590:
  3941  0010BA                     
  3942                           ; BSR set to: 0
  3943  0010BA  0E67               	movlw	103
  3944  0010BC  1988               	xorwf	efgtoa@mode& (0+255),w,b
  3945  0010BE  A4D8               	btfss	status,2,c
  3946  0010C0  EF64  F008         	goto	u5601
  3947  0010C4  EF66  F008         	goto	u5600
  3948  0010C8                     u5601:
  3949  0010C8  EF71  F008         	goto	l4540
  3950  0010CC                     u5600:
  3951  0010CC                     
  3952                           ; BSR set to: 0
  3953  0010CC  BF7E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3954  0010CE  EF6D  F008         	goto	u5610
  3955  0010D2  EF6B  F008         	goto	u5611
  3956  0010D6                     u5611:
  3957  0010D6  EF71  F008         	goto	l4540
  3958  0010DA                     u5610:
  3959  0010DA                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3962  0010DA  4B77               	infsnz	efgtoa@t& (0+255),f,b
  3963  0010DC  2B78               	incf	(efgtoa@t+1)& (0+255),f,b
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3966  0010DE  EFBB  F008         	goto	l4568
  3967  0010E2                     l4540:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3971  0010E2  5179               	movf	efgtoa@pp& (0+255),w,b
  3972  0010E4  117A               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3973  0010E6  A4D8               	btfss	status,2,c
  3974  0010E8  EF78  F008         	goto	u5621
  3975  0010EC  EF7A  F008         	goto	u5620
  3976  0010F0                     u5621:
  3977  0010F0  EFA4  F008         	goto	l4560
  3978  0010F4                     u5620:
  3979  0010F4                     
  3980                           ; BSR set to: 0
  3981  0010F4  BF7E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3982  0010F6  EF81  F008         	goto	u5630
  3983  0010FA  EF7F  F008         	goto	u5631
  3984  0010FE                     u5631:
  3985  0010FE  EFA4  F008         	goto	l4560
  3986  001102                     u5630:
  3987  001102                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3990  001102  0E1A               	movlw	low _dbuf
  3991  001104  2599               	addwf	efgtoa@n& (0+255),w,b
  3992  001106  6ED9               	movwf	fsr2l,c
  3993  001108  0E01               	movlw	high _dbuf
  3994  00110A  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3995  00110C  6EDA               	movwf	fsr2h,c
  3996  00110E  0E2E               	movlw	46
  3997  001110  6EDF               	movwf	indf2,c
  3998  001112                     
  3999                           ; BSR set to: 0
  4000  001112  4B99               	infsnz	efgtoa@n& (0+255),f,b
  4001  001114  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  4002  001116                     
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  4005  001116  0786               	decf	efgtoa@w& (0+255),f,b
  4006  001118  A0D8               	btfss	status,0,c
  4007  00111A  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  4008  00111C                     
  4009                           ; BSR set to: 0
  4010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  4011  00111C  0E00               	movlw	0
  4012  00111E  6F7A               	movwf	(efgtoa@pp+1)& (0+255),b
  4013  001120  0E01               	movlw	1
  4014  001122  6F79               	movwf	efgtoa@pp& (0+255),b
  4015  001124  EFA4  F008         	goto	l4560
  4016  001128                     l4552:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  4020  001128  0E1A               	movlw	low _dbuf
  4021  00112A  2599               	addwf	efgtoa@n& (0+255),w,b
  4022  00112C  6ED9               	movwf	fsr2l,c
  4023  00112E  0E01               	movlw	high _dbuf
  4024  001130  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4025  001132  6EDA               	movwf	fsr2h,c
  4026  001134  0E30               	movlw	48
  4027  001136  6EDF               	movwf	indf2,c
  4028  001138                     
  4029                           ; BSR set to: 0
  4030  001138  4B99               	infsnz	efgtoa@n& (0+255),f,b
  4031  00113A  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  4032  00113C                     
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  4035  00113C  0786               	decf	efgtoa@w& (0+255),f,b
  4036  00113E  A0D8               	btfss	status,0,c
  4037  001140  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  4038  001142                     
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  4041  001142  0777               	decf	efgtoa@t& (0+255),f,b
  4042  001144  A0D8               	btfss	status,0,c
  4043  001146  0778               	decf	(efgtoa@t+1)& (0+255),f,b
  4044  001148                     l4560:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  4048  001148  5177               	movf	efgtoa@t& (0+255),w,b
  4049  00114A  1178               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4050  00114C  A4D8               	btfss	status,2,c
  4051  00114E  EFAB  F008         	goto	u5641
  4052  001152  EFAD  F008         	goto	u5640
  4053  001156                     u5641:
  4054  001156  EF94  F008         	goto	l4552
  4055  00115A                     u5640:
  4056  00115A                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  4059  00115A  0E1A               	movlw	low _dbuf
  4060  00115C  2599               	addwf	efgtoa@n& (0+255),w,b
  4061  00115E  6ED9               	movwf	fsr2l,c
  4062  001160  0E01               	movlw	high _dbuf
  4063  001162  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4064  001164  6EDA               	movwf	fsr2h,c
  4065  001166  517F               	movf	efgtoa@d& (0+255),w,b
  4066  001168  0F30               	addlw	48
  4067  00116A  6EDF               	movwf	indf2,c
  4068  00116C                     
  4069                           ; BSR set to: 0
  4070  00116C  4B99               	infsnz	efgtoa@n& (0+255),f,b
  4071  00116E  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  4072  001170                     
  4073                           ; BSR set to: 0
  4074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  4075  001170  0786               	decf	efgtoa@w& (0+255),f,b
  4076  001172  A0D8               	btfss	status,0,c
  4077  001174  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  4078  001176                     l4568:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  4082  001176  C089  F051         	movff	efgtoa@h,___flsub@b
  4083  00117A  C08A  F052         	movff	efgtoa@h+1,___flsub@b+1
  4084  00117E  C08B  F053         	movff	efgtoa@h+2,___flsub@b+2
  4085  001182  C08C  F054         	movff	efgtoa@h+3,___flsub@b+3
  4086  001186  C09B  F013         	movff	efgtoa@u,___flmul@a
  4087  00118A  C09C  F014         	movff	efgtoa@u+1,___flmul@a+1
  4088  00118E  C09D  F015         	movff	efgtoa@u+2,___flmul@a+2
  4089  001192  C09E  F016         	movff	efgtoa@u+3,___flmul@a+3
  4090  001196  C08D  F00F         	movff	efgtoa@l,___flmul@b
  4091  00119A  C08E  F010         	movff	efgtoa@l+1,___flmul@b+1
  4092  00119E  C08F  F011         	movff	efgtoa@l+2,___flmul@b+2
  4093  0011A2  C090  F012         	movff	efgtoa@l+3,___flmul@b+3
  4094  0011A6  EC7B  F00F         	call	___flmul	;wreg free
  4095  0011AA  C00F  F055         	movff	?___flmul,___flsub@a
  4096  0011AE  C010  F056         	movff	?___flmul+1,___flsub@a+1
  4097  0011B2  C011  F057         	movff	?___flmul+2,___flsub@a+2
  4098  0011B6  C012  F058         	movff	?___flmul+3,___flsub@a+3
  4099  0011BA  ECB8  F024         	call	___flsub	;wreg free
  4100  0011BE  C051  F089         	movff	?___flsub,efgtoa@h
  4101  0011C2  C052  F08A         	movff	?___flsub+1,efgtoa@h+1
  4102  0011C6  C053  F08B         	movff	?___flsub+2,efgtoa@h+2
  4103  0011CA  C054  F08C         	movff	?___flsub+3,efgtoa@h+3
  4104  0011CE                     
  4105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  4106  0011CE  C09B  F028         	movff	efgtoa@u,___fldiv@b
  4107  0011D2  C09C  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4108  0011D6  C09D  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4109  0011DA  C09E  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4110  0011DE  0E00               	movlw	0
  4111  0011E0  6E2C               	movwf	___fldiv@a^0,c
  4112  0011E2  0E00               	movlw	0
  4113  0011E4  6E2D               	movwf	(___fldiv@a+1)^0,c
  4114  0011E6  0E20               	movlw	32
  4115  0011E8  6E2E               	movwf	(___fldiv@a+2)^0,c
  4116  0011EA  0E41               	movlw	65
  4117  0011EC  6E2F               	movwf	(___fldiv@a+3)^0,c
  4118  0011EE  EC90  F011         	call	___fldiv	;wreg free
  4119  0011F2  C028  F09B         	movff	?___fldiv,efgtoa@u
  4120  0011F6  C029  F09C         	movff	?___fldiv+1,efgtoa@u+1
  4121  0011FA  C02A  F09D         	movff	?___fldiv+2,efgtoa@u+2
  4122  0011FE  C02B  F09E         	movff	?___fldiv+3,efgtoa@u+3
  4123  001202                     
  4124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  4125  001202  0100               	movlb	0	; () banked
  4126  001204  077D               	decf	efgtoa@ne& (0+255),f,b
  4127  001206  A0D8               	btfss	status,0,c
  4128  001208  077E               	decf	(efgtoa@ne+1)& (0+255),f,b
  4129  00120A                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  4132  00120A  4B91               	infsnz	efgtoa@i& (0+255),f,b
  4133  00120C  2B92               	incf	(efgtoa@i+1)& (0+255),f,b
  4134  00120E                     l4576:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4138  00120E  517B               	movf	efgtoa@m& (0+255),w,b
  4139  001210  5D91               	subwf	efgtoa@i& (0+255),w,b
  4140  001212  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  4141  001214  0A80               	xorlw	128
  4142  001216  6E5B               	movwf	??_efgtoa^0,c
  4143  001218  517C               	movf	(efgtoa@m+1)& (0+255),w,b
  4144  00121A  0A80               	xorlw	128
  4145  00121C  585B               	subwfb	??_efgtoa^0,w,c
  4146  00121E  B0D8               	btfsc	status,0,c
  4147  001220  EF14  F009         	goto	u5651
  4148  001224  EF16  F009         	goto	u5650
  4149  001228                     u5651:
  4150  001228  EF24  F009         	goto	l4580
  4151  00122C                     u5650:
  4152  00122C                     
  4153                           ; BSR set to: 0
  4154  00122C  BF9A               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4155  00122E  EF22  F009         	goto	u5661
  4156  001232  519A               	movf	(efgtoa@n+1)& (0+255),w,b
  4157  001234  E109               	bnz	u5660
  4158  001236  0E4B               	movlw	75
  4159  001238  5D99               	subwf	efgtoa@n& (0+255),w,b
  4160  00123A  A0D8               	btfss	status,0,c
  4161  00123C  EF22  F009         	goto	u5661
  4162  001240  EF24  F009         	goto	u5660
  4163  001244                     u5661:
  4164  001244  EF1A  F008         	goto	l4528
  4165  001248                     u5660:
  4166  001248                     l4580:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4170  001248  5179               	movf	efgtoa@pp& (0+255),w,b
  4171  00124A  117A               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4172  00124C  A4D8               	btfss	status,2,c
  4173  00124E  EF2B  F009         	goto	u5671
  4174  001252  EF2D  F009         	goto	u5670
  4175  001256                     u5671:
  4176  001256  EF3E  F009         	goto	l4588
  4177  00125A                     u5670:
  4178  00125A                     
  4179                           ; BSR set to: 0
  4180  00125A  A9F1               	btfss	_flags& (0+255),4,b
  4181  00125C  EF32  F009         	goto	u5681
  4182  001260  EF34  F009         	goto	u5680
  4183  001264                     u5681:
  4184  001264  EF3E  F009         	goto	l4588
  4185  001268                     u5680:
  4186  001268                     
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  4189  001268  0E1A               	movlw	low _dbuf
  4190  00126A  2599               	addwf	efgtoa@n& (0+255),w,b
  4191  00126C  6ED9               	movwf	fsr2l,c
  4192  00126E  0E01               	movlw	high _dbuf
  4193  001270  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4194  001272  6EDA               	movwf	fsr2h,c
  4195  001274  0E2E               	movlw	46
  4196  001276  6EDF               	movwf	indf2,c
  4197  001278                     
  4198                           ; BSR set to: 0
  4199  001278  4B99               	infsnz	efgtoa@n& (0+255),f,b
  4200  00127A  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  4201  00127C                     l4588:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  4205  00127C  0E1A               	movlw	low _dbuf
  4206  00127E  2599               	addwf	efgtoa@n& (0+255),w,b
  4207  001280  6ED9               	movwf	fsr2l,c
  4208  001282  0E01               	movlw	high _dbuf
  4209  001284  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4210  001286  6EDA               	movwf	fsr2h,c
  4211  001288  0E00               	movlw	0
  4212  00128A  6EDF               	movwf	indf2,c
  4213  00128C                     
  4214                           ; BSR set to: 0
  4215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  4216  00128C  0E65               	movlw	101
  4217  00128E  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  4218  001290  A4D8               	btfss	status,2,c
  4219  001292  EF4D  F009         	goto	u5691
  4220  001296  EF4F  F009         	goto	u5690
  4221  00129A                     u5691:
  4222  00129A  EFFD  F004         	goto	l4400
  4223  00129E                     u5690:
  4224  00129E                     
  4225                           ; BSR set to: 0
  4226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  4227  00129E  0E00               	movlw	0
  4228  0012A0  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  4229  0012A2  0E4F               	movlw	79
  4230  0012A4  6F91               	movwf	efgtoa@i& (0+255),b
  4231  0012A6                     
  4232                           ; BSR set to: 0
  4233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  4234  0012A6  0E1A               	movlw	low _dbuf
  4235  0012A8  2591               	addwf	efgtoa@i& (0+255),w,b
  4236  0012AA  6ED9               	movwf	fsr2l,c
  4237  0012AC  0E01               	movlw	high _dbuf
  4238  0012AE  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4239  0012B0  6EDA               	movwf	fsr2h,c
  4240  0012B2  0E00               	movlw	0
  4241  0012B4  6EDF               	movwf	indf2,c
  4242  0012B6                     
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  4245  0012B6  0E00               	movlw	0
  4246  0012B8  6F82               	movwf	(efgtoa@sign+1)& (0+255),b
  4247  0012BA  0E00               	movlw	0
  4248  0012BC  6F81               	movwf	efgtoa@sign& (0+255),b
  4249  0012BE                     
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  4252  0012BE  BF98               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4253  0012C0  EF66  F009         	goto	u5700
  4254  0012C4  EF64  F009         	goto	u5701
  4255  0012C8                     u5701:
  4256  0012C8  EF6E  F009         	goto	l4604
  4257  0012CC                     u5700:
  4258  0012CC                     
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  4261  0012CC  0E00               	movlw	0
  4262  0012CE  6F82               	movwf	(efgtoa@sign+1)& (0+255),b
  4263  0012D0  0E01               	movlw	1
  4264  0012D2  6F81               	movwf	efgtoa@sign& (0+255),b
  4265  0012D4                     
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  4268  0012D4  6D97               	negf	efgtoa@e& (0+255),b
  4269  0012D6  1F98               	comf	(efgtoa@e+1)& (0+255),f,b
  4270  0012D8  B0D8               	btfsc	status,0,c
  4271  0012DA  2B98               	incf	(efgtoa@e+1)& (0+255),f,b
  4272  0012DC                     l4604:
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  4276  0012DC  0E00               	movlw	0
  4277  0012DE  6F84               	movwf	(efgtoa@p+1)& (0+255),b
  4278  0012E0  0E02               	movlw	2
  4279  0012E2  6F83               	movwf	efgtoa@p& (0+255),b
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4282  0012E4  EF9F  F009         	goto	l4616
  4283  0012E8                     l4606:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  4287  0012E8  0791               	decf	efgtoa@i& (0+255),f,b
  4288  0012EA  A0D8               	btfss	status,0,c
  4289  0012EC  0792               	decf	(efgtoa@i+1)& (0+255),f,b
  4290  0012EE                     
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  4293  0012EE  0E1A               	movlw	low _dbuf
  4294  0012F0  2591               	addwf	efgtoa@i& (0+255),w,b
  4295  0012F2  6ED9               	movwf	fsr2l,c
  4296  0012F4  0E01               	movlw	high _dbuf
  4297  0012F6  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4298  0012F8  6EDA               	movwf	fsr2h,c
  4299  0012FA  C097  F001         	movff	efgtoa@e,___awmod@dividend
  4300  0012FE  C098  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4301  001302  0E00               	movlw	0
  4302  001304  6E04               	movwf	(___awmod@divisor+1)^0,c
  4303  001306  0E0A               	movlw	10
  4304  001308  6E03               	movwf	___awmod@divisor^0,c
  4305  00130A  EC59  F022         	call	___awmod	;wreg free
  4306  00130E  5001               	movf	?___awmod^0,w,c
  4307  001310  0F30               	addlw	48
  4308  001312  6EDF               	movwf	indf2,c
  4309  001314                     
  4310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  4311  001314  C097  F001         	movff	efgtoa@e,___awdiv@dividend
  4312  001318  C098  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4313  00131C  0E00               	movlw	0
  4314  00131E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4315  001320  0E0A               	movlw	10
  4316  001322  6E03               	movwf	___awdiv@divisor^0,c
  4317  001324  ECF7  F021         	call	___awdiv	;wreg free
  4318  001328  C001  F097         	movff	?___awdiv,efgtoa@e
  4319  00132C  C002  F098         	movff	?___awdiv+1,efgtoa@e+1
  4320  001330                     
  4321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  4322  001330  0100               	movlb	0	; () banked
  4323  001332  0783               	decf	efgtoa@p& (0+255),f,b
  4324  001334  A0D8               	btfss	status,0,c
  4325  001336  0784               	decf	(efgtoa@p+1)& (0+255),f,b
  4326  001338                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  4329  001338  0786               	decf	efgtoa@w& (0+255),f,b
  4330  00133A  A0D8               	btfss	status,0,c
  4331  00133C  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  4332  00133E                     l4616:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4336  00133E  5197               	movf	efgtoa@e& (0+255),w,b
  4337  001340  1198               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4338  001342  A4D8               	btfss	status,2,c
  4339  001344  EFA6  F009         	goto	u5711
  4340  001348  EFA8  F009         	goto	u5710
  4341  00134C                     u5711:
  4342  00134C  EF74  F009         	goto	l4606
  4343  001350                     u5710:
  4344  001350                     
  4345                           ; BSR set to: 0
  4346  001350  BF84               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4347  001352  EFB5  F009         	goto	u5720
  4348  001356  5184               	movf	(efgtoa@p+1)& (0+255),w,b
  4349  001358  E106               	bnz	u5721
  4350  00135A  0583               	decf	efgtoa@p& (0+255),w,b
  4351  00135C  B0D8               	btfsc	status,0,c
  4352  00135E  EFB3  F009         	goto	u5721
  4353  001362  EFB5  F009         	goto	u5720
  4354  001366                     u5721:
  4355  001366  EF74  F009         	goto	l4606
  4356  00136A                     u5720:
  4357  00136A                     
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4360  00136A  0791               	decf	efgtoa@i& (0+255),f,b
  4361  00136C  A0D8               	btfss	status,0,c
  4362  00136E  0792               	decf	(efgtoa@i+1)& (0+255),f,b
  4363  001370                     
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  4366  001370  5181               	movf	efgtoa@sign& (0+255),w,b
  4367  001372  1182               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4368  001374  A4D8               	btfss	status,2,c
  4369  001376  EFBF  F009         	goto	u5731
  4370  00137A  EFC1  F009         	goto	u5730
  4371  00137E                     u5731:
  4372  00137E  EFC7  F009         	goto	l4626
  4373  001382                     u5730:
  4374  001382                     
  4375                           ; BSR set to: 0
  4376  001382  0E00               	movlw	0
  4377  001384  6F72               	movwf	(_efgtoa$937+1)& (0+255),b
  4378  001386  0E2B               	movlw	43
  4379  001388  6F71               	movwf	_efgtoa$937& (0+255),b
  4380  00138A  EFCB  F009         	goto	l4628
  4381  00138E                     l4626:
  4382                           
  4383                           ; BSR set to: 0
  4384  00138E  0E00               	movlw	0
  4385  001390  6F72               	movwf	(_efgtoa$937+1)& (0+255),b
  4386  001392  0E2D               	movlw	45
  4387  001394  6F71               	movwf	_efgtoa$937& (0+255),b
  4388  001396                     l4628:
  4389                           
  4390                           ; BSR set to: 0
  4391  001396  0E1A               	movlw	low _dbuf
  4392  001398  2591               	addwf	efgtoa@i& (0+255),w,b
  4393  00139A  6ED9               	movwf	fsr2l,c
  4394  00139C  0E01               	movlw	high _dbuf
  4395  00139E  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4396  0013A0  6EDA               	movwf	fsr2h,c
  4397  0013A2  C071  FFDF         	movff	_efgtoa$937,indf2
  4398  0013A6                     
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4401  0013A6  0786               	decf	efgtoa@w& (0+255),f,b
  4402  0013A8  A0D8               	btfss	status,0,c
  4403  0013AA  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  4404  0013AC                     
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4407  0013AC  0791               	decf	efgtoa@i& (0+255),f,b
  4408  0013AE  A0D8               	btfss	status,0,c
  4409  0013B0  0792               	decf	(efgtoa@i+1)& (0+255),f,b
  4410  0013B2                     
  4411                           ; BSR set to: 0
  4412  0013B2  0EBF               	movlw	191
  4413  0013B4  6E5B               	movwf	??_efgtoa^0,c
  4414  0013B6  0EFF               	movlw	255
  4415  0013B8  6E5C               	movwf	(??_efgtoa+1)^0,c
  4416  0013BA  5166               	movf	efgtoa@c& (0+255),w,b
  4417  0013BC  6E5D               	movwf	(??_efgtoa+2)^0,c
  4418  0013BE  6A5E               	clrf	(??_efgtoa+3)^0,c
  4419  0013C0  505B               	movf	??_efgtoa^0,w,c
  4420  0013C2  265D               	addwf	(??_efgtoa+2)^0,f,c
  4421  0013C4  505C               	movf	(??_efgtoa+1)^0,w,c
  4422  0013C6  225E               	addwfc	(??_efgtoa+3)^0,f,c
  4423  0013C8  505E               	movf	(??_efgtoa+3)^0,w,c
  4424  0013CA  E10A               	bnz	u5740
  4425  0013CC  0E1A               	movlw	26
  4426  0013CE  5C5D               	subwf	(??_efgtoa+2)^0,w,c
  4427  0013D0  A0D8               	btfss	status,0,c
  4428  0013D2  EFED  F009         	goto	u5741
  4429  0013D6  EFF0  F009         	goto	u5740
  4430  0013DA                     u5741:
  4431  0013DA  0E01               	movlw	1
  4432  0013DC  EFF1  F009         	goto	u5750
  4433  0013E0                     u5740:
  4434  0013E0  0E00               	movlw	0
  4435  0013E2                     u5750:
  4436  0013E2  6F75               	movwf	_efgtoa$939& (0+255),b
  4437  0013E4  6B76               	clrf	(_efgtoa$939+1)& (0+255),b
  4438  0013E6                     
  4439                           ; BSR set to: 0
  4440  0013E6  5175               	movf	_efgtoa$939& (0+255),w,b
  4441  0013E8  1176               	iorwf	(_efgtoa$939+1)& (0+255),w,b
  4442  0013EA  A4D8               	btfss	status,2,c
  4443  0013EC  EFFA  F009         	goto	u5761
  4444  0013F0  EFFC  F009         	goto	u5760
  4445  0013F4                     u5761:
  4446  0013F4  EF02  F00A         	goto	l4642
  4447  0013F8                     u5760:
  4448  0013F8                     
  4449                           ; BSR set to: 0
  4450  0013F8  0E00               	movlw	0
  4451  0013FA  6F74               	movwf	(_efgtoa$938+1)& (0+255),b
  4452  0013FC  0E65               	movlw	101
  4453  0013FE  6F73               	movwf	_efgtoa$938& (0+255),b
  4454  001400  EF06  F00A         	goto	l4644
  4455  001404                     l4642:
  4456                           
  4457                           ; BSR set to: 0
  4458  001404  0E00               	movlw	0
  4459  001406  6F74               	movwf	(_efgtoa$938+1)& (0+255),b
  4460  001408  0E45               	movlw	69
  4461  00140A  6F73               	movwf	_efgtoa$938& (0+255),b
  4462  00140C                     l4644:
  4463                           
  4464                           ; BSR set to: 0
  4465  00140C  0E1A               	movlw	low _dbuf
  4466  00140E  2591               	addwf	efgtoa@i& (0+255),w,b
  4467  001410  6ED9               	movwf	fsr2l,c
  4468  001412  0E01               	movlw	high _dbuf
  4469  001414  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4470  001416  6EDA               	movwf	fsr2h,c
  4471  001418  C073  FFDF         	movff	_efgtoa$938,indf2
  4472  00141C                     
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4475  00141C  0786               	decf	efgtoa@w& (0+255),f,b
  4476  00141E  A0D8               	btfss	status,0,c
  4477  001420  0787               	decf	(efgtoa@w+1)& (0+255),f,b
  4478  001422                     
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4481  001422  0E1A               	movlw	low _dbuf
  4482  001424  2599               	addwf	efgtoa@n& (0+255),w,b
  4483  001426  6E01               	movwf	strcpy@dest^0,c
  4484  001428  0E01               	movlw	high _dbuf
  4485  00142A  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4486  00142C  6E02               	movwf	(strcpy@dest+1)^0,c
  4487  00142E  0E1A               	movlw	low _dbuf
  4488  001430  2591               	addwf	efgtoa@i& (0+255),w,b
  4489  001432  6E03               	movwf	strcpy@src^0,c
  4490  001434  0E01               	movlw	high _dbuf
  4491  001436  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4492  001438  6E04               	movwf	(strcpy@src+1)^0,c
  4493  00143A  EC9A  F023         	call	_strcpy	;wreg free
  4494  00143E  EFFD  F004         	goto	l4400
  4495  001442                     l1004:
  4496  001442  0012               	return		;funcret
  4497  001444                     __end_of_efgtoa:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function _tolower *****************
  4501 ;; Defined at:
  4502 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  c               2    6[COMRAM] int 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  2    6[COMRAM] int 
  4509 ;; Registers used:
  4510 ;;		wreg, status,2, status,0
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4516 ;;      Params:         2       0       0       0       0       0       0       0       0
  4517 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4518 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4519 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4520 ;;Total ram usage:        8 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    1
  4523 ;; This function calls:
  4524 ;;		_isupper
  4525 ;; This function is called by:
  4526 ;;		_efgtoa
  4527 ;;		_vfpfcnvrt
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text6
  4532  004676                     __ptext6:
  4533                           	callstack 0
  4534  004676                     _tolower:
  4535                           	callstack 26
  4536  004676  0EBF               	movlw	191
  4537  004678  6E09               	movwf	??_tolower^0,c
  4538  00467A  0EFF               	movlw	255
  4539  00467C  6E0A               	movwf	(??_tolower+1)^0,c
  4540  00467E  C007  F00B         	movff	tolower@c,??_tolower+2
  4541  004682  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4542  004686  5009               	movf	??_tolower^0,w,c
  4543  004688  260B               	addwf	(??_tolower+2)^0,f,c
  4544  00468A  500A               	movf	(??_tolower+1)^0,w,c
  4545  00468C  220C               	addwfc	(??_tolower+3)^0,f,c
  4546  00468E  500C               	movf	(??_tolower+3)^0,w,c
  4547  004690  E10A               	bnz	u4910
  4548  004692  0E1A               	movlw	26
  4549  004694  5C0B               	subwf	(??_tolower+2)^0,w,c
  4550  004696  A0D8               	btfss	status,0,c
  4551  004698  EF50  F023         	goto	u4911
  4552  00469C  EF53  F023         	goto	u4910
  4553  0046A0                     u4911:
  4554  0046A0  0E01               	movlw	1
  4555  0046A2  EF54  F023         	goto	u4920
  4556  0046A6                     u4910:
  4557  0046A6  0E00               	movlw	0
  4558  0046A8                     u4920:
  4559  0046A8  6E0D               	movwf	_tolower$1089^0,c
  4560  0046AA  6A0E               	clrf	(_tolower$1089+1)^0,c
  4561  0046AC  500D               	movf	_tolower$1089^0,w,c
  4562  0046AE  100E               	iorwf	(_tolower$1089+1)^0,w,c
  4563  0046B0  B4D8               	btfsc	status,2,c
  4564  0046B2  EF5D  F023         	goto	u4931
  4565  0046B6  EF5F  F023         	goto	u4930
  4566  0046BA                     u4931:
  4567  0046BA  EF66  F023         	goto	l1254
  4568  0046BE                     u4930:
  4569  0046BE  0E20               	movlw	32
  4570  0046C0  1007               	iorwf	tolower@c^0,w,c
  4571  0046C2  6E07               	movwf	?_tolower^0,c
  4572  0046C4  5008               	movf	(tolower@c+1)^0,w,c
  4573  0046C6  6E08               	movwf	(?_tolower+1)^0,c
  4574  0046C8  EF6A  F023         	goto	l1259
  4575  0046CC                     l1254:
  4576  0046CC  C007  F007         	movff	tolower@c,?_tolower
  4577  0046D0  C008  F008         	movff	tolower@c+1,?_tolower+1
  4578  0046D4                     l1259:
  4579  0046D4  0012               	return		;funcret
  4580  0046D6                     __end_of_tolower:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function _isupper *****************
  4584 ;; Defined at:
  4585 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  c               2    0[COMRAM] int 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  2    0[COMRAM] int 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4599 ;;      Params:         2       0       0       0       0       0       0       0       0
  4600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4601 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4602 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4603 ;;Total ram usage:        6 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_efgtoa
  4609 ;;		_vfpfcnvrt
  4610 ;;		_tolower
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text7
  4615  004A7A                     __ptext7:
  4616                           	callstack 0
  4617  004A7A                     _isupper:
  4618                           	callstack 26
  4619  004A7A  0EBF               	movlw	191
  4620  004A7C  6E03               	movwf	??_isupper^0,c
  4621  004A7E  0EFF               	movlw	255
  4622  004A80  6E04               	movwf	(??_isupper+1)^0,c
  4623  004A82  C001  F005         	movff	isupper@c,??_isupper+2
  4624  004A86  C002  F006         	movff	isupper@c+1,??_isupper+3
  4625  004A8A  5003               	movf	??_isupper^0,w,c
  4626  004A8C  2605               	addwf	(??_isupper+2)^0,f,c
  4627  004A8E  5004               	movf	(??_isupper+1)^0,w,c
  4628  004A90  2206               	addwfc	(??_isupper+3)^0,f,c
  4629  004A92  5006               	movf	(??_isupper+3)^0,w,c
  4630  004A94  E10A               	bnz	u3920
  4631  004A96  0E1A               	movlw	26
  4632  004A98  5C05               	subwf	(??_isupper+2)^0,w,c
  4633  004A9A  A0D8               	btfss	status,0,c
  4634  004A9C  EF52  F025         	goto	u3921
  4635  004AA0  EF55  F025         	goto	u3920
  4636  004AA4                     u3921:
  4637  004AA4  0E01               	movlw	1
  4638  004AA6  EF56  F025         	goto	u3930
  4639  004AAA                     u3920:
  4640  004AAA  0E00               	movlw	0
  4641  004AAC                     u3930:
  4642  004AAC  6E01               	movwf	?_isupper^0,c
  4643  004AAE  6A02               	clrf	(?_isupper+1)^0,c
  4644  004AB0  0012               	return		;funcret
  4645  004AB2                     __end_of_isupper:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _strcpy *****************
  4649 ;; Defined at:
  4650 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4653 ;;		 -> dbuf(80), 
  4654 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4655 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4656 ;;		 -> dbuf(80), 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  d               2    8[COMRAM] PTR unsigned char 
  4659 ;;		 -> dbuf(80), 
  4660 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4661 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  4662 ;;		 -> dbuf(80), 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    0[COMRAM] PTR unsigned char 
  4665 ;; Registers used:
  4666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4672 ;;      Params:         4       0       0       0       0       0       0       0       0
  4673 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4674 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4675 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4676 ;;Total ram usage:       10 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_efgtoa
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text8
  4686  004734                     __ptext8:
  4687                           	callstack 0
  4688  004734                     _strcpy:
  4689                           	callstack 26
  4690  004734  C003  F007         	movff	strcpy@src,strcpy@s
  4691  004738  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4692  00473C  C001  F009         	movff	strcpy@dest,strcpy@d
  4693  004740  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4694  004744                     l4222:
  4695  004744  5007               	movf	strcpy@s^0,w,c
  4696  004746  6E05               	movwf	??_strcpy^0,c
  4697  004748  5008               	movf	(strcpy@s+1)^0,w,c
  4698  00474A  6E06               	movwf	(??_strcpy+1)^0,c
  4699  00474C  4A07               	infsnz	strcpy@s^0,f,c
  4700  00474E  2A08               	incf	(strcpy@s+1)^0,f,c
  4701  004750  C005  FFF6         	movff	??_strcpy,tblptrl
  4702  004754  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4703  004758  6AF8               	clrf	tblptru,c
  4704  00475A  C009  FFD9         	movff	strcpy@d,fsr2l
  4705  00475E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4706  004762  4A09               	infsnz	strcpy@d^0,f,c
  4707  004764  2A0A               	incf	(strcpy@d+1)^0,f,c
  4708  004766  0E07               	movlw	(high __ramtop+-1)
  4709  004768  64F7               	cpfsgt	tblptrh,c
  4710  00476A  D003               	bra	u4897
  4711  00476C  0008               	tblrd		*
  4712  00476E  50F5               	movf	tablat,w,c
  4713  004770  D005               	bra	u4890
  4714  004772                     u4897:
  4715  004772  CFF6 FFE1          	movff	tblptrl,fsr1l
  4716  004776  CFF7 FFE2          	movff	tblptrh,fsr1h
  4717  00477A  50E7               	movf	indf1,w,c
  4718  00477C                     u4890:
  4719  00477C  6EDF               	movwf	indf2,c
  4720  00477E  50DF               	movf	indf2,w,c
  4721  004780  A4D8               	btfss	status,2,c
  4722  004782  EFC5  F023         	goto	u4901
  4723  004786  EFC7  F023         	goto	u4900
  4724  00478A                     u4901:
  4725  00478A  EFA2  F023         	goto	l4222
  4726  00478E                     u4900:
  4727  00478E  0012               	return		;funcret
  4728  004790                     __end_of_strcpy:
  4729                           	callstack 0
  4730                           
  4731 ;; *************** function _floorf *****************
  4732 ;; Defined at:
  4733 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  x               4   64[COMRAM] float 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  u               4   80[COMRAM] struct .
  4738 ;;  m               4   74[COMRAM] unsigned long 
  4739 ;;  e               2   78[COMRAM] int 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  4   64[COMRAM] float 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4749 ;;      Params:         4       0       0       0       0       0       0       0       0
  4750 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4751 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4752 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4753 ;;Total ram usage:       20 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_efgtoa
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text9
  4763  00363E                     __ptext9:
  4764                           	callstack 0
  4765  00363E                     _floorf:
  4766                           	callstack 26
  4767  00363E  C100  F051         	movff	floorf@F524,floorf@u
  4768  003642  C101  F052         	movff	floorf@F524+1,floorf@u+1
  4769  003646  C102  F053         	movff	floorf@F524+2,floorf@u+2
  4770  00364A  C103  F054         	movff	floorf@F524+3,floorf@u+3
  4771  00364E  C041  F051         	movff	floorf@x,floorf@u
  4772  003652  C042  F052         	movff	floorf@x+1,floorf@u+1
  4773  003656  C043  F053         	movff	floorf@x+2,floorf@u+2
  4774  00365A  C044  F054         	movff	floorf@x+3,floorf@u+3
  4775  00365E  0E81               	movlw	129
  4776  003660  6E45               	movwf	??_floorf^0,c
  4777  003662  0EFF               	movlw	255
  4778  003664  6E46               	movwf	(??_floorf+1)^0,c
  4779  003666  C051  F047         	movff	floorf@u,??_floorf+2
  4780  00366A  C052  F048         	movff	floorf@u+1,??_floorf+3
  4781  00366E  C053  F049         	movff	floorf@u+2,??_floorf+4
  4782  003672  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4783  003676  0E18               	movlw	24
  4784  003678  EF43  F01B         	goto	u4940
  4785  00367C                     u4945:
  4786  00367C  90D8               	bcf	status,0,c
  4787  00367E  324A               	rrcf	(??_floorf+5)^0,f,c
  4788  003680  3249               	rrcf	(??_floorf+4)^0,f,c
  4789  003682  3248               	rrcf	(??_floorf+3)^0,f,c
  4790  003684  3247               	rrcf	(??_floorf+2)^0,f,c
  4791  003686                     u4940:
  4792  003686  2EE8               	decfsz	wreg,f,c
  4793  003688  EF3E  F01B         	goto	u4945
  4794  00368C  5047               	movf	(??_floorf+2)^0,w,c
  4795  00368E  2445               	addwf	??_floorf^0,w,c
  4796  003690  6E4F               	movwf	floorf@e^0,c
  4797  003692  0E00               	movlw	0
  4798  003694  2046               	addwfc	(??_floorf+1)^0,w,c
  4799  003696  6E50               	movwf	(floorf@e+1)^0,c
  4800  003698  BE50               	btfsc	(floorf@e+1)^0,7,c
  4801  00369A  EF58  F01B         	goto	u4951
  4802  00369E  5050               	movf	(floorf@e+1)^0,w,c
  4803  0036A0  E109               	bnz	u4950
  4804  0036A2  0E17               	movlw	23
  4805  0036A4  5C4F               	subwf	floorf@e^0,w,c
  4806  0036A6  A0D8               	btfss	status,0,c
  4807  0036A8  EF58  F01B         	goto	u4951
  4808  0036AC  EF5A  F01B         	goto	u4950
  4809  0036B0                     u4951:
  4810  0036B0  EF64  F01B         	goto	l4240
  4811  0036B4                     u4950:
  4812  0036B4                     l4238:
  4813  0036B4  C041  F041         	movff	floorf@x,?_floorf
  4814  0036B8  C042  F042         	movff	floorf@x+1,?_floorf+1
  4815  0036BC  C043  F043         	movff	floorf@x+2,?_floorf+2
  4816  0036C0  C044  F044         	movff	floorf@x+3,?_floorf+3
  4817  0036C4  EF27  F01C         	goto	l1178
  4818  0036C8                     l4240:
  4819  0036C8  BE50               	btfsc	(floorf@e+1)^0,7,c
  4820  0036CA  EF69  F01B         	goto	u4961
  4821  0036CE  EF6B  F01B         	goto	u4960
  4822  0036D2                     u4961:
  4823  0036D2  EFDB  F01B         	goto	l4250
  4824  0036D6                     u4960:
  4825  0036D6  C04F  F045         	movff	floorf@e,??_floorf
  4826  0036DA  0EFF               	movlw	255
  4827  0036DC  6E46               	movwf	(??_floorf+1)^0,c
  4828  0036DE  0EFF               	movlw	255
  4829  0036E0  6E47               	movwf	(??_floorf+2)^0,c
  4830  0036E2  0E7F               	movlw	127
  4831  0036E4  6E48               	movwf	(??_floorf+3)^0,c
  4832  0036E6  0E00               	movlw	0
  4833  0036E8  6E49               	movwf	(??_floorf+4)^0,c
  4834  0036EA                     u4975:
  4835  0036EA  6645               	tstfsz	??_floorf^0,c
  4836  0036EC  EF7A  F01B         	goto	u4976
  4837  0036F0  EF82  F01B         	goto	u4977
  4838  0036F4                     u4976:
  4839  0036F4  3449               	rlcf	(??_floorf+4)^0,w,c
  4840  0036F6  3249               	rrcf	(??_floorf+4)^0,f,c
  4841  0036F8  3248               	rrcf	(??_floorf+3)^0,f,c
  4842  0036FA  3247               	rrcf	(??_floorf+2)^0,f,c
  4843  0036FC  3246               	rrcf	(??_floorf+1)^0,f,c
  4844  0036FE  2E45               	decfsz	??_floorf^0,f,c
  4845  003700  EF75  F01B         	goto	u4975
  4846  003704                     u4977:
  4847  003704  C046  F04B         	movff	??_floorf+1,floorf@m
  4848  003708  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4849  00370C  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4850  003710  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4851  003714  504B               	movf	floorf@m^0,w,c
  4852  003716  1451               	andwf	floorf@u^0,w,c
  4853  003718  6E45               	movwf	??_floorf^0,c
  4854  00371A  504C               	movf	(floorf@m+1)^0,w,c
  4855  00371C  1452               	andwf	(floorf@u+1)^0,w,c
  4856  00371E  6E46               	movwf	(??_floorf+1)^0,c
  4857  003720  504D               	movf	(floorf@m+2)^0,w,c
  4858  003722  1453               	andwf	(floorf@u+2)^0,w,c
  4859  003724  6E47               	movwf	(??_floorf+2)^0,c
  4860  003726  504E               	movf	(floorf@m+3)^0,w,c
  4861  003728  1454               	andwf	(floorf@u+3)^0,w,c
  4862  00372A  6E48               	movwf	(??_floorf+3)^0,c
  4863  00372C  5045               	movf	??_floorf^0,w,c
  4864  00372E  1046               	iorwf	(??_floorf+1)^0,w,c
  4865  003730  1047               	iorwf	(??_floorf+2)^0,w,c
  4866  003732  1048               	iorwf	(??_floorf+3)^0,w,c
  4867  003734  A4D8               	btfss	status,2,c
  4868  003736  EF9F  F01B         	goto	u4981
  4869  00373A  EFA1  F01B         	goto	u4980
  4870  00373E                     u4981:
  4871  00373E  EFA3  F01B         	goto	l4246
  4872  003742                     u4980:
  4873  003742  EF5A  F01B         	goto	l4238
  4874  003746                     l4246:
  4875  003746  C051  F045         	movff	floorf@u,??_floorf
  4876  00374A  C052  F046         	movff	floorf@u+1,??_floorf+1
  4877  00374E  C053  F047         	movff	floorf@u+2,??_floorf+2
  4878  003752  C054  F048         	movff	floorf@u+3,??_floorf+3
  4879  003756  0E20               	movlw	32
  4880  003758  EFB3  F01B         	goto	u4990
  4881  00375C                     u4995:
  4882  00375C  90D8               	bcf	status,0,c
  4883  00375E  3248               	rrcf	(??_floorf+3)^0,f,c
  4884  003760  3247               	rrcf	(??_floorf+2)^0,f,c
  4885  003762  3246               	rrcf	(??_floorf+1)^0,f,c
  4886  003764  3245               	rrcf	??_floorf^0,f,c
  4887  003766                     u4990:
  4888  003766  2EE8               	decfsz	wreg,f,c
  4889  003768  EFAE  F01B         	goto	u4995
  4890  00376C  5045               	movf	??_floorf^0,w,c
  4891  00376E  1046               	iorwf	(??_floorf+1)^0,w,c
  4892  003770  1047               	iorwf	(??_floorf+2)^0,w,c
  4893  003772  1048               	iorwf	(??_floorf+3)^0,w,c
  4894  003774  B4D8               	btfsc	status,2,c
  4895  003776  EFBF  F01B         	goto	u5001
  4896  00377A  EFC1  F01B         	goto	u5000
  4897  00377E                     u5001:
  4898  00377E  EFC9  F01B         	goto	l1181
  4899  003782                     u5000:
  4900  003782  504B               	movf	floorf@m^0,w,c
  4901  003784  2651               	addwf	floorf@u^0,f,c
  4902  003786  504C               	movf	(floorf@m+1)^0,w,c
  4903  003788  2252               	addwfc	(floorf@u+1)^0,f,c
  4904  00378A  504D               	movf	(floorf@m+2)^0,w,c
  4905  00378C  2253               	addwfc	(floorf@u+2)^0,f,c
  4906  00378E  504E               	movf	(floorf@m+3)^0,w,c
  4907  003790  2254               	addwfc	(floorf@u+3)^0,f,c
  4908  003792                     l1181:
  4909  003792  1C4B               	comf	floorf@m^0,w,c
  4910  003794  6E45               	movwf	??_floorf^0,c
  4911  003796  1C4C               	comf	(floorf@m+1)^0,w,c
  4912  003798  6E46               	movwf	(??_floorf+1)^0,c
  4913  00379A  1C4D               	comf	(floorf@m+2)^0,w,c
  4914  00379C  6E47               	movwf	(??_floorf+2)^0,c
  4915  00379E  1C4E               	comf	(floorf@m+3)^0,w,c
  4916  0037A0  6E48               	movwf	(??_floorf+3)^0,c
  4917  0037A2  5045               	movf	??_floorf^0,w,c
  4918  0037A4  1651               	andwf	floorf@u^0,f,c
  4919  0037A6  5046               	movf	(??_floorf+1)^0,w,c
  4920  0037A8  1652               	andwf	(floorf@u+1)^0,f,c
  4921  0037AA  5047               	movf	(??_floorf+2)^0,w,c
  4922  0037AC  1653               	andwf	(floorf@u+2)^0,f,c
  4923  0037AE  5048               	movf	(??_floorf+3)^0,w,c
  4924  0037B0  1654               	andwf	(floorf@u+3)^0,f,c
  4925  0037B2  EF1F  F01C         	goto	l4258
  4926  0037B6                     l4250:
  4927  0037B6  C051  F045         	movff	floorf@u,??_floorf
  4928  0037BA  C052  F046         	movff	floorf@u+1,??_floorf+1
  4929  0037BE  C053  F047         	movff	floorf@u+2,??_floorf+2
  4930  0037C2  C054  F048         	movff	floorf@u+3,??_floorf+3
  4931  0037C6  0E20               	movlw	32
  4932  0037C8  EFEB  F01B         	goto	u5010
  4933  0037CC                     u5015:
  4934  0037CC  90D8               	bcf	status,0,c
  4935  0037CE  3248               	rrcf	(??_floorf+3)^0,f,c
  4936  0037D0  3247               	rrcf	(??_floorf+2)^0,f,c
  4937  0037D2  3246               	rrcf	(??_floorf+1)^0,f,c
  4938  0037D4  3245               	rrcf	??_floorf^0,f,c
  4939  0037D6                     u5010:
  4940  0037D6  2EE8               	decfsz	wreg,f,c
  4941  0037D8  EFE6  F01B         	goto	u5015
  4942  0037DC  5045               	movf	??_floorf^0,w,c
  4943  0037DE  1046               	iorwf	(??_floorf+1)^0,w,c
  4944  0037E0  1047               	iorwf	(??_floorf+2)^0,w,c
  4945  0037E2  1048               	iorwf	(??_floorf+3)^0,w,c
  4946  0037E4  A4D8               	btfss	status,2,c
  4947  0037E6  EFF7  F01B         	goto	u5021
  4948  0037EA  EFF9  F01B         	goto	u5020
  4949  0037EE                     u5021:
  4950  0037EE  EF03  F01C         	goto	l4254
  4951  0037F2                     u5020:
  4952  0037F2  0E00               	movlw	0
  4953  0037F4  6E51               	movwf	floorf@u^0,c
  4954  0037F6  0E00               	movlw	0
  4955  0037F8  6E52               	movwf	(floorf@u+1)^0,c
  4956  0037FA  0E00               	movlw	0
  4957  0037FC  6E53               	movwf	(floorf@u+2)^0,c
  4958  0037FE  0E00               	movlw	0
  4959  003800  6E54               	movwf	(floorf@u+3)^0,c
  4960  003802  EF1F  F01C         	goto	l4258
  4961  003806                     l4254:
  4962  003806  90D8               	bcf	status,0,c
  4963  003808  3451               	rlcf	floorf@u^0,w,c
  4964  00380A  6E45               	movwf	??_floorf^0,c
  4965  00380C  3452               	rlcf	(floorf@u+1)^0,w,c
  4966  00380E  6E46               	movwf	(??_floorf+1)^0,c
  4967  003810  3453               	rlcf	(floorf@u+2)^0,w,c
  4968  003812  6E47               	movwf	(??_floorf+2)^0,c
  4969  003814  3454               	rlcf	(floorf@u+3)^0,w,c
  4970  003816  6E48               	movwf	(??_floorf+3)^0,c
  4971  003818  5045               	movf	??_floorf^0,w,c
  4972  00381A  1046               	iorwf	(??_floorf+1)^0,w,c
  4973  00381C  1047               	iorwf	(??_floorf+2)^0,w,c
  4974  00381E  1048               	iorwf	(??_floorf+3)^0,w,c
  4975  003820  B4D8               	btfsc	status,2,c
  4976  003822  EF15  F01C         	goto	u5031
  4977  003826  EF17  F01C         	goto	u5030
  4978  00382A                     u5031:
  4979  00382A  EF1F  F01C         	goto	l4258
  4980  00382E                     u5030:
  4981  00382E  0E00               	movlw	0
  4982  003830  6E51               	movwf	floorf@u^0,c
  4983  003832  0E00               	movlw	0
  4984  003834  6E52               	movwf	(floorf@u+1)^0,c
  4985  003836  0E80               	movlw	128
  4986  003838  6E53               	movwf	(floorf@u+2)^0,c
  4987  00383A  0EBF               	movlw	191
  4988  00383C  6E54               	movwf	(floorf@u+3)^0,c
  4989  00383E                     l4258:
  4990  00383E  C051  F041         	movff	floorf@u,?_floorf
  4991  003842  C052  F042         	movff	floorf@u+1,?_floorf+1
  4992  003846  C053  F043         	movff	floorf@u+2,?_floorf+2
  4993  00384A  C054  F044         	movff	floorf@u+3,?_floorf+3
  4994  00384E                     l1178:
  4995  00384E  0012               	return		;funcret
  4996  003850                     __end_of_floorf:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function ___fpclassifyf *****************
  5000 ;; Defined at:
  5001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  x               4    0[COMRAM] float 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  u               4   10[COMRAM] struct .
  5006 ;;  e               2    8[COMRAM] int 
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  2    0[COMRAM] int 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5016 ;;      Params:         4       0       0       0       0       0       0       0       0
  5017 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5018 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5019 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5020 ;;Total ram usage:       14 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_efgtoa
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text10
  5030  00408A                     __ptext10:
  5031                           	callstack 0
  5032  00408A                     ___fpclassifyf:
  5033                           	callstack 26
  5034  00408A  C104  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5035  00408E  C105  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5036  004092  C106  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5037  004096  C107  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5038  00409A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5039  00409E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5040  0040A2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5041  0040A6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5042  0040AA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5043  0040AE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5044  0040B2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5045  0040B6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5046  0040BA  0E18               	movlw	24
  5047  0040BC  EF65  F020         	goto	u4820
  5048  0040C0                     u4825:
  5049  0040C0  90D8               	bcf	status,0,c
  5050  0040C2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5051  0040C4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5052  0040C6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5053  0040C8  3205               	rrcf	??___fpclassifyf^0,f,c
  5054  0040CA                     u4820:
  5055  0040CA  2EE8               	decfsz	wreg,f,c
  5056  0040CC  EF60  F020         	goto	u4825
  5057  0040D0  5005               	movf	??___fpclassifyf^0,w,c
  5058  0040D2  6E09               	movwf	___fpclassifyf@e^0,c
  5059  0040D4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5060  0040D6  5009               	movf	___fpclassifyf@e^0,w,c
  5061  0040D8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5062  0040DA  A4D8               	btfss	status,2,c
  5063  0040DC  EF72  F020         	goto	u4831
  5064  0040E0  EF74  F020         	goto	u4830
  5065  0040E4                     u4831:
  5066  0040E4  EF94  F020         	goto	l4210
  5067  0040E8                     u4830:
  5068  0040E8  90D8               	bcf	status,0,c
  5069  0040EA  340B               	rlcf	___fpclassifyf@u^0,w,c
  5070  0040EC  6E05               	movwf	??___fpclassifyf^0,c
  5071  0040EE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5072  0040F0  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5073  0040F2  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5074  0040F4  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5075  0040F6  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5076  0040F8  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5077  0040FA  5005               	movf	??___fpclassifyf^0,w,c
  5078  0040FC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5079  0040FE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5080  004100  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5081  004102  A4D8               	btfss	status,2,c
  5082  004104  EF86  F020         	goto	u4841
  5083  004108  EF88  F020         	goto	u4840
  5084  00410C                     u4841:
  5085  00410C  EF8E  F020         	goto	l4206
  5086  004110                     u4840:
  5087  004110  0E00               	movlw	0
  5088  004112  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5089  004114  0E02               	movlw	2
  5090  004116  6E01               	movwf	?___fpclassifyf^0,c
  5091  004118  EFC3  F020         	goto	l1133
  5092  00411C                     l4206:
  5093  00411C  0E00               	movlw	0
  5094  00411E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5095  004120  0E03               	movlw	3
  5096  004122  6E01               	movwf	?___fpclassifyf^0,c
  5097  004124  EFC3  F020         	goto	l1133
  5098  004128                     l4210:
  5099  004128  2809               	incf	___fpclassifyf@e^0,w,c
  5100  00412A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5101  00412C  A4D8               	btfss	status,2,c
  5102  00412E  EF9B  F020         	goto	u4851
  5103  004132  EF9D  F020         	goto	u4850
  5104  004136                     u4851:
  5105  004136  EFBF  F020         	goto	l4216
  5106  00413A                     u4850:
  5107  00413A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5108  00413E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5109  004142  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5110  004146  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5111  00414A  0E09               	movlw	9
  5112  00414C                     u4865:
  5113  00414C  90D8               	bcf	status,0,c
  5114  00414E  3605               	rlcf	??___fpclassifyf^0,f,c
  5115  004150  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5116  004152  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5117  004154  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5118  004156  2EE8               	decfsz	wreg,f,c
  5119  004158  EFA6  F020         	goto	u4865
  5120  00415C  5005               	movf	??___fpclassifyf^0,w,c
  5121  00415E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5122  004160  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5123  004162  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5124  004164  B4D8               	btfsc	status,2,c
  5125  004166  EFB7  F020         	goto	u4871
  5126  00416A  EFBA  F020         	goto	u4870
  5127  00416E                     u4871:
  5128  00416E  0E01               	movlw	1
  5129  004170  EFBB  F020         	goto	u4880
  5130  004174                     u4870:
  5131  004174  0E00               	movlw	0
  5132  004176                     u4880:
  5133  004176  6E01               	movwf	?___fpclassifyf^0,c
  5134  004178  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5135  00417A  EFC3  F020         	goto	l1133
  5136  00417E                     l4216:
  5137  00417E  0E00               	movlw	0
  5138  004180  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5139  004182  0E04               	movlw	4
  5140  004184  6E01               	movwf	?___fpclassifyf^0,c
  5141  004186                     l1133:
  5142  004186  0012               	return		;funcret
  5143  004188                     __end_of___fpclassifyf:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function ___fltol *****************
  5147 ;; Defined at:
  5148 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  f1              4   80[COMRAM] int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  exp1            1   89[COMRAM] unsigned char 
  5153 ;;  sign1           1   88[COMRAM] unsigned char 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  4   80[COMRAM] long 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2, status,0
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5163 ;;      Params:         4       0       0       0       0       0       0       0       0
  5164 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5165 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5166 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5167 ;;Total ram usage:       10 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;;		_efgtoa
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text11
  5178  003E80                     __ptext11:
  5179                           	callstack 0
  5180  003E80                     ___fltol:
  5181                           	callstack 26
  5182  003E80  3453               	rlcf	(___fltol@f1+2)^0,w,c
  5183  003E82  3454               	rlcf	(___fltol@f1+3)^0,w,c
  5184  003E84  6E5A               	movwf	___fltol@exp1^0,c
  5185  003E86  505A               	movf	___fltol@exp1^0,w,c
  5186  003E88  A4D8               	btfss	status,2,c
  5187  003E8A  EF49  F01F         	goto	u4701
  5188  003E8E  EF4B  F01F         	goto	u4700
  5189  003E92                     u4701:
  5190  003E92  EF55  F01F         	goto	l4134
  5191  003E96                     u4700:
  5192  003E96                     l4130:
  5193  003E96  0E00               	movlw	0
  5194  003E98  6E51               	movwf	?___fltol^0,c
  5195  003E9A  0E00               	movlw	0
  5196  003E9C  6E52               	movwf	(?___fltol+1)^0,c
  5197  003E9E  0E00               	movlw	0
  5198  003EA0  6E53               	movwf	(?___fltol+2)^0,c
  5199  003EA2  0E00               	movlw	0
  5200  003EA4  6E54               	movwf	(?___fltol+3)^0,c
  5201  003EA6  EFC2  F01F         	goto	l531
  5202  003EAA                     l4134:
  5203  003EAA  C051  F055         	movff	___fltol@f1,??___fltol
  5204  003EAE  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  5205  003EB2  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  5206  003EB6  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  5207  003EBA  0E20               	movlw	32
  5208  003EBC  EF65  F01F         	goto	u4710
  5209  003EC0                     u4715:
  5210  003EC0  90D8               	bcf	status,0,c
  5211  003EC2  3258               	rrcf	(??___fltol+3)^0,f,c
  5212  003EC4  3257               	rrcf	(??___fltol+2)^0,f,c
  5213  003EC6  3256               	rrcf	(??___fltol+1)^0,f,c
  5214  003EC8  3255               	rrcf	??___fltol^0,f,c
  5215  003ECA                     u4710:
  5216  003ECA  2EE8               	decfsz	wreg,f,c
  5217  003ECC  EF60  F01F         	goto	u4715
  5218  003ED0  5055               	movf	??___fltol^0,w,c
  5219  003ED2  6E59               	movwf	___fltol@sign1^0,c
  5220  003ED4  8E53               	bsf	(___fltol@f1+2)^0,7,c
  5221  003ED6  0EFF               	movlw	255
  5222  003ED8  1651               	andwf	___fltol@f1^0,f,c
  5223  003EDA  0EFF               	movlw	255
  5224  003EDC  1652               	andwf	(___fltol@f1+1)^0,f,c
  5225  003EDE  0EFF               	movlw	255
  5226  003EE0  1653               	andwf	(___fltol@f1+2)^0,f,c
  5227  003EE2  0E00               	movlw	0
  5228  003EE4  1654               	andwf	(___fltol@f1+3)^0,f,c
  5229  003EE6  0E96               	movlw	150
  5230  003EE8  5E5A               	subwf	___fltol@exp1^0,f,c
  5231  003EEA  BE5A               	btfsc	___fltol@exp1^0,7,c
  5232  003EEC  EF7C  F01F         	goto	u4720
  5233  003EF0  EF7A  F01F         	goto	u4721
  5234  003EF4                     u4721:
  5235  003EF4  EF92  F01F         	goto	l4154
  5236  003EF8                     u4720:
  5237  003EF8  505A               	movf	___fltol@exp1^0,w,c
  5238  003EFA  0A80               	xorlw	128
  5239  003EFC  0F97               	addlw	151
  5240  003EFE  B0D8               	btfsc	status,0,c
  5241  003F00  EF84  F01F         	goto	u4731
  5242  003F04  EF86  F01F         	goto	u4730
  5243  003F08                     u4731:
  5244  003F08  EF88  F01F         	goto	l4150
  5245  003F0C                     u4730:
  5246  003F0C  EF4B  F01F         	goto	l4130
  5247  003F10                     l4150:
  5248  003F10  90D8               	bcf	status,0,c
  5249  003F12  3254               	rrcf	(___fltol@f1+3)^0,f,c
  5250  003F14  3253               	rrcf	(___fltol@f1+2)^0,f,c
  5251  003F16  3252               	rrcf	(___fltol@f1+1)^0,f,c
  5252  003F18  3251               	rrcf	___fltol@f1^0,f,c
  5253  003F1A  3E5A               	incfsz	___fltol@exp1^0,f,c
  5254  003F1C  EF88  F01F         	goto	l4150
  5255  003F20  EFAA  F01F         	goto	l4164
  5256  003F24                     l4154:
  5257  003F24  0E1F               	movlw	31
  5258  003F26  645A               	cpfsgt	___fltol@exp1^0,c
  5259  003F28  EF98  F01F         	goto	u4741
  5260  003F2C  EF9A  F01F         	goto	u4740
  5261  003F30                     u4741:
  5262  003F30  EFA2  F01F         	goto	l4162
  5263  003F34                     u4740:
  5264  003F34  EF4B  F01F         	goto	l4130
  5265  003F38                     l4160:
  5266  003F38  90D8               	bcf	status,0,c
  5267  003F3A  3651               	rlcf	___fltol@f1^0,f,c
  5268  003F3C  3652               	rlcf	(___fltol@f1+1)^0,f,c
  5269  003F3E  3653               	rlcf	(___fltol@f1+2)^0,f,c
  5270  003F40  3654               	rlcf	(___fltol@f1+3)^0,f,c
  5271  003F42  065A               	decf	___fltol@exp1^0,f,c
  5272  003F44                     l4162:
  5273  003F44  505A               	movf	___fltol@exp1^0,w,c
  5274  003F46  A4D8               	btfss	status,2,c
  5275  003F48  EFA8  F01F         	goto	u4751
  5276  003F4C  EFAA  F01F         	goto	u4750
  5277  003F50                     u4751:
  5278  003F50  EF9C  F01F         	goto	l4160
  5279  003F54                     u4750:
  5280  003F54                     l4164:
  5281  003F54  5059               	movf	___fltol@sign1^0,w,c
  5282  003F56  B4D8               	btfsc	status,2,c
  5283  003F58  EFB0  F01F         	goto	u4761
  5284  003F5C  EFB2  F01F         	goto	u4760
  5285  003F60                     u4761:
  5286  003F60  EFBA  F01F         	goto	l4168
  5287  003F64                     u4760:
  5288  003F64  1E54               	comf	(___fltol@f1+3)^0,f,c
  5289  003F66  1E53               	comf	(___fltol@f1+2)^0,f,c
  5290  003F68  1E52               	comf	(___fltol@f1+1)^0,f,c
  5291  003F6A  6C51               	negf	___fltol@f1^0,c
  5292  003F6C  0E00               	movlw	0
  5293  003F6E  2252               	addwfc	(___fltol@f1+1)^0,f,c
  5294  003F70  2253               	addwfc	(___fltol@f1+2)^0,f,c
  5295  003F72  2254               	addwfc	(___fltol@f1+3)^0,f,c
  5296  003F74                     l4168:
  5297  003F74  C051  F051         	movff	___fltol@f1,?___fltol
  5298  003F78  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  5299  003F7C  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  5300  003F80  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  5301  003F84                     l531:
  5302  003F84  0012               	return		;funcret
  5303  003F86                     __end_of___fltol:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function ___flsub *****************
  5307 ;; Defined at:
  5308 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  b               4   80[COMRAM] long 
  5311 ;;  a               4   84[COMRAM] long 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  4   80[COMRAM] long 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5323 ;;      Params:         8       0       0       0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5326 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5327 ;;Total ram usage:        8 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    1
  5330 ;; This function calls:
  5331 ;;		___fladd
  5332 ;; This function is called by:
  5333 ;;		_efgtoa
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text12
  5338  004970                     __ptext12:
  5339                           	callstack 0
  5340  004970                     ___flsub:
  5341                           	callstack 25
  5342  004970  0E00               	movlw	0
  5343  004972  1A55               	xorwf	___flsub@a^0,f,c
  5344  004974  0E00               	movlw	0
  5345  004976  1A56               	xorwf	(___flsub@a+1)^0,f,c
  5346  004978  0E00               	movlw	0
  5347  00497A  1A57               	xorwf	(___flsub@a+2)^0,f,c
  5348  00497C  0E80               	movlw	128
  5349  00497E  1A58               	xorwf	(___flsub@a+3)^0,f,c
  5350  004980  C051  F041         	movff	___flsub@b,___fladd@b
  5351  004984  C052  F042         	movff	___flsub@b+1,___fladd@b+1
  5352  004988  C053  F043         	movff	___flsub@b+2,___fladd@b+2
  5353  00498C  C054  F044         	movff	___flsub@b+3,___fladd@b+3
  5354  004990  C055  F045         	movff	___flsub@a,___fladd@a
  5355  004994  C056  F046         	movff	___flsub@a+1,___fladd@a+1
  5356  004998  C057  F047         	movff	___flsub@a+2,___fladd@a+2
  5357  00499C  C058  F048         	movff	___flsub@a+3,___fladd@a+3
  5358  0049A0  EC1B  F00D         	call	___fladd	;wreg free
  5359  0049A4  C041  F051         	movff	?___fladd,?___flsub
  5360  0049A8  C042  F052         	movff	?___fladd+1,?___flsub+1
  5361  0049AC  C043  F053         	movff	?___fladd+2,?___flsub+2
  5362  0049B0  C044  F054         	movff	?___fladd+3,?___flsub+3
  5363  0049B4  0012               	return		;funcret
  5364  0049B6                     __end_of___flsub:
  5365                           	callstack 0
  5366                           
  5367 ;; *************** function ___fladd *****************
  5368 ;; Defined at:
  5369 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  b               4   64[COMRAM] long 
  5372 ;;  a               4   68[COMRAM] long 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  grs             1   79[COMRAM] unsigned char 
  5375 ;;  bexp            1   78[COMRAM] unsigned char 
  5376 ;;  aexp            1   77[COMRAM] unsigned char 
  5377 ;;  signs           1   76[COMRAM] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  4   64[COMRAM] unsigned char 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5387 ;;      Params:         8       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5390 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:       16 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_main
  5397 ;;		___flsub
  5398 ;;		_efgtoa
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text13
  5403  001A36                     __ptext13:
  5404                           	callstack 0
  5405  001A36                     ___fladd:
  5406                           	callstack 25
  5407  001A36  5044               	movf	(___fladd@b+3)^0,w,c
  5408  001A38  0B80               	andlw	128
  5409  001A3A  6E4D               	movwf	___fladd@signs^0,c
  5410  001A3C  5044               	movf	(___fladd@b+3)^0,w,c
  5411  001A3E  2444               	addwf	(___fladd@b+3)^0,w,c
  5412  001A40  6E4F               	movwf	___fladd@bexp^0,c
  5413  001A42  AE43               	btfss	(___fladd@b+2)^0,7,c
  5414  001A44  EF26  F00D         	goto	u3511
  5415  001A48  EF28  F00D         	goto	u3510
  5416  001A4C                     u3511:
  5417  001A4C  EF29  F00D         	goto	l3424
  5418  001A50                     u3510:
  5419  001A50  804F               	bsf	___fladd@bexp^0,0,c
  5420  001A52                     l3424:
  5421  001A52  504F               	movf	___fladd@bexp^0,w,c
  5422  001A54  B4D8               	btfsc	status,2,c
  5423  001A56  EF2F  F00D         	goto	u3521
  5424  001A5A  EF31  F00D         	goto	u3520
  5425  001A5E                     u3521:
  5426  001A5E  EF46  F00D         	goto	l3434
  5427  001A62                     u3520:
  5428  001A62  284F               	incf	___fladd@bexp^0,w,c
  5429  001A64  A4D8               	btfss	status,2,c
  5430  001A66  EF37  F00D         	goto	u3531
  5431  001A6A  EF39  F00D         	goto	u3530
  5432  001A6E                     u3531:
  5433  001A6E  EF41  F00D         	goto	l3430
  5434  001A72                     u3530:
  5435  001A72  0E00               	movlw	0
  5436  001A74  6E41               	movwf	___fladd@b^0,c
  5437  001A76  0E00               	movlw	0
  5438  001A78  6E42               	movwf	(___fladd@b+1)^0,c
  5439  001A7A  0E00               	movlw	0
  5440  001A7C  6E43               	movwf	(___fladd@b+2)^0,c
  5441  001A7E  0E00               	movlw	0
  5442  001A80  6E44               	movwf	(___fladd@b+3)^0,c
  5443  001A82                     l3430:
  5444  001A82  8E43               	bsf	(___fladd@b+2)^0,7,c
  5445  001A84  0E00               	movlw	0
  5446  001A86  6E44               	movwf	(___fladd@b+3)^0,c
  5447  001A88  EF4E  F00D         	goto	l3436
  5448  001A8C                     l3434:
  5449  001A8C  0E00               	movlw	0
  5450  001A8E  6E41               	movwf	___fladd@b^0,c
  5451  001A90  0E00               	movlw	0
  5452  001A92  6E42               	movwf	(___fladd@b+1)^0,c
  5453  001A94  0E00               	movlw	0
  5454  001A96  6E43               	movwf	(___fladd@b+2)^0,c
  5455  001A98  0E00               	movlw	0
  5456  001A9A  6E44               	movwf	(___fladd@b+3)^0,c
  5457  001A9C                     l3436:
  5458  001A9C  5048               	movf	(___fladd@a+3)^0,w,c
  5459  001A9E  0B80               	andlw	128
  5460  001AA0  6E4E               	movwf	___fladd@aexp^0,c
  5461  001AA2  504D               	movf	___fladd@signs^0,w,c
  5462  001AA4  184E               	xorwf	___fladd@aexp^0,w,c
  5463  001AA6  B4D8               	btfsc	status,2,c
  5464  001AA8  EF58  F00D         	goto	u3541
  5465  001AAC  EF5A  F00D         	goto	u3540
  5466  001AB0                     u3541:
  5467  001AB0  EF5B  F00D         	goto	l3442
  5468  001AB4                     u3540:
  5469  001AB4  8C4D               	bsf	___fladd@signs^0,6,c
  5470  001AB6                     l3442:
  5471  001AB6  5048               	movf	(___fladd@a+3)^0,w,c
  5472  001AB8  2448               	addwf	(___fladd@a+3)^0,w,c
  5473  001ABA  6E4E               	movwf	___fladd@aexp^0,c
  5474  001ABC  AE47               	btfss	(___fladd@a+2)^0,7,c
  5475  001ABE  EF63  F00D         	goto	u3551
  5476  001AC2  EF65  F00D         	goto	u3550
  5477  001AC6                     u3551:
  5478  001AC6  EF66  F00D         	goto	l3448
  5479  001ACA                     u3550:
  5480  001ACA  804E               	bsf	___fladd@aexp^0,0,c
  5481  001ACC                     l3448:
  5482  001ACC  504E               	movf	___fladd@aexp^0,w,c
  5483  001ACE  B4D8               	btfsc	status,2,c
  5484  001AD0  EF6C  F00D         	goto	u3561
  5485  001AD4  EF6E  F00D         	goto	u3560
  5486  001AD8                     u3561:
  5487  001AD8  EF83  F00D         	goto	l3458
  5488  001ADC                     u3560:
  5489  001ADC  284E               	incf	___fladd@aexp^0,w,c
  5490  001ADE  A4D8               	btfss	status,2,c
  5491  001AE0  EF74  F00D         	goto	u3571
  5492  001AE4  EF76  F00D         	goto	u3570
  5493  001AE8                     u3571:
  5494  001AE8  EF7E  F00D         	goto	l3454
  5495  001AEC                     u3570:
  5496  001AEC  0E00               	movlw	0
  5497  001AEE  6E45               	movwf	___fladd@a^0,c
  5498  001AF0  0E00               	movlw	0
  5499  001AF2  6E46               	movwf	(___fladd@a+1)^0,c
  5500  001AF4  0E00               	movlw	0
  5501  001AF6  6E47               	movwf	(___fladd@a+2)^0,c
  5502  001AF8  0E00               	movlw	0
  5503  001AFA  6E48               	movwf	(___fladd@a+3)^0,c
  5504  001AFC                     l3454:
  5505  001AFC  8E47               	bsf	(___fladd@a+2)^0,7,c
  5506  001AFE  0E00               	movlw	0
  5507  001B00  6E48               	movwf	(___fladd@a+3)^0,c
  5508  001B02  EF8B  F00D         	goto	l3460
  5509  001B06                     l3458:
  5510  001B06  0E00               	movlw	0
  5511  001B08  6E45               	movwf	___fladd@a^0,c
  5512  001B0A  0E00               	movlw	0
  5513  001B0C  6E46               	movwf	(___fladd@a+1)^0,c
  5514  001B0E  0E00               	movlw	0
  5515  001B10  6E47               	movwf	(___fladd@a+2)^0,c
  5516  001B12  0E00               	movlw	0
  5517  001B14  6E48               	movwf	(___fladd@a+3)^0,c
  5518  001B16                     l3460:
  5519  001B16  504F               	movf	___fladd@bexp^0,w,c
  5520  001B18  5C4E               	subwf	___fladd@aexp^0,w,c
  5521  001B1A  B0D8               	btfsc	status,0,c
  5522  001B1C  EF92  F00D         	goto	u3581
  5523  001B20  EF94  F00D         	goto	u3580
  5524  001B24                     u3581:
  5525  001B24  EFBB  F00D         	goto	l3496
  5526  001B28                     u3580:
  5527  001B28  AC4D               	btfss	___fladd@signs^0,6,c
  5528  001B2A  EF99  F00D         	goto	u3591
  5529  001B2E  EF9B  F00D         	goto	u3590
  5530  001B32                     u3591:
  5531  001B32  EF9D  F00D         	goto	l3466
  5532  001B36                     u3590:
  5533  001B36  0E80               	movlw	128
  5534  001B38  1A4D               	xorwf	___fladd@signs^0,f,c
  5535  001B3A                     l3466:
  5536  001B3A  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5537  001B3E  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5538  001B42  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5539  001B46  C041  F050         	movff	___fladd@b,___fladd@grs
  5540  001B4A  C045  F041         	movff	___fladd@a,___fladd@b
  5541  001B4E  C050  F045         	movff	___fladd@grs,___fladd@a
  5542  001B52  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5543  001B56  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5544  001B5A  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5545  001B5E  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5546  001B62  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5547  001B66  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5548  001B6A  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5549  001B6E  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5550  001B72  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5551  001B76                     l3496:
  5552  001B76  0E00               	movlw	0
  5553  001B78  6E50               	movwf	___fladd@grs^0,c
  5554  001B7A  504F               	movf	___fladd@bexp^0,w,c
  5555  001B7C  C04E  F049         	movff	___fladd@aexp,??___fladd
  5556  001B80  6A4A               	clrf	(??___fladd+1)^0,c
  5557  001B82  5E49               	subwf	??___fladd^0,f,c
  5558  001B84  0E00               	movlw	0
  5559  001B86  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5560  001B88  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5561  001B8A  EFD0  F00D         	goto	u3601
  5562  001B8E  504A               	movf	(??___fladd+1)^0,w,c
  5563  001B90  E109               	bnz	u3600
  5564  001B92  0E1A               	movlw	26
  5565  001B94  5C49               	subwf	??___fladd^0,w,c
  5566  001B96  A0D8               	btfss	status,0,c
  5567  001B98  EFD0  F00D         	goto	u3601
  5568  001B9C  EFD2  F00D         	goto	u3600
  5569  001BA0                     u3601:
  5570  001BA0  EF09  F00E         	goto	l763
  5571  001BA4                     u3600:
  5572  001BA4  5041               	movf	___fladd@b^0,w,c
  5573  001BA6  1042               	iorwf	(___fladd@b+1)^0,w,c
  5574  001BA8  1043               	iorwf	(___fladd@b+2)^0,w,c
  5575  001BAA  1044               	iorwf	(___fladd@b+3)^0,w,c
  5576  001BAC  A4D8               	btfss	status,2,c
  5577  001BAE  EFDB  F00D         	goto	u3611
  5578  001BB2  EFDE  F00D         	goto	u3610
  5579  001BB6                     u3611:
  5580  001BB6  0E01               	movlw	1
  5581  001BB8  EFDF  F00D         	goto	u3620
  5582  001BBC                     u3610:
  5583  001BBC  0E00               	movlw	0
  5584  001BBE                     u3620:
  5585  001BBE  6E50               	movwf	___fladd@grs^0,c
  5586  001BC0  0E00               	movlw	0
  5587  001BC2  6E41               	movwf	___fladd@b^0,c
  5588  001BC4  0E00               	movlw	0
  5589  001BC6  6E42               	movwf	(___fladd@b+1)^0,c
  5590  001BC8  0E00               	movlw	0
  5591  001BCA  6E43               	movwf	(___fladd@b+2)^0,c
  5592  001BCC  0E00               	movlw	0
  5593  001BCE  6E44               	movwf	(___fladd@b+3)^0,c
  5594  001BD0  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5595  001BD4  EF12  F00E         	goto	l762
  5596  001BD8                     l764:
  5597  001BD8  A050               	btfss	___fladd@grs^0,0,c
  5598  001BDA  EFF1  F00D         	goto	u3631
  5599  001BDE  EFF3  F00D         	goto	u3630
  5600  001BE2                     u3631:
  5601  001BE2  EFF9  F00D         	goto	l3508
  5602  001BE6                     u3630:
  5603  001BE6  90D8               	bcf	status,0,c
  5604  001BE8  3050               	rrcf	___fladd@grs^0,w,c
  5605  001BEA  0901               	iorlw	1
  5606  001BEC  6E50               	movwf	___fladd@grs^0,c
  5607  001BEE  EFFB  F00D         	goto	l3510
  5608  001BF2                     l3508:
  5609  001BF2  90D8               	bcf	status,0,c
  5610  001BF4  3250               	rrcf	___fladd@grs^0,f,c
  5611  001BF6                     l3510:
  5612  001BF6  A041               	btfss	___fladd@b^0,0,c
  5613  001BF8  EF00  F00E         	goto	u3641
  5614  001BFC  EF02  F00E         	goto	u3640
  5615  001C00                     u3641:
  5616  001C00  EF03  F00E         	goto	l3514
  5617  001C04                     u3640:
  5618  001C04  8E50               	bsf	___fladd@grs^0,7,c
  5619  001C06                     l3514:
  5620  001C06  3444               	rlcf	(___fladd@b+3)^0,w,c
  5621  001C08  3244               	rrcf	(___fladd@b+3)^0,f,c
  5622  001C0A  3243               	rrcf	(___fladd@b+2)^0,f,c
  5623  001C0C  3242               	rrcf	(___fladd@b+1)^0,f,c
  5624  001C0E  3241               	rrcf	___fladd@b^0,f,c
  5625  001C10  2A4F               	incf	___fladd@bexp^0,f,c
  5626  001C12                     l763:
  5627  001C12  504E               	movf	___fladd@aexp^0,w,c
  5628  001C14  5C4F               	subwf	___fladd@bexp^0,w,c
  5629  001C16  A0D8               	btfss	status,0,c
  5630  001C18  EF10  F00E         	goto	u3651
  5631  001C1C  EF12  F00E         	goto	u3650
  5632  001C20                     u3651:
  5633  001C20  EFEC  F00D         	goto	l764
  5634  001C24                     u3650:
  5635  001C24                     l762:
  5636  001C24  BC4D               	btfsc	___fladd@signs^0,6,c
  5637  001C26  EF17  F00E         	goto	u3661
  5638  001C2A  EF19  F00E         	goto	u3660
  5639  001C2E                     u3661:
  5640  001C2E  EF59  F00E         	goto	l3542
  5641  001C32                     u3660:
  5642  001C32  504F               	movf	___fladd@bexp^0,w,c
  5643  001C34  A4D8               	btfss	status,2,c
  5644  001C36  EF1F  F00E         	goto	u3671
  5645  001C3A  EF21  F00E         	goto	u3670
  5646  001C3E                     u3671:
  5647  001C3E  EF2B  F00E         	goto	l3524
  5648  001C42                     u3670:
  5649  001C42  0E00               	movlw	0
  5650  001C44  6E41               	movwf	?___fladd^0,c
  5651  001C46  0E00               	movlw	0
  5652  001C48  6E42               	movwf	(?___fladd+1)^0,c
  5653  001C4A  0E00               	movlw	0
  5654  001C4C  6E43               	movwf	(?___fladd+2)^0,c
  5655  001C4E  0E00               	movlw	0
  5656  001C50  6E44               	movwf	(?___fladd+3)^0,c
  5657  001C52  EF7A  F00F         	goto	l771
  5658  001C56                     l3524:
  5659  001C56  5045               	movf	___fladd@a^0,w,c
  5660  001C58  2641               	addwf	___fladd@b^0,f,c
  5661  001C5A  5046               	movf	(___fladd@a+1)^0,w,c
  5662  001C5C  2242               	addwfc	(___fladd@b+1)^0,f,c
  5663  001C5E  5047               	movf	(___fladd@a+2)^0,w,c
  5664  001C60  2243               	addwfc	(___fladd@b+2)^0,f,c
  5665  001C62  5048               	movf	(___fladd@a+3)^0,w,c
  5666  001C64  2244               	addwfc	(___fladd@b+3)^0,f,c
  5667  001C66  A044               	btfss	(___fladd@b+3)^0,0,c
  5668  001C68  EF38  F00E         	goto	u3681
  5669  001C6C  EF3A  F00E         	goto	u3680
  5670  001C70                     u3681:
  5671  001C70  EFE6  F00E         	goto	l3578
  5672  001C74                     u3680:
  5673  001C74  A050               	btfss	___fladd@grs^0,0,c
  5674  001C76  EF3F  F00E         	goto	u3691
  5675  001C7A  EF41  F00E         	goto	u3690
  5676  001C7E                     u3691:
  5677  001C7E  EF47  F00E         	goto	l3532
  5678  001C82                     u3690:
  5679  001C82  90D8               	bcf	status,0,c
  5680  001C84  3050               	rrcf	___fladd@grs^0,w,c
  5681  001C86  0901               	iorlw	1
  5682  001C88  6E50               	movwf	___fladd@grs^0,c
  5683  001C8A  EF49  F00E         	goto	l3534
  5684  001C8E                     l3532:
  5685  001C8E  90D8               	bcf	status,0,c
  5686  001C90  3250               	rrcf	___fladd@grs^0,f,c
  5687  001C92                     l3534:
  5688  001C92  A041               	btfss	___fladd@b^0,0,c
  5689  001C94  EF4E  F00E         	goto	u3701
  5690  001C98  EF50  F00E         	goto	u3700
  5691  001C9C                     u3701:
  5692  001C9C  EF51  F00E         	goto	l3538
  5693  001CA0                     u3700:
  5694  001CA0  8E50               	bsf	___fladd@grs^0,7,c
  5695  001CA2                     l3538:
  5696  001CA2  3444               	rlcf	(___fladd@b+3)^0,w,c
  5697  001CA4  3244               	rrcf	(___fladd@b+3)^0,f,c
  5698  001CA6  3243               	rrcf	(___fladd@b+2)^0,f,c
  5699  001CA8  3242               	rrcf	(___fladd@b+1)^0,f,c
  5700  001CAA  3241               	rrcf	___fladd@b^0,f,c
  5701  001CAC  2A4F               	incf	___fladd@bexp^0,f,c
  5702  001CAE  EFE6  F00E         	goto	l3578
  5703  001CB2                     l3542:
  5704  001CB2  5045               	movf	___fladd@a^0,w,c
  5705  001CB4  5C41               	subwf	___fladd@b^0,w,c
  5706  001CB6  5046               	movf	(___fladd@a+1)^0,w,c
  5707  001CB8  5842               	subwfb	(___fladd@b+1)^0,w,c
  5708  001CBA  5047               	movf	(___fladd@a+2)^0,w,c
  5709  001CBC  5843               	subwfb	(___fladd@b+2)^0,w,c
  5710  001CBE  5044               	movf	(___fladd@b+3)^0,w,c
  5711  001CC0  0A80               	xorlw	128
  5712  001CC2  6E49               	movwf	??___fladd^0,c
  5713  001CC4  5048               	movf	(___fladd@a+3)^0,w,c
  5714  001CC6  0A80               	xorlw	128
  5715  001CC8  5849               	subwfb	??___fladd^0,w,c
  5716  001CCA  B0D8               	btfsc	status,0,c
  5717  001CCC  EF6A  F00E         	goto	u3711
  5718  001CD0  EF6C  F00E         	goto	u3710
  5719  001CD4                     u3711:
  5720  001CD4  EF97  F00E         	goto	l3552
  5721  001CD8                     u3710:
  5722  001CD8  5041               	movf	___fladd@b^0,w,c
  5723  001CDA  5C45               	subwf	___fladd@a^0,w,c
  5724  001CDC  6E49               	movwf	??___fladd^0,c
  5725  001CDE  5042               	movf	(___fladd@b+1)^0,w,c
  5726  001CE0  5846               	subwfb	(___fladd@a+1)^0,w,c
  5727  001CE2  6E4A               	movwf	(??___fladd+1)^0,c
  5728  001CE4  5043               	movf	(___fladd@b+2)^0,w,c
  5729  001CE6  5847               	subwfb	(___fladd@a+2)^0,w,c
  5730  001CE8  6E4B               	movwf	(??___fladd+2)^0,c
  5731  001CEA  5044               	movf	(___fladd@b+3)^0,w,c
  5732  001CEC  5848               	subwfb	(___fladd@a+3)^0,w,c
  5733  001CEE  6E4C               	movwf	(??___fladd+3)^0,c
  5734  001CF0  0EFF               	movlw	255
  5735  001CF2  2449               	addwf	??___fladd^0,w,c
  5736  001CF4  6E41               	movwf	___fladd@b^0,c
  5737  001CF6  0EFF               	movlw	255
  5738  001CF8  204A               	addwfc	(??___fladd+1)^0,w,c
  5739  001CFA  6E42               	movwf	(___fladd@b+1)^0,c
  5740  001CFC  0EFF               	movlw	255
  5741  001CFE  204B               	addwfc	(??___fladd+2)^0,w,c
  5742  001D00  6E43               	movwf	(___fladd@b+2)^0,c
  5743  001D02  0EFF               	movlw	255
  5744  001D04  204C               	addwfc	(??___fladd+3)^0,w,c
  5745  001D06  6E44               	movwf	(___fladd@b+3)^0,c
  5746  001D08  0E80               	movlw	128
  5747  001D0A  1A4D               	xorwf	___fladd@signs^0,f,c
  5748  001D0C  6C50               	negf	___fladd@grs^0,c
  5749  001D0E  5050               	movf	___fladd@grs^0,w,c
  5750  001D10  A4D8               	btfss	status,2,c
  5751  001D12  EF8D  F00E         	goto	u3721
  5752  001D16  EF8F  F00E         	goto	u3720
  5753  001D1A                     u3721:
  5754  001D1A  EF9F  F00E         	goto	l779
  5755  001D1E                     u3720:
  5756  001D1E  0E01               	movlw	1
  5757  001D20  2641               	addwf	___fladd@b^0,f,c
  5758  001D22  0E00               	movlw	0
  5759  001D24  2242               	addwfc	(___fladd@b+1)^0,f,c
  5760  001D26  2243               	addwfc	(___fladd@b+2)^0,f,c
  5761  001D28  2244               	addwfc	(___fladd@b+3)^0,f,c
  5762  001D2A  EF9F  F00E         	goto	l779
  5763  001D2E                     l3552:
  5764  001D2E  5045               	movf	___fladd@a^0,w,c
  5765  001D30  5E41               	subwf	___fladd@b^0,f,c
  5766  001D32  5046               	movf	(___fladd@a+1)^0,w,c
  5767  001D34  5A42               	subwfb	(___fladd@b+1)^0,f,c
  5768  001D36  5047               	movf	(___fladd@a+2)^0,w,c
  5769  001D38  5A43               	subwfb	(___fladd@b+2)^0,f,c
  5770  001D3A  5048               	movf	(___fladd@a+3)^0,w,c
  5771  001D3C  5A44               	subwfb	(___fladd@b+3)^0,f,c
  5772  001D3E                     l779:
  5773  001D3E  5041               	movf	___fladd@b^0,w,c
  5774  001D40  1042               	iorwf	(___fladd@b+1)^0,w,c
  5775  001D42  1043               	iorwf	(___fladd@b+2)^0,w,c
  5776  001D44  1044               	iorwf	(___fladd@b+3)^0,w,c
  5777  001D46  A4D8               	btfss	status,2,c
  5778  001D48  EFA8  F00E         	goto	u3731
  5779  001D4C  EFAA  F00E         	goto	u3730
  5780  001D50                     u3731:
  5781  001D50  EFDF  F00E         	goto	l3576
  5782  001D54                     u3730:
  5783  001D54  5050               	movf	___fladd@grs^0,w,c
  5784  001D56  A4D8               	btfss	status,2,c
  5785  001D58  EFB0  F00E         	goto	u3741
  5786  001D5C  EFB2  F00E         	goto	u3740
  5787  001D60                     u3741:
  5788  001D60  EFDF  F00E         	goto	l3576
  5789  001D64                     u3740:
  5790  001D64  0E00               	movlw	0
  5791  001D66  6E41               	movwf	?___fladd^0,c
  5792  001D68  0E00               	movlw	0
  5793  001D6A  6E42               	movwf	(?___fladd+1)^0,c
  5794  001D6C  0E00               	movlw	0
  5795  001D6E  6E43               	movwf	(?___fladd+2)^0,c
  5796  001D70  0E00               	movlw	0
  5797  001D72  6E44               	movwf	(?___fladd+3)^0,c
  5798  001D74  EF7A  F00F         	goto	l771
  5799  001D78                     l3560:
  5800  001D78  90D8               	bcf	status,0,c
  5801  001D7A  3641               	rlcf	___fladd@b^0,f,c
  5802  001D7C  3642               	rlcf	(___fladd@b+1)^0,f,c
  5803  001D7E  3643               	rlcf	(___fladd@b+2)^0,f,c
  5804  001D80  3644               	rlcf	(___fladd@b+3)^0,f,c
  5805  001D82  AE50               	btfss	___fladd@grs^0,7,c
  5806  001D84  EFC6  F00E         	goto	u3751
  5807  001D88  EFC8  F00E         	goto	u3750
  5808  001D8C                     u3751:
  5809  001D8C  EFC9  F00E         	goto	l3566
  5810  001D90                     u3750:
  5811  001D90  8041               	bsf	___fladd@b^0,0,c
  5812  001D92                     l3566:
  5813  001D92  A050               	btfss	___fladd@grs^0,0,c
  5814  001D94  EFCE  F00E         	goto	u3761
  5815  001D98  EFD0  F00E         	goto	u3760
  5816  001D9C                     u3761:
  5817  001D9C  EFD4  F00E         	goto	l3570
  5818  001DA0                     u3760:
  5819  001DA0  80D8               	bsf	status,0,c
  5820  001DA2  3650               	rlcf	___fladd@grs^0,f,c
  5821  001DA4  EFD6  F00E         	goto	l3572
  5822  001DA8                     l3570:
  5823  001DA8  90D8               	bcf	status,0,c
  5824  001DAA  3650               	rlcf	___fladd@grs^0,f,c
  5825  001DAC                     l3572:
  5826  001DAC  504F               	movf	___fladd@bexp^0,w,c
  5827  001DAE  B4D8               	btfsc	status,2,c
  5828  001DB0  EFDC  F00E         	goto	u3771
  5829  001DB4  EFDE  F00E         	goto	u3770
  5830  001DB8                     u3771:
  5831  001DB8  EFDF  F00E         	goto	l3576
  5832  001DBC                     u3770:
  5833  001DBC  064F               	decf	___fladd@bexp^0,f,c
  5834  001DBE                     l3576:
  5835  001DBE  AE43               	btfss	(___fladd@b+2)^0,7,c
  5836  001DC0  EFE4  F00E         	goto	u3781
  5837  001DC4  EFE6  F00E         	goto	u3780
  5838  001DC8                     u3781:
  5839  001DC8  EFBC  F00E         	goto	l3560
  5840  001DCC                     u3780:
  5841  001DCC                     l3578:
  5842  001DCC  0E00               	movlw	0
  5843  001DCE  6E4E               	movwf	___fladd@aexp^0,c
  5844  001DD0  AE50               	btfss	___fladd@grs^0,7,c
  5845  001DD2  EFED  F00E         	goto	u3791
  5846  001DD6  EFEF  F00E         	goto	u3790
  5847  001DDA                     u3791:
  5848  001DDA  EF07  F00F         	goto	l788
  5849  001DDE                     u3790:
  5850  001DDE  C050  F049         	movff	___fladd@grs,??___fladd
  5851  001DE2  0E7F               	movlw	127
  5852  001DE4  1649               	andwf	??___fladd^0,f,c
  5853  001DE6  B4D8               	btfsc	status,2,c
  5854  001DE8  EFF8  F00E         	goto	u3801
  5855  001DEC  EFFA  F00E         	goto	u3800
  5856  001DF0                     u3801:
  5857  001DF0  EFFE  F00E         	goto	l789
  5858  001DF4                     u3800:
  5859  001DF4                     l3584:
  5860  001DF4  0E01               	movlw	1
  5861  001DF6  6E4E               	movwf	___fladd@aexp^0,c
  5862  001DF8  EF07  F00F         	goto	l788
  5863  001DFC                     l789:
  5864  001DFC  A041               	btfss	___fladd@b^0,0,c
  5865  001DFE  EF03  F00F         	goto	u3811
  5866  001E02  EF05  F00F         	goto	u3810
  5867  001E06                     u3811:
  5868  001E06  EF07  F00F         	goto	l788
  5869  001E0A                     u3810:
  5870  001E0A  EFFA  F00E         	goto	l3584
  5871  001E0E                     l788:
  5872  001E0E  504E               	movf	___fladd@aexp^0,w,c
  5873  001E10  B4D8               	btfsc	status,2,c
  5874  001E12  EF0D  F00F         	goto	u3821
  5875  001E16  EF0F  F00F         	goto	u3820
  5876  001E1A                     u3821:
  5877  001E1A  EF3A  F00F         	goto	l3596
  5878  001E1E                     u3820:
  5879  001E1E  0E01               	movlw	1
  5880  001E20  2641               	addwf	___fladd@b^0,f,c
  5881  001E22  0E00               	movlw	0
  5882  001E24  2242               	addwfc	(___fladd@b+1)^0,f,c
  5883  001E26  2243               	addwfc	(___fladd@b+2)^0,f,c
  5884  001E28  2244               	addwfc	(___fladd@b+3)^0,f,c
  5885  001E2A  A044               	btfss	(___fladd@b+3)^0,0,c
  5886  001E2C  EF1A  F00F         	goto	u3831
  5887  001E30  EF1C  F00F         	goto	u3830
  5888  001E34                     u3831:
  5889  001E34  EF3A  F00F         	goto	l3596
  5890  001E38                     u3830:
  5891  001E38  C041  F049         	movff	___fladd@b,??___fladd
  5892  001E3C  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  5893  001E40  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  5894  001E44  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  5895  001E48  344C               	rlcf	(??___fladd+3)^0,w,c
  5896  001E4A  324C               	rrcf	(??___fladd+3)^0,f,c
  5897  001E4C  324B               	rrcf	(??___fladd+2)^0,f,c
  5898  001E4E  324A               	rrcf	(??___fladd+1)^0,f,c
  5899  001E50  3249               	rrcf	??___fladd^0,f,c
  5900  001E52  C049  F041         	movff	??___fladd,___fladd@b
  5901  001E56  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  5902  001E5A  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  5903  001E5E  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  5904  001E62  284F               	incf	___fladd@bexp^0,w,c
  5905  001E64  B4D8               	btfsc	status,2,c
  5906  001E66  EF37  F00F         	goto	u3841
  5907  001E6A  EF39  F00F         	goto	u3840
  5908  001E6E                     u3841:
  5909  001E6E  EF3A  F00F         	goto	l3596
  5910  001E72                     u3840:
  5911  001E72  2A4F               	incf	___fladd@bexp^0,f,c
  5912  001E74                     l3596:
  5913  001E74  284F               	incf	___fladd@bexp^0,w,c
  5914  001E76  B4D8               	btfsc	status,2,c
  5915  001E78  EF40  F00F         	goto	u3851
  5916  001E7C  EF42  F00F         	goto	u3850
  5917  001E80                     u3851:
  5918  001E80  EF4A  F00F         	goto	l3600
  5919  001E84                     u3850:
  5920  001E84  504F               	movf	___fladd@bexp^0,w,c
  5921  001E86  A4D8               	btfss	status,2,c
  5922  001E88  EF48  F00F         	goto	u3861
  5923  001E8C  EF4A  F00F         	goto	u3860
  5924  001E90                     u3861:
  5925  001E90  EF5C  F00F         	goto	l3604
  5926  001E94                     u3860:
  5927  001E94                     l3600:
  5928  001E94  0E00               	movlw	0
  5929  001E96  6E41               	movwf	___fladd@b^0,c
  5930  001E98  0E00               	movlw	0
  5931  001E9A  6E42               	movwf	(___fladd@b+1)^0,c
  5932  001E9C  0E00               	movlw	0
  5933  001E9E  6E43               	movwf	(___fladd@b+2)^0,c
  5934  001EA0  0E00               	movlw	0
  5935  001EA2  6E44               	movwf	(___fladd@b+3)^0,c
  5936  001EA4  504F               	movf	___fladd@bexp^0,w,c
  5937  001EA6  A4D8               	btfss	status,2,c
  5938  001EA8  EF58  F00F         	goto	u3871
  5939  001EAC  EF5A  F00F         	goto	u3870
  5940  001EB0                     u3871:
  5941  001EB0  EF5C  F00F         	goto	l3604
  5942  001EB4                     u3870:
  5943  001EB4  0E00               	movlw	0
  5944  001EB6  6E4D               	movwf	___fladd@signs^0,c
  5945  001EB8                     l3604:
  5946  001EB8  A04F               	btfss	___fladd@bexp^0,0,c
  5947  001EBA  EF61  F00F         	goto	u3881
  5948  001EBE  EF63  F00F         	goto	u3880
  5949  001EC2                     u3881:
  5950  001EC2  EF66  F00F         	goto	l3608
  5951  001EC6                     u3880:
  5952  001EC6  8E43               	bsf	(___fladd@b+2)^0,7,c
  5953  001EC8  EF67  F00F         	goto	l3610
  5954  001ECC                     l3608:
  5955  001ECC  9E43               	bcf	(___fladd@b+2)^0,7,c
  5956  001ECE                     l3610:
  5957  001ECE  90D8               	bcf	status,0,c
  5958  001ED0  304F               	rrcf	___fladd@bexp^0,w,c
  5959  001ED2  6E44               	movwf	(___fladd@b+3)^0,c
  5960  001ED4  AE4D               	btfss	___fladd@signs^0,7,c
  5961  001ED6  EF6F  F00F         	goto	u3891
  5962  001EDA  EF71  F00F         	goto	u3890
  5963  001EDE                     u3891:
  5964  001EDE  EF72  F00F         	goto	l3616
  5965  001EE2                     u3890:
  5966  001EE2  8E44               	bsf	(___fladd@b+3)^0,7,c
  5967  001EE4                     l3616:
  5968  001EE4  C041  F041         	movff	___fladd@b,?___fladd
  5969  001EE8  C042  F042         	movff	___fladd@b+1,?___fladd+1
  5970  001EEC  C043  F043         	movff	___fladd@b+2,?___fladd+2
  5971  001EF0  C044  F044         	movff	___fladd@b+3,?___fladd+3
  5972  001EF4                     l771:
  5973  001EF4  0012               	return		;funcret
  5974  001EF6                     __end_of___fladd:
  5975                           	callstack 0
  5976                           
  5977 ;; *************** function ___flneg *****************
  5978 ;; Defined at:
  5979 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  f1              4    0[COMRAM] unsigned char 
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  4    0[COMRAM] unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5993 ;;      Params:         4       0       0       0       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5996 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5997 ;;Total ram usage:        4 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_efgtoa
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text14
  6007  004AB2                     __ptext14:
  6008                           	callstack 0
  6009  004AB2                     ___flneg:
  6010                           	callstack 26
  6011  004AB2  5001               	movf	___flneg@f1^0,w,c
  6012  004AB4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6013  004AB6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6014  004AB8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6015  004ABA  B4D8               	btfsc	status,2,c
  6016  004ABC  EF62  F025         	goto	u4691
  6017  004AC0  EF64  F025         	goto	u4690
  6018  004AC4                     u4691:
  6019  004AC4  EF6C  F025         	goto	l4124
  6020  004AC8                     u4690:
  6021  004AC8  0E00               	movlw	0
  6022  004ACA  1A01               	xorwf	___flneg@f1^0,f,c
  6023  004ACC  0E00               	movlw	0
  6024  004ACE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6025  004AD0  0E00               	movlw	0
  6026  004AD2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6027  004AD4  0E80               	movlw	128
  6028  004AD6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6029  004AD8                     l4124:
  6030  004AD8  C001  F001         	movff	___flneg@f1,?___flneg
  6031  004ADC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6032  004AE0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6033  004AE4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6034  004AE8  0012               	return		;funcret
  6035  004AEA                     __end_of___flneg:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function ___flmul *****************
  6039 ;; Defined at:
  6040 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  b               4   14[COMRAM] unsigned char 
  6043 ;;  a               4   18[COMRAM] unsigned char 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  prod            4   33[COMRAM] struct .
  6046 ;;  grs             4   27[COMRAM] unsigned long 
  6047 ;;  temp            2   37[COMRAM] struct .
  6048 ;;  bexp            1   32[COMRAM] unsigned char 
  6049 ;;  aexp            1   31[COMRAM] unsigned char 
  6050 ;;  sign            1   26[COMRAM] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  4   14[COMRAM] unsigned char 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, prodl, prodh
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6060 ;;      Params:         8       0       0       0       0       0       0       0       0
  6061 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6062 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6063 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6064 ;;Total ram usage:       25 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_main
  6070 ;;		_efgtoa
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text15
  6075  001EF6                     __ptext15:
  6076                           	callstack 0
  6077  001EF6                     ___flmul:
  6078                           	callstack 26
  6079  001EF6  5012               	movf	(___flmul@b+3)^0,w,c
  6080  001EF8  0B80               	andlw	128
  6081  001EFA  6E1B               	movwf	___flmul@sign^0,c
  6082  001EFC  5012               	movf	(___flmul@b+3)^0,w,c
  6083  001EFE  2412               	addwf	(___flmul@b+3)^0,w,c
  6084  001F00  6E21               	movwf	___flmul@bexp^0,c
  6085  001F02  AE11               	btfss	(___flmul@b+2)^0,7,c
  6086  001F04  EF86  F00F         	goto	u4301
  6087  001F08  EF88  F00F         	goto	u4300
  6088  001F0C                     u4301:
  6089  001F0C  EF89  F00F         	goto	l3872
  6090  001F10                     u4300:
  6091  001F10  8021               	bsf	___flmul@bexp^0,0,c
  6092  001F12                     l3872:
  6093  001F12  5021               	movf	___flmul@bexp^0,w,c
  6094  001F14  B4D8               	btfsc	status,2,c
  6095  001F16  EF8F  F00F         	goto	u4311
  6096  001F1A  EF91  F00F         	goto	u4310
  6097  001F1E                     u4311:
  6098  001F1E  EFA4  F00F         	goto	l3880
  6099  001F22                     u4310:
  6100  001F22  2821               	incf	___flmul@bexp^0,w,c
  6101  001F24  A4D8               	btfss	status,2,c
  6102  001F26  EF97  F00F         	goto	u4321
  6103  001F2A  EF99  F00F         	goto	u4320
  6104  001F2E                     u4321:
  6105  001F2E  EFA1  F00F         	goto	l3878
  6106  001F32                     u4320:
  6107  001F32  0E00               	movlw	0
  6108  001F34  6E0F               	movwf	___flmul@b^0,c
  6109  001F36  0E00               	movlw	0
  6110  001F38  6E10               	movwf	(___flmul@b+1)^0,c
  6111  001F3A  0E00               	movlw	0
  6112  001F3C  6E11               	movwf	(___flmul@b+2)^0,c
  6113  001F3E  0E00               	movlw	0
  6114  001F40  6E12               	movwf	(___flmul@b+3)^0,c
  6115  001F42                     l3878:
  6116  001F42  8E11               	bsf	(___flmul@b+2)^0,7,c
  6117  001F44  EFAC  F00F         	goto	l3882
  6118  001F48                     l3880:
  6119  001F48  0E00               	movlw	0
  6120  001F4A  6E0F               	movwf	___flmul@b^0,c
  6121  001F4C  0E00               	movlw	0
  6122  001F4E  6E10               	movwf	(___flmul@b+1)^0,c
  6123  001F50  0E00               	movlw	0
  6124  001F52  6E11               	movwf	(___flmul@b+2)^0,c
  6125  001F54  0E00               	movlw	0
  6126  001F56  6E12               	movwf	(___flmul@b+3)^0,c
  6127  001F58                     l3882:
  6128  001F58  5016               	movf	(___flmul@a+3)^0,w,c
  6129  001F5A  0B80               	andlw	128
  6130  001F5C  1A1B               	xorwf	___flmul@sign^0,f,c
  6131  001F5E  5016               	movf	(___flmul@a+3)^0,w,c
  6132  001F60  2416               	addwf	(___flmul@a+3)^0,w,c
  6133  001F62  6E20               	movwf	___flmul@aexp^0,c
  6134  001F64  AE15               	btfss	(___flmul@a+2)^0,7,c
  6135  001F66  EFB7  F00F         	goto	u4331
  6136  001F6A  EFB9  F00F         	goto	u4330
  6137  001F6E                     u4331:
  6138  001F6E  EFBA  F00F         	goto	l3890
  6139  001F72                     u4330:
  6140  001F72  8020               	bsf	___flmul@aexp^0,0,c
  6141  001F74                     l3890:
  6142  001F74  5020               	movf	___flmul@aexp^0,w,c
  6143  001F76  B4D8               	btfsc	status,2,c
  6144  001F78  EFC0  F00F         	goto	u4341
  6145  001F7C  EFC2  F00F         	goto	u4340
  6146  001F80                     u4341:
  6147  001F80  EFD5  F00F         	goto	l3898
  6148  001F84                     u4340:
  6149  001F84  2820               	incf	___flmul@aexp^0,w,c
  6150  001F86  A4D8               	btfss	status,2,c
  6151  001F88  EFC8  F00F         	goto	u4351
  6152  001F8C  EFCA  F00F         	goto	u4350
  6153  001F90                     u4351:
  6154  001F90  EFD2  F00F         	goto	l3896
  6155  001F94                     u4350:
  6156  001F94  0E00               	movlw	0
  6157  001F96  6E13               	movwf	___flmul@a^0,c
  6158  001F98  0E00               	movlw	0
  6159  001F9A  6E14               	movwf	(___flmul@a+1)^0,c
  6160  001F9C  0E00               	movlw	0
  6161  001F9E  6E15               	movwf	(___flmul@a+2)^0,c
  6162  001FA0  0E00               	movlw	0
  6163  001FA2  6E16               	movwf	(___flmul@a+3)^0,c
  6164  001FA4                     l3896:
  6165  001FA4  8E15               	bsf	(___flmul@a+2)^0,7,c
  6166  001FA6  EFDD  F00F         	goto	l848
  6167  001FAA                     l3898:
  6168  001FAA  0E00               	movlw	0
  6169  001FAC  6E13               	movwf	___flmul@a^0,c
  6170  001FAE  0E00               	movlw	0
  6171  001FB0  6E14               	movwf	(___flmul@a+1)^0,c
  6172  001FB2  0E00               	movlw	0
  6173  001FB4  6E15               	movwf	(___flmul@a+2)^0,c
  6174  001FB6  0E00               	movlw	0
  6175  001FB8  6E16               	movwf	(___flmul@a+3)^0,c
  6176  001FBA                     l848:
  6177  001FBA  5020               	movf	___flmul@aexp^0,w,c
  6178  001FBC  B4D8               	btfsc	status,2,c
  6179  001FBE  EFE3  F00F         	goto	u4361
  6180  001FC2  EFE5  F00F         	goto	u4360
  6181  001FC6                     u4361:
  6182  001FC6  EFED  F00F         	goto	l3902
  6183  001FCA                     u4360:
  6184  001FCA  5021               	movf	___flmul@bexp^0,w,c
  6185  001FCC  A4D8               	btfss	status,2,c
  6186  001FCE  EFEB  F00F         	goto	u4371
  6187  001FD2  EFED  F00F         	goto	u4370
  6188  001FD6                     u4371:
  6189  001FD6  EFF7  F00F         	goto	l3906
  6190  001FDA                     u4370:
  6191  001FDA                     l3902:
  6192  001FDA  0E00               	movlw	0
  6193  001FDC  6E0F               	movwf	?___flmul^0,c
  6194  001FDE  0E00               	movlw	0
  6195  001FE0  6E10               	movwf	(?___flmul+1)^0,c
  6196  001FE2  0E00               	movlw	0
  6197  001FE4  6E11               	movwf	(?___flmul+2)^0,c
  6198  001FE6  0E00               	movlw	0
  6199  001FE8  6E12               	movwf	(?___flmul+3)^0,c
  6200  001FEA  EF8F  F011         	goto	l852
  6201  001FEE                     l3906:
  6202  001FEE  5015               	movf	(___flmul@a+2)^0,w,c
  6203  001FF0  020F               	mulwf	___flmul@b^0,c
  6204  001FF2  CFF3 F026          	movff	prodl,___flmul@temp
  6205  001FF6  CFF4 F027          	movff	prodh,___flmul@temp+1
  6206  001FFA  5026               	movf	___flmul@temp^0,w,c
  6207  001FFC  6E1C               	movwf	___flmul@grs^0,c
  6208  001FFE  6A1D               	clrf	(___flmul@grs+1)^0,c
  6209  002000  6A1E               	clrf	(___flmul@grs+2)^0,c
  6210  002002  6A1F               	clrf	(___flmul@grs+3)^0,c
  6211  002004  5027               	movf	(___flmul@temp+1)^0,w,c
  6212  002006  6E22               	movwf	___flmul@prod^0,c
  6213  002008  6A23               	clrf	(___flmul@prod+1)^0,c
  6214  00200A  6A24               	clrf	(___flmul@prod+2)^0,c
  6215  00200C  6A25               	clrf	(___flmul@prod+3)^0,c
  6216  00200E  5014               	movf	(___flmul@a+1)^0,w,c
  6217  002010  0210               	mulwf	(___flmul@b+1)^0,c
  6218  002012  CFF3 F026          	movff	prodl,___flmul@temp
  6219  002016  CFF4 F027          	movff	prodh,___flmul@temp+1
  6220  00201A  5026               	movf	___flmul@temp^0,w,c
  6221  00201C  261C               	addwf	___flmul@grs^0,f,c
  6222  00201E  0E00               	movlw	0
  6223  002020  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6224  002022  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6225  002024  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6226  002026  5027               	movf	(___flmul@temp+1)^0,w,c
  6227  002028  2622               	addwf	___flmul@prod^0,f,c
  6228  00202A  0E00               	movlw	0
  6229  00202C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6230  00202E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6231  002030  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6232  002032  5013               	movf	___flmul@a^0,w,c
  6233  002034  0211               	mulwf	(___flmul@b+2)^0,c
  6234  002036  CFF3 F026          	movff	prodl,___flmul@temp
  6235  00203A  CFF4 F027          	movff	prodh,___flmul@temp+1
  6236  00203E  5026               	movf	___flmul@temp^0,w,c
  6237  002040  261C               	addwf	___flmul@grs^0,f,c
  6238  002042  0E00               	movlw	0
  6239  002044  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6240  002046  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6241  002048  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6242  00204A  5027               	movf	(___flmul@temp+1)^0,w,c
  6243  00204C  2622               	addwf	___flmul@prod^0,f,c
  6244  00204E  0E00               	movlw	0
  6245  002050  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6246  002052  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6247  002054  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6248  002056  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6249  00205A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6250  00205E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6251  002062  6A1C               	clrf	___flmul@grs^0,c
  6252  002064  5013               	movf	___flmul@a^0,w,c
  6253  002066  0210               	mulwf	(___flmul@b+1)^0,c
  6254  002068  CFF3 F026          	movff	prodl,___flmul@temp
  6255  00206C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6256  002070  5026               	movf	___flmul@temp^0,w,c
  6257  002072  261C               	addwf	___flmul@grs^0,f,c
  6258  002074  5027               	movf	(___flmul@temp+1)^0,w,c
  6259  002076  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6260  002078  0E00               	movlw	0
  6261  00207A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6262  00207C  0E00               	movlw	0
  6263  00207E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6264  002080  5014               	movf	(___flmul@a+1)^0,w,c
  6265  002082  020F               	mulwf	___flmul@b^0,c
  6266  002084  CFF3 F026          	movff	prodl,___flmul@temp
  6267  002088  CFF4 F027          	movff	prodh,___flmul@temp+1
  6268  00208C  5026               	movf	___flmul@temp^0,w,c
  6269  00208E  261C               	addwf	___flmul@grs^0,f,c
  6270  002090  5027               	movf	(___flmul@temp+1)^0,w,c
  6271  002092  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6272  002094  0E00               	movlw	0
  6273  002096  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6274  002098  0E00               	movlw	0
  6275  00209A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6276  00209C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6277  0020A0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6278  0020A4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6279  0020A8  6A1C               	clrf	___flmul@grs^0,c
  6280  0020AA  5013               	movf	___flmul@a^0,w,c
  6281  0020AC  020F               	mulwf	___flmul@b^0,c
  6282  0020AE  CFF3 F026          	movff	prodl,___flmul@temp
  6283  0020B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  6284  0020B6  5026               	movf	___flmul@temp^0,w,c
  6285  0020B8  261C               	addwf	___flmul@grs^0,f,c
  6286  0020BA  5027               	movf	(___flmul@temp+1)^0,w,c
  6287  0020BC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  6288  0020BE  0E00               	movlw	0
  6289  0020C0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  6290  0020C2  0E00               	movlw	0
  6291  0020C4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  6292  0020C6  5015               	movf	(___flmul@a+2)^0,w,c
  6293  0020C8  0210               	mulwf	(___flmul@b+1)^0,c
  6294  0020CA  CFF3 F026          	movff	prodl,___flmul@temp
  6295  0020CE  CFF4 F027          	movff	prodh,___flmul@temp+1
  6296  0020D2  5026               	movf	___flmul@temp^0,w,c
  6297  0020D4  2622               	addwf	___flmul@prod^0,f,c
  6298  0020D6  5027               	movf	(___flmul@temp+1)^0,w,c
  6299  0020D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6300  0020DA  0E00               	movlw	0
  6301  0020DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6302  0020DE  0E00               	movlw	0
  6303  0020E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6304  0020E2  5014               	movf	(___flmul@a+1)^0,w,c
  6305  0020E4  0211               	mulwf	(___flmul@b+2)^0,c
  6306  0020E6  CFF3 F026          	movff	prodl,___flmul@temp
  6307  0020EA  CFF4 F027          	movff	prodh,___flmul@temp+1
  6308  0020EE  5026               	movf	___flmul@temp^0,w,c
  6309  0020F0  2622               	addwf	___flmul@prod^0,f,c
  6310  0020F2  5027               	movf	(___flmul@temp+1)^0,w,c
  6311  0020F4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6312  0020F6  0E00               	movlw	0
  6313  0020F8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6314  0020FA  0E00               	movlw	0
  6315  0020FC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6316  0020FE  5015               	movf	(___flmul@a+2)^0,w,c
  6317  002100  0211               	mulwf	(___flmul@b+2)^0,c
  6318  002102  CFF3 F026          	movff	prodl,___flmul@temp
  6319  002106  CFF4 F027          	movff	prodh,___flmul@temp+1
  6320  00210A  5026               	movf	___flmul@temp^0,w,c
  6321  00210C  6E17               	movwf	??___flmul^0,c
  6322  00210E  5027               	movf	(___flmul@temp+1)^0,w,c
  6323  002110  6E18               	movwf	(??___flmul+1)^0,c
  6324  002112  6A19               	clrf	(??___flmul+2)^0,c
  6325  002114  6A1A               	clrf	(??___flmul+3)^0,c
  6326  002116  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6327  00211A  C018  F019         	movff	??___flmul+1,??___flmul+2
  6328  00211E  C017  F018         	movff	??___flmul,??___flmul+1
  6329  002122  6A17               	clrf	??___flmul^0,c
  6330  002124  5017               	movf	??___flmul^0,w,c
  6331  002126  2622               	addwf	___flmul@prod^0,f,c
  6332  002128  5018               	movf	(??___flmul+1)^0,w,c
  6333  00212A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6334  00212C  5019               	movf	(??___flmul+2)^0,w,c
  6335  00212E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6336  002130  501A               	movf	(??___flmul+3)^0,w,c
  6337  002132  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6338  002134  C01C  F017         	movff	___flmul@grs,??___flmul
  6339  002138  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6340  00213C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6341  002140  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6342  002144  0E19               	movlw	25
  6343  002146  EFAA  F010         	goto	u4380
  6344  00214A                     u4385:
  6345  00214A  90D8               	bcf	status,0,c
  6346  00214C  321A               	rrcf	(??___flmul+3)^0,f,c
  6347  00214E  3219               	rrcf	(??___flmul+2)^0,f,c
  6348  002150  3218               	rrcf	(??___flmul+1)^0,f,c
  6349  002152  3217               	rrcf	??___flmul^0,f,c
  6350  002154                     u4380:
  6351  002154  2EE8               	decfsz	wreg,f,c
  6352  002156  EFA5  F010         	goto	u4385
  6353  00215A  5017               	movf	??___flmul^0,w,c
  6354  00215C  2622               	addwf	___flmul@prod^0,f,c
  6355  00215E  5018               	movf	(??___flmul+1)^0,w,c
  6356  002160  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6357  002162  5019               	movf	(??___flmul+2)^0,w,c
  6358  002164  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6359  002166  501A               	movf	(??___flmul+3)^0,w,c
  6360  002168  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6361  00216A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6362  00216E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6363  002172  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6364  002176  6A1C               	clrf	___flmul@grs^0,c
  6365  002178  5020               	movf	___flmul@aexp^0,w,c
  6366  00217A  C021  F017         	movff	___flmul@bexp,??___flmul
  6367  00217E  6A18               	clrf	(??___flmul+1)^0,c
  6368  002180  2617               	addwf	??___flmul^0,f,c
  6369  002182  0E00               	movlw	0
  6370  002184  2218               	addwfc	(??___flmul+1)^0,f,c
  6371  002186  0E82               	movlw	130
  6372  002188  2417               	addwf	??___flmul^0,w,c
  6373  00218A  6E26               	movwf	___flmul@temp^0,c
  6374  00218C  0EFF               	movlw	255
  6375  00218E  2018               	addwfc	(??___flmul+1)^0,w,c
  6376  002190  6E27               	movwf	(___flmul@temp+1)^0,c
  6377  002192  EFE0  F010         	goto	l3954
  6378  002196                     l3948:
  6379  002196  90D8               	bcf	status,0,c
  6380  002198  3622               	rlcf	___flmul@prod^0,f,c
  6381  00219A  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6382  00219C  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6383  00219E  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6384  0021A0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6385  0021A2  EFD5  F010         	goto	u4391
  6386  0021A6  EFD7  F010         	goto	u4390
  6387  0021AA                     u4391:
  6388  0021AA  EFD8  F010         	goto	l855
  6389  0021AE                     u4390:
  6390  0021AE  8022               	bsf	___flmul@prod^0,0,c
  6391  0021B0                     l855:
  6392  0021B0  90D8               	bcf	status,0,c
  6393  0021B2  361C               	rlcf	___flmul@grs^0,f,c
  6394  0021B4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6395  0021B6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6396  0021B8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6397  0021BA  0626               	decf	___flmul@temp^0,f,c
  6398  0021BC  A0D8               	btfss	status,0,c
  6399  0021BE  0627               	decf	(___flmul@temp+1)^0,f,c
  6400  0021C0                     l3954:
  6401  0021C0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6402  0021C2  EFE5  F010         	goto	u4401
  6403  0021C6  EFE7  F010         	goto	u4400
  6404  0021CA                     u4401:
  6405  0021CA  EFCB  F010         	goto	l3948
  6406  0021CE                     u4400:
  6407  0021CE  0E00               	movlw	0
  6408  0021D0  6E20               	movwf	___flmul@aexp^0,c
  6409  0021D2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6410  0021D4  EFEE  F010         	goto	u4411
  6411  0021D8  EFF0  F010         	goto	u4410
  6412  0021DC                     u4411:
  6413  0021DC  EF14  F011         	goto	l857
  6414  0021E0                     u4410:
  6415  0021E0  0EFF               	movlw	255
  6416  0021E2  141C               	andwf	___flmul@grs^0,w,c
  6417  0021E4  6E17               	movwf	??___flmul^0,c
  6418  0021E6  0EFF               	movlw	255
  6419  0021E8  141D               	andwf	(___flmul@grs+1)^0,w,c
  6420  0021EA  6E18               	movwf	(??___flmul+1)^0,c
  6421  0021EC  0EFF               	movlw	255
  6422  0021EE  141E               	andwf	(___flmul@grs+2)^0,w,c
  6423  0021F0  6E19               	movwf	(??___flmul+2)^0,c
  6424  0021F2  0E7F               	movlw	127
  6425  0021F4  141F               	andwf	(___flmul@grs+3)^0,w,c
  6426  0021F6  6E1A               	movwf	(??___flmul+3)^0,c
  6427  0021F8  5017               	movf	??___flmul^0,w,c
  6428  0021FA  1018               	iorwf	(??___flmul+1)^0,w,c
  6429  0021FC  1019               	iorwf	(??___flmul+2)^0,w,c
  6430  0021FE  101A               	iorwf	(??___flmul+3)^0,w,c
  6431  002200  B4D8               	btfsc	status,2,c
  6432  002202  EF05  F011         	goto	u4421
  6433  002206  EF07  F011         	goto	u4420
  6434  00220A                     u4421:
  6435  00220A  EF0B  F011         	goto	l858
  6436  00220E                     u4420:
  6437  00220E                     l3962:
  6438  00220E  0E01               	movlw	1
  6439  002210  6E20               	movwf	___flmul@aexp^0,c
  6440  002212  EF14  F011         	goto	l857
  6441  002216                     l858:
  6442  002216  A022               	btfss	___flmul@prod^0,0,c
  6443  002218  EF10  F011         	goto	u4431
  6444  00221C  EF12  F011         	goto	u4430
  6445  002220                     u4431:
  6446  002220  EF14  F011         	goto	l857
  6447  002224                     u4430:
  6448  002224  EF07  F011         	goto	l3962
  6449  002228                     l857:
  6450  002228  5020               	movf	___flmul@aexp^0,w,c
  6451  00222A  B4D8               	btfsc	status,2,c
  6452  00222C  EF1A  F011         	goto	u4441
  6453  002230  EF1C  F011         	goto	u4440
  6454  002234                     u4441:
  6455  002234  EF40  F011         	goto	l3974
  6456  002238                     u4440:
  6457  002238  0E01               	movlw	1
  6458  00223A  2622               	addwf	___flmul@prod^0,f,c
  6459  00223C  0E00               	movlw	0
  6460  00223E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6461  002240  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6462  002242  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6463  002244  A025               	btfss	(___flmul@prod+3)^0,0,c
  6464  002246  EF27  F011         	goto	u4451
  6465  00224A  EF29  F011         	goto	u4450
  6466  00224E                     u4451:
  6467  00224E  EF40  F011         	goto	l3974
  6468  002252                     u4450:
  6469  002252  C022  F017         	movff	___flmul@prod,??___flmul
  6470  002256  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6471  00225A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6472  00225E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6473  002262  341A               	rlcf	(??___flmul+3)^0,w,c
  6474  002264  321A               	rrcf	(??___flmul+3)^0,f,c
  6475  002266  3219               	rrcf	(??___flmul+2)^0,f,c
  6476  002268  3218               	rrcf	(??___flmul+1)^0,f,c
  6477  00226A  3217               	rrcf	??___flmul^0,f,c
  6478  00226C  C017  F022         	movff	??___flmul,___flmul@prod
  6479  002270  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6480  002274  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6481  002278  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6482  00227C  4A26               	infsnz	___flmul@temp^0,f,c
  6483  00227E  2A27               	incf	(___flmul@temp+1)^0,f,c
  6484  002280                     l3974:
  6485  002280  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6486  002282  EF4B  F011         	goto	u4461
  6487  002286  5027               	movf	(___flmul@temp+1)^0,w,c
  6488  002288  E108               	bnz	u4460
  6489  00228A  2826               	incf	___flmul@temp^0,w,c
  6490  00228C  A0D8               	btfss	status,0,c
  6491  00228E  EF4B  F011         	goto	u4461
  6492  002292  EF4D  F011         	goto	u4460
  6493  002296                     u4461:
  6494  002296  EF57  F011         	goto	l3978
  6495  00229A                     u4460:
  6496  00229A  0E00               	movlw	0
  6497  00229C  6E22               	movwf	___flmul@prod^0,c
  6498  00229E  0E00               	movlw	0
  6499  0022A0  6E23               	movwf	(___flmul@prod+1)^0,c
  6500  0022A2  0E80               	movlw	128
  6501  0022A4  6E24               	movwf	(___flmul@prod+2)^0,c
  6502  0022A6  0E7F               	movlw	127
  6503  0022A8  6E25               	movwf	(___flmul@prod+3)^0,c
  6504  0022AA  EF85  F011         	goto	l3990
  6505  0022AE                     l3978:
  6506  0022AE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6507  0022B0  EF64  F011         	goto	u4470
  6508  0022B4  5027               	movf	(___flmul@temp+1)^0,w,c
  6509  0022B6  E106               	bnz	u4471
  6510  0022B8  0426               	decf	___flmul@temp^0,w,c
  6511  0022BA  B0D8               	btfsc	status,0,c
  6512  0022BC  EF62  F011         	goto	u4471
  6513  0022C0  EF64  F011         	goto	u4470
  6514  0022C4                     u4471:
  6515  0022C4  EF70  F011         	goto	l865
  6516  0022C8                     u4470:
  6517  0022C8  0E00               	movlw	0
  6518  0022CA  6E22               	movwf	___flmul@prod^0,c
  6519  0022CC  0E00               	movlw	0
  6520  0022CE  6E23               	movwf	(___flmul@prod+1)^0,c
  6521  0022D0  0E00               	movlw	0
  6522  0022D2  6E24               	movwf	(___flmul@prod+2)^0,c
  6523  0022D4  0E00               	movlw	0
  6524  0022D6  6E25               	movwf	(___flmul@prod+3)^0,c
  6525  0022D8  0E00               	movlw	0
  6526  0022DA  6E1B               	movwf	___flmul@sign^0,c
  6527  0022DC  EF85  F011         	goto	l3990
  6528  0022E0                     l865:
  6529  0022E0  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6530  0022E4  0EFF               	movlw	255
  6531  0022E6  1622               	andwf	___flmul@prod^0,f,c
  6532  0022E8  0EFF               	movlw	255
  6533  0022EA  1623               	andwf	(___flmul@prod+1)^0,f,c
  6534  0022EC  0E7F               	movlw	127
  6535  0022EE  1624               	andwf	(___flmul@prod+2)^0,f,c
  6536  0022F0  0E00               	movlw	0
  6537  0022F2  1625               	andwf	(___flmul@prod+3)^0,f,c
  6538  0022F4  A021               	btfss	___flmul@bexp^0,0,c
  6539  0022F6  EF7F  F011         	goto	u4481
  6540  0022FA  EF81  F011         	goto	u4480
  6541  0022FE                     u4481:
  6542  0022FE  EF82  F011         	goto	l3988
  6543  002302                     u4480:
  6544  002302  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6545  002304                     l3988:
  6546  002304  90D8               	bcf	status,0,c
  6547  002306  3021               	rrcf	___flmul@bexp^0,w,c
  6548  002308  6E25               	movwf	(___flmul@prod+3)^0,c
  6549  00230A                     l3990:
  6550  00230A  501B               	movf	___flmul@sign^0,w,c
  6551  00230C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6552  00230E  C022  F00F         	movff	___flmul@prod,?___flmul
  6553  002312  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6554  002316  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6555  00231A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6556  00231E                     l852:
  6557  00231E  0012               	return		;funcret
  6558  002320                     __end_of___flmul:
  6559                           	callstack 0
  6560                           
  6561 ;; *************** function ___flge *****************
  6562 ;; Defined at:
  6563 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  ff1             4   39[COMRAM] unsigned char 
  6566 ;;  ff2             4   43[COMRAM] unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;		None               void
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6578 ;;      Params:         8       0       0       0       0       0       0       0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6580 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6581 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6582 ;;Total ram usage:       12 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_efgtoa
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text16
  6592  003F86                     __ptext16:
  6593                           	callstack 0
  6594  003F86                     ___flge:
  6595                           	callstack 26
  6596  003F86  0E00               	movlw	0
  6597  003F88  1428               	andwf	___flge@ff1^0,w,c
  6598  003F8A  6E30               	movwf	??___flge^0,c
  6599  003F8C  0E00               	movlw	0
  6600  003F8E  1429               	andwf	(___flge@ff1+1)^0,w,c
  6601  003F90  6E31               	movwf	(??___flge+1)^0,c
  6602  003F92  0E80               	movlw	128
  6603  003F94  142A               	andwf	(___flge@ff1+2)^0,w,c
  6604  003F96  6E32               	movwf	(??___flge+2)^0,c
  6605  003F98  0E7F               	movlw	127
  6606  003F9A  142B               	andwf	(___flge@ff1+3)^0,w,c
  6607  003F9C  6E33               	movwf	(??___flge+3)^0,c
  6608  003F9E  5030               	movf	??___flge^0,w,c
  6609  003FA0  1031               	iorwf	(??___flge+1)^0,w,c
  6610  003FA2  1032               	iorwf	(??___flge+2)^0,w,c
  6611  003FA4  1033               	iorwf	(??___flge+3)^0,w,c
  6612  003FA6  A4D8               	btfss	status,2,c
  6613  003FA8  EFD8  F01F         	goto	u4641
  6614  003FAC  EFDA  F01F         	goto	u4640
  6615  003FB0                     u4641:
  6616  003FB0  EFE2  F01F         	goto	l4102
  6617  003FB4                     u4640:
  6618  003FB4  0E00               	movlw	0
  6619  003FB6  6E28               	movwf	___flge@ff1^0,c
  6620  003FB8  0E00               	movlw	0
  6621  003FBA  6E29               	movwf	(___flge@ff1+1)^0,c
  6622  003FBC  0E00               	movlw	0
  6623  003FBE  6E2A               	movwf	(___flge@ff1+2)^0,c
  6624  003FC0  0E00               	movlw	0
  6625  003FC2  6E2B               	movwf	(___flge@ff1+3)^0,c
  6626  003FC4                     l4102:
  6627  003FC4  0E00               	movlw	0
  6628  003FC6  142C               	andwf	___flge@ff2^0,w,c
  6629  003FC8  6E30               	movwf	??___flge^0,c
  6630  003FCA  0E00               	movlw	0
  6631  003FCC  142D               	andwf	(___flge@ff2+1)^0,w,c
  6632  003FCE  6E31               	movwf	(??___flge+1)^0,c
  6633  003FD0  0E80               	movlw	128
  6634  003FD2  142E               	andwf	(___flge@ff2+2)^0,w,c
  6635  003FD4  6E32               	movwf	(??___flge+2)^0,c
  6636  003FD6  0E7F               	movlw	127
  6637  003FD8  142F               	andwf	(___flge@ff2+3)^0,w,c
  6638  003FDA  6E33               	movwf	(??___flge+3)^0,c
  6639  003FDC  5030               	movf	??___flge^0,w,c
  6640  003FDE  1031               	iorwf	(??___flge+1)^0,w,c
  6641  003FE0  1032               	iorwf	(??___flge+2)^0,w,c
  6642  003FE2  1033               	iorwf	(??___flge+3)^0,w,c
  6643  003FE4  A4D8               	btfss	status,2,c
  6644  003FE6  EFF7  F01F         	goto	u4651
  6645  003FEA  EFF9  F01F         	goto	u4650
  6646  003FEE                     u4651:
  6647  003FEE  EF01  F020         	goto	l4106
  6648  003FF2                     u4650:
  6649  003FF2  0E00               	movlw	0
  6650  003FF4  6E2C               	movwf	___flge@ff2^0,c
  6651  003FF6  0E00               	movlw	0
  6652  003FF8  6E2D               	movwf	(___flge@ff2+1)^0,c
  6653  003FFA  0E00               	movlw	0
  6654  003FFC  6E2E               	movwf	(___flge@ff2+2)^0,c
  6655  003FFE  0E00               	movlw	0
  6656  004000  6E2F               	movwf	(___flge@ff2+3)^0,c
  6657  004002                     l4106:
  6658  004002  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6659  004004  EF06  F020         	goto	u4661
  6660  004008  EF08  F020         	goto	u4660
  6661  00400C                     u4661:
  6662  00400C  EF11  F020         	goto	l4110
  6663  004010                     u4660:
  6664  004010  6C28               	negf	___flge@ff1^0,c
  6665  004012  1E29               	comf	(___flge@ff1+1)^0,f,c
  6666  004014  B0D8               	btfsc	status,0,c
  6667  004016  2A29               	incf	(___flge@ff1+1)^0,f,c
  6668  004018  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6669  00401A  B0D8               	btfsc	status,0,c
  6670  00401C  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6671  00401E  0E80               	movlw	128
  6672  004020  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6673  004022                     l4110:
  6674  004022  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6675  004024  EF16  F020         	goto	u4671
  6676  004028  EF18  F020         	goto	u4670
  6677  00402C                     u4671:
  6678  00402C  EF21  F020         	goto	l499
  6679  004030                     u4670:
  6680  004030  6C2C               	negf	___flge@ff2^0,c
  6681  004032  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6682  004034  B0D8               	btfsc	status,0,c
  6683  004036  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6684  004038  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6685  00403A  B0D8               	btfsc	status,0,c
  6686  00403C  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6687  00403E  0E80               	movlw	128
  6688  004040  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6689  004042                     l499:
  6690  004042  0E00               	movlw	0
  6691  004044  1A28               	xorwf	___flge@ff1^0,f,c
  6692  004046  0E00               	movlw	0
  6693  004048  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6694  00404A  0E00               	movlw	0
  6695  00404C  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6696  00404E  0E80               	movlw	128
  6697  004050  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6698  004052  0E00               	movlw	0
  6699  004054  1A2C               	xorwf	___flge@ff2^0,f,c
  6700  004056  0E00               	movlw	0
  6701  004058  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6702  00405A  0E00               	movlw	0
  6703  00405C  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6704  00405E  0E80               	movlw	128
  6705  004060  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6706  004062  502C               	movf	___flge@ff2^0,w,c
  6707  004064  5C28               	subwf	___flge@ff1^0,w,c
  6708  004066  502D               	movf	(___flge@ff2+1)^0,w,c
  6709  004068  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6710  00406A  502E               	movf	(___flge@ff2+2)^0,w,c
  6711  00406C  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6712  00406E  502F               	movf	(___flge@ff2+3)^0,w,c
  6713  004070  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6714  004072  B0D8               	btfsc	status,0,c
  6715  004074  EF3E  F020         	goto	u4681
  6716  004078  EF40  F020         	goto	u4680
  6717  00407C                     u4681:
  6718  00407C  EF43  F020         	goto	l4116
  6719  004080                     u4680:
  6720  004080  90D8               	bcf	status,0,c
  6721  004082  EF44  F020         	goto	l504
  6722  004086                     l4116:
  6723  004086  80D8               	bsf	status,0,c
  6724  004088                     l504:
  6725  004088  0012               	return		;funcret
  6726  00408A                     __end_of___flge:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function ___fleq *****************
  6730 ;; Defined at:
  6731 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  ff1             4    0[COMRAM] unsigned char 
  6734 ;;  ff2             4    4[COMRAM] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;		None               void
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6746 ;;      Params:         8       0       0       0       0       0       0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6748 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6749 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6750 ;;Total ram usage:       12 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_efgtoa
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text17
  6760  004562                     __ptext17:
  6761                           	callstack 0
  6762  004562                     ___fleq:
  6763                           	callstack 26
  6764  004562  0E00               	movlw	0
  6765  004564  1401               	andwf	___fleq@ff1^0,w,c
  6766  004566  6E09               	movwf	??___fleq^0,c
  6767  004568  0E00               	movlw	0
  6768  00456A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6769  00456C  6E0A               	movwf	(??___fleq+1)^0,c
  6770  00456E  0E80               	movlw	128
  6771  004570  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6772  004572  6E0B               	movwf	(??___fleq+2)^0,c
  6773  004574  0E7F               	movlw	127
  6774  004576  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6775  004578  6E0C               	movwf	(??___fleq+3)^0,c
  6776  00457A  5009               	movf	??___fleq^0,w,c
  6777  00457C  100A               	iorwf	(??___fleq+1)^0,w,c
  6778  00457E  100B               	iorwf	(??___fleq+2)^0,w,c
  6779  004580  100C               	iorwf	(??___fleq+3)^0,w,c
  6780  004582  A4D8               	btfss	status,2,c
  6781  004584  EFC6  F022         	goto	u4611
  6782  004588  EFC8  F022         	goto	u4610
  6783  00458C                     u4611:
  6784  00458C  EFD0  F022         	goto	l4086
  6785  004590                     u4610:
  6786  004590  0E00               	movlw	0
  6787  004592  6E01               	movwf	___fleq@ff1^0,c
  6788  004594  0E00               	movlw	0
  6789  004596  6E02               	movwf	(___fleq@ff1+1)^0,c
  6790  004598  0E00               	movlw	0
  6791  00459A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6792  00459C  0E00               	movlw	0
  6793  00459E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6794  0045A0                     l4086:
  6795  0045A0  0E00               	movlw	0
  6796  0045A2  1405               	andwf	___fleq@ff2^0,w,c
  6797  0045A4  6E09               	movwf	??___fleq^0,c
  6798  0045A6  0E00               	movlw	0
  6799  0045A8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6800  0045AA  6E0A               	movwf	(??___fleq+1)^0,c
  6801  0045AC  0E80               	movlw	128
  6802  0045AE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6803  0045B0  6E0B               	movwf	(??___fleq+2)^0,c
  6804  0045B2  0E7F               	movlw	127
  6805  0045B4  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6806  0045B6  6E0C               	movwf	(??___fleq+3)^0,c
  6807  0045B8  5009               	movf	??___fleq^0,w,c
  6808  0045BA  100A               	iorwf	(??___fleq+1)^0,w,c
  6809  0045BC  100B               	iorwf	(??___fleq+2)^0,w,c
  6810  0045BE  100C               	iorwf	(??___fleq+3)^0,w,c
  6811  0045C0  A4D8               	btfss	status,2,c
  6812  0045C2  EFE5  F022         	goto	u4621
  6813  0045C6  EFE7  F022         	goto	u4620
  6814  0045CA                     u4621:
  6815  0045CA  EFEF  F022         	goto	l4090
  6816  0045CE                     u4620:
  6817  0045CE  0E00               	movlw	0
  6818  0045D0  6E05               	movwf	___fleq@ff2^0,c
  6819  0045D2  0E00               	movlw	0
  6820  0045D4  6E06               	movwf	(___fleq@ff2+1)^0,c
  6821  0045D6  0E00               	movlw	0
  6822  0045D8  6E07               	movwf	(___fleq@ff2+2)^0,c
  6823  0045DA  0E00               	movlw	0
  6824  0045DC  6E08               	movwf	(___fleq@ff2+3)^0,c
  6825  0045DE                     l4090:
  6826  0045DE  5005               	movf	___fleq@ff2^0,w,c
  6827  0045E0  1801               	xorwf	___fleq@ff1^0,w,c
  6828  0045E2  E10F               	bnz	u4630
  6829  0045E4  5006               	movf	(___fleq@ff2+1)^0,w,c
  6830  0045E6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6831  0045E8  E10C               	bnz	u4630
  6832  0045EA  5007               	movf	(___fleq@ff2+2)^0,w,c
  6833  0045EC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6834  0045EE  E109               	bnz	u4630
  6835  0045F0  5008               	movf	(___fleq@ff2+3)^0,w,c
  6836  0045F2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6837  0045F4  B4D8               	btfsc	status,2,c
  6838  0045F6  EFFF  F022         	goto	u4631
  6839  0045FA  EF01  F023         	goto	u4630
  6840  0045FE                     u4631:
  6841  0045FE  EF04  F023         	goto	l4094
  6842  004602                     u4630:
  6843  004602  90D8               	bcf	status,0,c
  6844  004604  EF05  F023         	goto	l493
  6845  004608                     l4094:
  6846  004608  80D8               	bsf	status,0,c
  6847  00460A                     l493:
  6848  00460A  0012               	return		;funcret
  6849  00460C                     __end_of___fleq:
  6850                           	callstack 0
  6851                           
  6852 ;; *************** function ___fldiv *****************
  6853 ;; Defined at:
  6854 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  b               4   39[COMRAM] unsigned char 
  6857 ;;  a               4   43[COMRAM] unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  grs             4   58[COMRAM] unsigned long 
  6860 ;;  rem             4   51[COMRAM] unsigned long 
  6861 ;;  new_exp         2   56[COMRAM] short 
  6862 ;;  aexp            1   63[COMRAM] unsigned char 
  6863 ;;  bexp            1   62[COMRAM] unsigned char 
  6864 ;;  sign            1   55[COMRAM] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  4   39[COMRAM] unsigned char 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6874 ;;      Params:         8       0       0       0       0       0       0       0       0
  6875 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6876 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6877 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6878 ;;Total ram usage:       25 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		_main
  6884 ;;		_efgtoa
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text18
  6889  002320                     __ptext18:
  6890                           	callstack 0
  6891  002320                     ___fldiv:
  6892                           	callstack 26
  6893  002320  502B               	movf	(___fldiv@b+3)^0,w,c
  6894  002322  0B80               	andlw	128
  6895  002324  6E38               	movwf	___fldiv@sign^0,c
  6896  002326  502B               	movf	(___fldiv@b+3)^0,w,c
  6897  002328  242B               	addwf	(___fldiv@b+3)^0,w,c
  6898  00232A  6E3F               	movwf	___fldiv@bexp^0,c
  6899  00232C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6900  00232E  EF9B  F011         	goto	u4071
  6901  002332  EF9D  F011         	goto	u4070
  6902  002336                     u4071:
  6903  002336  EF9E  F011         	goto	l3734
  6904  00233A                     u4070:
  6905  00233A  803F               	bsf	___fldiv@bexp^0,0,c
  6906  00233C                     l3734:
  6907  00233C  503F               	movf	___fldiv@bexp^0,w,c
  6908  00233E  B4D8               	btfsc	status,2,c
  6909  002340  EFA4  F011         	goto	u4081
  6910  002344  EFA6  F011         	goto	u4080
  6911  002348                     u4081:
  6912  002348  EFBB  F011         	goto	l3744
  6913  00234C                     u4080:
  6914  00234C  283F               	incf	___fldiv@bexp^0,w,c
  6915  00234E  A4D8               	btfss	status,2,c
  6916  002350  EFAC  F011         	goto	u4091
  6917  002354  EFAE  F011         	goto	u4090
  6918  002358                     u4091:
  6919  002358  EFB6  F011         	goto	l3740
  6920  00235C                     u4090:
  6921  00235C  0E00               	movlw	0
  6922  00235E  6E28               	movwf	___fldiv@b^0,c
  6923  002360  0E00               	movlw	0
  6924  002362  6E29               	movwf	(___fldiv@b+1)^0,c
  6925  002364  0E00               	movlw	0
  6926  002366  6E2A               	movwf	(___fldiv@b+2)^0,c
  6927  002368  0E00               	movlw	0
  6928  00236A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6929  00236C                     l3740:
  6930  00236C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6931  00236E  0E00               	movlw	0
  6932  002370  6E2B               	movwf	(___fldiv@b+3)^0,c
  6933  002372  EFC3  F011         	goto	l3746
  6934  002376                     l3744:
  6935  002376  0E00               	movlw	0
  6936  002378  6E28               	movwf	___fldiv@b^0,c
  6937  00237A  0E00               	movlw	0
  6938  00237C  6E29               	movwf	(___fldiv@b+1)^0,c
  6939  00237E  0E00               	movlw	0
  6940  002380  6E2A               	movwf	(___fldiv@b+2)^0,c
  6941  002382  0E00               	movlw	0
  6942  002384  6E2B               	movwf	(___fldiv@b+3)^0,c
  6943  002386                     l3746:
  6944  002386  502F               	movf	(___fldiv@a+3)^0,w,c
  6945  002388  0B80               	andlw	128
  6946  00238A  1A38               	xorwf	___fldiv@sign^0,f,c
  6947  00238C  502F               	movf	(___fldiv@a+3)^0,w,c
  6948  00238E  242F               	addwf	(___fldiv@a+3)^0,w,c
  6949  002390  6E40               	movwf	___fldiv@aexp^0,c
  6950  002392  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6951  002394  EFCE  F011         	goto	u4101
  6952  002398  EFD0  F011         	goto	u4100
  6953  00239C                     u4101:
  6954  00239C  EFD1  F011         	goto	l3754
  6955  0023A0                     u4100:
  6956  0023A0  8040               	bsf	___fldiv@aexp^0,0,c
  6957  0023A2                     l3754:
  6958  0023A2  5040               	movf	___fldiv@aexp^0,w,c
  6959  0023A4  B4D8               	btfsc	status,2,c
  6960  0023A6  EFD7  F011         	goto	u4111
  6961  0023AA  EFD9  F011         	goto	u4110
  6962  0023AE                     u4111:
  6963  0023AE  EFEE  F011         	goto	l3764
  6964  0023B2                     u4110:
  6965  0023B2  2840               	incf	___fldiv@aexp^0,w,c
  6966  0023B4  A4D8               	btfss	status,2,c
  6967  0023B6  EFDF  F011         	goto	u4121
  6968  0023BA  EFE1  F011         	goto	u4120
  6969  0023BE                     u4121:
  6970  0023BE  EFE9  F011         	goto	l3760
  6971  0023C2                     u4120:
  6972  0023C2  0E00               	movlw	0
  6973  0023C4  6E2C               	movwf	___fldiv@a^0,c
  6974  0023C6  0E00               	movlw	0
  6975  0023C8  6E2D               	movwf	(___fldiv@a+1)^0,c
  6976  0023CA  0E00               	movlw	0
  6977  0023CC  6E2E               	movwf	(___fldiv@a+2)^0,c
  6978  0023CE  0E00               	movlw	0
  6979  0023D0  6E2F               	movwf	(___fldiv@a+3)^0,c
  6980  0023D2                     l3760:
  6981  0023D2  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6982  0023D4  0E00               	movlw	0
  6983  0023D6  6E2F               	movwf	(___fldiv@a+3)^0,c
  6984  0023D8  EFF6  F011         	goto	l3766
  6985  0023DC                     l3764:
  6986  0023DC  0E00               	movlw	0
  6987  0023DE  6E2C               	movwf	___fldiv@a^0,c
  6988  0023E0  0E00               	movlw	0
  6989  0023E2  6E2D               	movwf	(___fldiv@a+1)^0,c
  6990  0023E4  0E00               	movlw	0
  6991  0023E6  6E2E               	movwf	(___fldiv@a+2)^0,c
  6992  0023E8  0E00               	movlw	0
  6993  0023EA  6E2F               	movwf	(___fldiv@a+3)^0,c
  6994  0023EC                     l3766:
  6995  0023EC  502C               	movf	___fldiv@a^0,w,c
  6996  0023EE  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6997  0023F0  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6998  0023F2  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6999  0023F4  A4D8               	btfss	status,2,c
  7000  0023F6  EFFF  F011         	goto	u4131
  7001  0023FA  EF01  F012         	goto	u4130
  7002  0023FE                     u4131:
  7003  0023FE  EF19  F012         	goto	l3778
  7004  002402                     u4130:
  7005  002402  0E00               	movlw	0
  7006  002404  6E28               	movwf	___fldiv@b^0,c
  7007  002406  0E00               	movlw	0
  7008  002408  6E29               	movwf	(___fldiv@b+1)^0,c
  7009  00240A  0E00               	movlw	0
  7010  00240C  6E2A               	movwf	(___fldiv@b+2)^0,c
  7011  00240E  0E00               	movlw	0
  7012  002410  6E2B               	movwf	(___fldiv@b+3)^0,c
  7013  002412  0E80               	movlw	128
  7014  002414  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7015  002416  0E7F               	movlw	127
  7016  002418  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7017  00241A                     l3772:
  7018  00241A  5038               	movf	___fldiv@sign^0,w,c
  7019  00241C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7020  00241E  C028  F028         	movff	___fldiv@b,?___fldiv
  7021  002422  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7022  002426  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7023  00242A  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7024  00242E  EF5C  F013         	goto	l816
  7025  002432                     l3778:
  7026  002432  503F               	movf	___fldiv@bexp^0,w,c
  7027  002434  A4D8               	btfss	status,2,c
  7028  002436  EF1F  F012         	goto	u4141
  7029  00243A  EF21  F012         	goto	u4140
  7030  00243E                     u4141:
  7031  00243E  EF2B  F012         	goto	l3786
  7032  002442                     u4140:
  7033  002442  0E00               	movlw	0
  7034  002444  6E28               	movwf	?___fldiv^0,c
  7035  002446  0E00               	movlw	0
  7036  002448  6E29               	movwf	(?___fldiv+1)^0,c
  7037  00244A  0E00               	movlw	0
  7038  00244C  6E2A               	movwf	(?___fldiv+2)^0,c
  7039  00244E  0E00               	movlw	0
  7040  002450  6E2B               	movwf	(?___fldiv+3)^0,c
  7041  002452  EF5C  F013         	goto	l816
  7042  002456                     l3786:
  7043  002456  5040               	movf	___fldiv@aexp^0,w,c
  7044  002458  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7045  00245C  6A31               	clrf	(??___fldiv+1)^0,c
  7046  00245E  5E30               	subwf	??___fldiv^0,f,c
  7047  002460  0E00               	movlw	0
  7048  002462  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7049  002464  0E7F               	movlw	127
  7050  002466  2430               	addwf	??___fldiv^0,w,c
  7051  002468  6E39               	movwf	___fldiv@new_exp^0,c
  7052  00246A  0E00               	movlw	0
  7053  00246C  2031               	addwfc	(??___fldiv+1)^0,w,c
  7054  00246E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7055  002470  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7056  002474  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7057  002478  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7058  00247C  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7059  002480  0E00               	movlw	0
  7060  002482  6E28               	movwf	___fldiv@b^0,c
  7061  002484  0E00               	movlw	0
  7062  002486  6E29               	movwf	(___fldiv@b+1)^0,c
  7063  002488  0E00               	movlw	0
  7064  00248A  6E2A               	movwf	(___fldiv@b+2)^0,c
  7065  00248C  0E00               	movlw	0
  7066  00248E  6E2B               	movwf	(___fldiv@b+3)^0,c
  7067  002490  0E00               	movlw	0
  7068  002492  6E3B               	movwf	___fldiv@grs^0,c
  7069  002494  0E00               	movlw	0
  7070  002496  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7071  002498  0E00               	movlw	0
  7072  00249A  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7073  00249C  0E00               	movlw	0
  7074  00249E  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7075  0024A0  0E00               	movlw	0
  7076  0024A2  6E40               	movwf	___fldiv@aexp^0,c
  7077  0024A4  EF8C  F012         	goto	l818
  7078  0024A8                     l3796:
  7079  0024A8  5040               	movf	___fldiv@aexp^0,w,c
  7080  0024AA  B4D8               	btfsc	status,2,c
  7081  0024AC  EF5A  F012         	goto	u4151
  7082  0024B0  EF5C  F012         	goto	u4150
  7083  0024B4                     u4151:
  7084  0024B4  EF73  F012         	goto	l3804
  7085  0024B8                     u4150:
  7086  0024B8  90D8               	bcf	status,0,c
  7087  0024BA  3634               	rlcf	___fldiv@rem^0,f,c
  7088  0024BC  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7089  0024BE  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7090  0024C0  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7091  0024C2  90D8               	bcf	status,0,c
  7092  0024C4  3628               	rlcf	___fldiv@b^0,f,c
  7093  0024C6  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7094  0024C8  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7095  0024CA  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7096  0024CC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7097  0024CE  EF6B  F012         	goto	u4161
  7098  0024D2  EF6D  F012         	goto	u4160
  7099  0024D6                     u4161:
  7100  0024D6  EF6E  F012         	goto	l821
  7101  0024DA                     u4160:
  7102  0024DA  8028               	bsf	___fldiv@b^0,0,c
  7103  0024DC                     l821:
  7104  0024DC  90D8               	bcf	status,0,c
  7105  0024DE  363B               	rlcf	___fldiv@grs^0,f,c
  7106  0024E0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7107  0024E2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7108  0024E4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7109  0024E6                     l3804:
  7110  0024E6  502C               	movf	___fldiv@a^0,w,c
  7111  0024E8  5C34               	subwf	___fldiv@rem^0,w,c
  7112  0024EA  502D               	movf	(___fldiv@a+1)^0,w,c
  7113  0024EC  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7114  0024EE  502E               	movf	(___fldiv@a+2)^0,w,c
  7115  0024F0  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7116  0024F2  502F               	movf	(___fldiv@a+3)^0,w,c
  7117  0024F4  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7118  0024F6  A0D8               	btfss	status,0,c
  7119  0024F8  EF80  F012         	goto	u4171
  7120  0024FC  EF82  F012         	goto	u4170
  7121  002500                     u4171:
  7122  002500  EF8B  F012         	goto	l3810
  7123  002504                     u4170:
  7124  002504  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7125  002506  502C               	movf	___fldiv@a^0,w,c
  7126  002508  5E34               	subwf	___fldiv@rem^0,f,c
  7127  00250A  502D               	movf	(___fldiv@a+1)^0,w,c
  7128  00250C  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7129  00250E  502E               	movf	(___fldiv@a+2)^0,w,c
  7130  002510  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7131  002512  502F               	movf	(___fldiv@a+3)^0,w,c
  7132  002514  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7133  002516                     l3810:
  7134  002516  2A40               	incf	___fldiv@aexp^0,f,c
  7135  002518                     l818:
  7136  002518  0E19               	movlw	25
  7137  00251A  6440               	cpfsgt	___fldiv@aexp^0,c
  7138  00251C  EF92  F012         	goto	u4181
  7139  002520  EF94  F012         	goto	u4180
  7140  002524                     u4181:
  7141  002524  EF54  F012         	goto	l3796
  7142  002528                     u4180:
  7143  002528  5034               	movf	___fldiv@rem^0,w,c
  7144  00252A  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7145  00252C  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7146  00252E  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7147  002530  B4D8               	btfsc	status,2,c
  7148  002532  EF9D  F012         	goto	u4191
  7149  002536  EF9F  F012         	goto	u4190
  7150  00253A                     u4191:
  7151  00253A  EFB7  F012         	goto	l3822
  7152  00253E                     u4190:
  7153  00253E  803B               	bsf	___fldiv@grs^0,0,c
  7154  002540  EFB7  F012         	goto	l3822
  7155  002544                     l3816:
  7156  002544  90D8               	bcf	status,0,c
  7157  002546  3628               	rlcf	___fldiv@b^0,f,c
  7158  002548  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7159  00254A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7160  00254C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7161  00254E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7162  002550  EFAC  F012         	goto	u4201
  7163  002554  EFAE  F012         	goto	u4200
  7164  002558                     u4201:
  7165  002558  EFAF  F012         	goto	l827
  7166  00255C                     u4200:
  7167  00255C  8028               	bsf	___fldiv@b^0,0,c
  7168  00255E                     l827:
  7169  00255E  90D8               	bcf	status,0,c
  7170  002560  363B               	rlcf	___fldiv@grs^0,f,c
  7171  002562  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7172  002564  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7173  002566  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7174  002568  0639               	decf	___fldiv@new_exp^0,f,c
  7175  00256A  A0D8               	btfss	status,0,c
  7176  00256C  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7177  00256E                     l3822:
  7178  00256E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7179  002570  EFBC  F012         	goto	u4211
  7180  002574  EFBE  F012         	goto	u4210
  7181  002578                     u4211:
  7182  002578  EFA2  F012         	goto	l3816
  7183  00257C                     u4210:
  7184  00257C  0E00               	movlw	0
  7185  00257E  6E40               	movwf	___fldiv@aexp^0,c
  7186  002580  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7187  002582  EFC5  F012         	goto	u4221
  7188  002586  EFC7  F012         	goto	u4220
  7189  00258A                     u4221:
  7190  00258A  EFEB  F012         	goto	l829
  7191  00258E                     u4220:
  7192  00258E  0EFF               	movlw	255
  7193  002590  143B               	andwf	___fldiv@grs^0,w,c
  7194  002592  6E30               	movwf	??___fldiv^0,c
  7195  002594  0EFF               	movlw	255
  7196  002596  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7197  002598  6E31               	movwf	(??___fldiv+1)^0,c
  7198  00259A  0EFF               	movlw	255
  7199  00259C  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7200  00259E  6E32               	movwf	(??___fldiv+2)^0,c
  7201  0025A0  0E7F               	movlw	127
  7202  0025A2  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7203  0025A4  6E33               	movwf	(??___fldiv+3)^0,c
  7204  0025A6  5030               	movf	??___fldiv^0,w,c
  7205  0025A8  1031               	iorwf	(??___fldiv+1)^0,w,c
  7206  0025AA  1032               	iorwf	(??___fldiv+2)^0,w,c
  7207  0025AC  1033               	iorwf	(??___fldiv+3)^0,w,c
  7208  0025AE  B4D8               	btfsc	status,2,c
  7209  0025B0  EFDC  F012         	goto	u4231
  7210  0025B4  EFDE  F012         	goto	u4230
  7211  0025B8                     u4231:
  7212  0025B8  EFE2  F012         	goto	l830
  7213  0025BC                     u4230:
  7214  0025BC                     l3830:
  7215  0025BC  0E01               	movlw	1
  7216  0025BE  6E40               	movwf	___fldiv@aexp^0,c
  7217  0025C0  EFEB  F012         	goto	l829
  7218  0025C4                     l830:
  7219  0025C4  A028               	btfss	___fldiv@b^0,0,c
  7220  0025C6  EFE7  F012         	goto	u4241
  7221  0025CA  EFE9  F012         	goto	u4240
  7222  0025CE                     u4241:
  7223  0025CE  EFEB  F012         	goto	l829
  7224  0025D2                     u4240:
  7225  0025D2  EFDE  F012         	goto	l3830
  7226  0025D6                     l829:
  7227  0025D6  5040               	movf	___fldiv@aexp^0,w,c
  7228  0025D8  B4D8               	btfsc	status,2,c
  7229  0025DA  EFF1  F012         	goto	u4251
  7230  0025DE  EFF3  F012         	goto	u4250
  7231  0025E2                     u4251:
  7232  0025E2  EF17  F013         	goto	l3842
  7233  0025E6                     u4250:
  7234  0025E6  0E01               	movlw	1
  7235  0025E8  2628               	addwf	___fldiv@b^0,f,c
  7236  0025EA  0E00               	movlw	0
  7237  0025EC  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7238  0025EE  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7239  0025F0  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7240  0025F2  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7241  0025F4  EFFE  F012         	goto	u4261
  7242  0025F8  EF00  F013         	goto	u4260
  7243  0025FC                     u4261:
  7244  0025FC  EF17  F013         	goto	l3842
  7245  002600                     u4260:
  7246  002600  C028  F030         	movff	___fldiv@b,??___fldiv
  7247  002604  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7248  002608  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7249  00260C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7250  002610  3433               	rlcf	(??___fldiv+3)^0,w,c
  7251  002612  3233               	rrcf	(??___fldiv+3)^0,f,c
  7252  002614  3232               	rrcf	(??___fldiv+2)^0,f,c
  7253  002616  3231               	rrcf	(??___fldiv+1)^0,f,c
  7254  002618  3230               	rrcf	??___fldiv^0,f,c
  7255  00261A  C030  F028         	movff	??___fldiv,___fldiv@b
  7256  00261E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7257  002622  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7258  002626  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7259  00262A  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7260  00262C  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7261  00262E                     l3842:
  7262  00262E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7263  002630  EF22  F013         	goto	u4271
  7264  002634  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7265  002636  E108               	bnz	u4270
  7266  002638  2839               	incf	___fldiv@new_exp^0,w,c
  7267  00263A  A0D8               	btfss	status,0,c
  7268  00263C  EF22  F013         	goto	u4271
  7269  002640  EF24  F013         	goto	u4270
  7270  002644                     u4271:
  7271  002644  EF2F  F013         	goto	l3846
  7272  002648                     u4270:
  7273  002648  0E00               	movlw	0
  7274  00264A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7275  00264C  6839               	setf	___fldiv@new_exp^0,c
  7276  00264E  0E00               	movlw	0
  7277  002650  6E28               	movwf	___fldiv@b^0,c
  7278  002652  0E00               	movlw	0
  7279  002654  6E29               	movwf	(___fldiv@b+1)^0,c
  7280  002656  0E00               	movlw	0
  7281  002658  6E2A               	movwf	(___fldiv@b+2)^0,c
  7282  00265A  0E00               	movlw	0
  7283  00265C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7284  00265E                     l3846:
  7285  00265E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7286  002660  EF3C  F013         	goto	u4280
  7287  002664  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7288  002666  E106               	bnz	u4281
  7289  002668  0439               	decf	___fldiv@new_exp^0,w,c
  7290  00266A  B0D8               	btfsc	status,0,c
  7291  00266C  EF3A  F013         	goto	u4281
  7292  002670  EF3C  F013         	goto	u4280
  7293  002674                     u4281:
  7294  002674  EF4A  F013         	goto	l3850
  7295  002678                     u4280:
  7296  002678  0E00               	movlw	0
  7297  00267A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7298  00267C  0E00               	movlw	0
  7299  00267E  6E39               	movwf	___fldiv@new_exp^0,c
  7300  002680  0E00               	movlw	0
  7301  002682  6E28               	movwf	___fldiv@b^0,c
  7302  002684  0E00               	movlw	0
  7303  002686  6E29               	movwf	(___fldiv@b+1)^0,c
  7304  002688  0E00               	movlw	0
  7305  00268A  6E2A               	movwf	(___fldiv@b+2)^0,c
  7306  00268C  0E00               	movlw	0
  7307  00268E  6E2B               	movwf	(___fldiv@b+3)^0,c
  7308  002690  0E00               	movlw	0
  7309  002692  6E38               	movwf	___fldiv@sign^0,c
  7310  002694                     l3850:
  7311  002694  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7312  002698  A03F               	btfss	___fldiv@bexp^0,0,c
  7313  00269A  EF51  F013         	goto	u4291
  7314  00269E  EF53  F013         	goto	u4290
  7315  0026A2                     u4291:
  7316  0026A2  EF56  F013         	goto	l3856
  7317  0026A6                     u4290:
  7318  0026A6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7319  0026A8  EF57  F013         	goto	l3858
  7320  0026AC                     l3856:
  7321  0026AC  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7322  0026AE                     l3858:
  7323  0026AE  90D8               	bcf	status,0,c
  7324  0026B0  303F               	rrcf	___fldiv@bexp^0,w,c
  7325  0026B2  6E2B               	movwf	(___fldiv@b+3)^0,c
  7326  0026B4  EF0D  F012         	goto	l3772
  7327  0026B8                     l816:
  7328  0026B8  0012               	return		;funcret
  7329  0026BA                     __end_of___fldiv:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function ___awmod *****************
  7333 ;; Defined at:
  7334 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  dividend        2    0[COMRAM] int 
  7337 ;;  divisor         2    2[COMRAM] int 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  sign            1    5[COMRAM] unsigned char 
  7340 ;;  counter         1    4[COMRAM] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  2    0[COMRAM] int 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7350 ;;      Params:         4       0       0       0       0       0       0       0       0
  7351 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7353 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7354 ;;Total ram usage:        6 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_efgtoa
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text19
  7364  0044B2                     __ptext19:
  7365                           	callstack 0
  7366  0044B2                     ___awmod:
  7367                           	callstack 26
  7368  0044B2  0E00               	movlw	0
  7369  0044B4  6E06               	movwf	___awmod@sign^0,c
  7370  0044B6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7371  0044B8  EF62  F022         	goto	u4550
  7372  0044BC  EF60  F022         	goto	u4551
  7373  0044C0                     u4551:
  7374  0044C0  EF68  F022         	goto	l4054
  7375  0044C4                     u4550:
  7376  0044C4  6C01               	negf	___awmod@dividend^0,c
  7377  0044C6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7378  0044C8  B0D8               	btfsc	status,0,c
  7379  0044CA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7380  0044CC  0E01               	movlw	1
  7381  0044CE  6E06               	movwf	___awmod@sign^0,c
  7382  0044D0                     l4054:
  7383  0044D0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7384  0044D2  EF6F  F022         	goto	u4560
  7385  0044D6  EF6D  F022         	goto	u4561
  7386  0044DA                     u4561:
  7387  0044DA  EF73  F022         	goto	l4058
  7388  0044DE                     u4560:
  7389  0044DE  6C03               	negf	___awmod@divisor^0,c
  7390  0044E0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7391  0044E2  B0D8               	btfsc	status,0,c
  7392  0044E4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7393  0044E6                     l4058:
  7394  0044E6  5003               	movf	___awmod@divisor^0,w,c
  7395  0044E8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7396  0044EA  B4D8               	btfsc	status,2,c
  7397  0044EC  EF7A  F022         	goto	u4571
  7398  0044F0  EF7C  F022         	goto	u4570
  7399  0044F4                     u4571:
  7400  0044F4  EFA0  F022         	goto	l4074
  7401  0044F8                     u4570:
  7402  0044F8  0E01               	movlw	1
  7403  0044FA  6E05               	movwf	___awmod@counter^0,c
  7404  0044FC  EF84  F022         	goto	l4064
  7405  004500                     l4062:
  7406  004500  90D8               	bcf	status,0,c
  7407  004502  3603               	rlcf	___awmod@divisor^0,f,c
  7408  004504  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7409  004506  2A05               	incf	___awmod@counter^0,f,c
  7410  004508                     l4064:
  7411  004508  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7412  00450A  EF89  F022         	goto	u4581
  7413  00450E  EF8B  F022         	goto	u4580
  7414  004512                     u4581:
  7415  004512  EF80  F022         	goto	l4062
  7416  004516                     u4580:
  7417  004516                     l4066:
  7418  004516  5003               	movf	___awmod@divisor^0,w,c
  7419  004518  5C01               	subwf	___awmod@dividend^0,w,c
  7420  00451A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7421  00451C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7422  00451E  A0D8               	btfss	status,0,c
  7423  004520  EF94  F022         	goto	u4591
  7424  004524  EF96  F022         	goto	u4590
  7425  004528                     u4591:
  7426  004528  EF9A  F022         	goto	l4070
  7427  00452C                     u4590:
  7428  00452C  5003               	movf	___awmod@divisor^0,w,c
  7429  00452E  5E01               	subwf	___awmod@dividend^0,f,c
  7430  004530  5004               	movf	(___awmod@divisor+1)^0,w,c
  7431  004532  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7432  004534                     l4070:
  7433  004534  90D8               	bcf	status,0,c
  7434  004536  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7435  004538  3203               	rrcf	___awmod@divisor^0,f,c
  7436  00453A  2E05               	decfsz	___awmod@counter^0,f,c
  7437  00453C  EF8B  F022         	goto	l4066
  7438  004540                     l4074:
  7439  004540  5006               	movf	___awmod@sign^0,w,c
  7440  004542  B4D8               	btfsc	status,2,c
  7441  004544  EFA6  F022         	goto	u4601
  7442  004548  EFA8  F022         	goto	u4600
  7443  00454C                     u4601:
  7444  00454C  EFAC  F022         	goto	l4078
  7445  004550                     u4600:
  7446  004550  6C01               	negf	___awmod@dividend^0,c
  7447  004552  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7448  004554  B0D8               	btfsc	status,0,c
  7449  004556  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7450  004558                     l4078:
  7451  004558  C001  F001         	movff	___awmod@dividend,?___awmod
  7452  00455C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7453  004560  0012               	return		;funcret
  7454  004562                     __end_of___awmod:
  7455                           	callstack 0
  7456                           
  7457 ;; *************** function ___awdiv *****************
  7458 ;; Defined at:
  7459 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  dividend        2    0[COMRAM] int 
  7462 ;;  divisor         2    2[COMRAM] int 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  quotient        2    6[COMRAM] int 
  7465 ;;  sign            1    5[COMRAM] unsigned char 
  7466 ;;  counter         1    4[COMRAM] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  2    0[COMRAM] int 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7476 ;;      Params:         4       0       0       0       0       0       0       0       0
  7477 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7479 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7480 ;;Total ram usage:        8 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_efgtoa
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text20
  7490  0043EE                     __ptext20:
  7491                           	callstack 0
  7492  0043EE                     ___awdiv:
  7493                           	callstack 26
  7494  0043EE  0E00               	movlw	0
  7495  0043F0  6E06               	movwf	___awdiv@sign^0,c
  7496  0043F2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7497  0043F4  EF00  F022         	goto	u4490
  7498  0043F8  EFFE  F021         	goto	u4491
  7499  0043FC                     u4491:
  7500  0043FC  EF06  F022         	goto	l4010
  7501  004400                     u4490:
  7502  004400  6C03               	negf	___awdiv@divisor^0,c
  7503  004402  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7504  004404  B0D8               	btfsc	status,0,c
  7505  004406  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7506  004408  0E01               	movlw	1
  7507  00440A  6E06               	movwf	___awdiv@sign^0,c
  7508  00440C                     l4010:
  7509  00440C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7510  00440E  EF0D  F022         	goto	u4500
  7511  004412  EF0B  F022         	goto	u4501
  7512  004416                     u4501:
  7513  004416  EF13  F022         	goto	l4016
  7514  00441A                     u4500:
  7515  00441A  6C01               	negf	___awdiv@dividend^0,c
  7516  00441C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7517  00441E  B0D8               	btfsc	status,0,c
  7518  004420  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7519  004422  0E01               	movlw	1
  7520  004424  1A06               	xorwf	___awdiv@sign^0,f,c
  7521  004426                     l4016:
  7522  004426  0E00               	movlw	0
  7523  004428  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7524  00442A  0E00               	movlw	0
  7525  00442C  6E07               	movwf	___awdiv@quotient^0,c
  7526  00442E  5003               	movf	___awdiv@divisor^0,w,c
  7527  004430  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7528  004432  B4D8               	btfsc	status,2,c
  7529  004434  EF1E  F022         	goto	u4511
  7530  004438  EF20  F022         	goto	u4510
  7531  00443C                     u4511:
  7532  00443C  EF48  F022         	goto	l4038
  7533  004440                     u4510:
  7534  004440  0E01               	movlw	1
  7535  004442  6E05               	movwf	___awdiv@counter^0,c
  7536  004444  EF28  F022         	goto	l4024
  7537  004448                     l4022:
  7538  004448  90D8               	bcf	status,0,c
  7539  00444A  3603               	rlcf	___awdiv@divisor^0,f,c
  7540  00444C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7541  00444E  2A05               	incf	___awdiv@counter^0,f,c
  7542  004450                     l4024:
  7543  004450  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7544  004452  EF2D  F022         	goto	u4521
  7545  004456  EF2F  F022         	goto	u4520
  7546  00445A                     u4521:
  7547  00445A  EF24  F022         	goto	l4022
  7548  00445E                     u4520:
  7549  00445E                     l4026:
  7550  00445E  90D8               	bcf	status,0,c
  7551  004460  3607               	rlcf	___awdiv@quotient^0,f,c
  7552  004462  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7553  004464  5003               	movf	___awdiv@divisor^0,w,c
  7554  004466  5C01               	subwf	___awdiv@dividend^0,w,c
  7555  004468  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7556  00446A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7557  00446C  A0D8               	btfss	status,0,c
  7558  00446E  EF3B  F022         	goto	u4531
  7559  004472  EF3D  F022         	goto	u4530
  7560  004476                     u4531:
  7561  004476  EF42  F022         	goto	l4034
  7562  00447A                     u4530:
  7563  00447A  5003               	movf	___awdiv@divisor^0,w,c
  7564  00447C  5E01               	subwf	___awdiv@dividend^0,f,c
  7565  00447E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7566  004480  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7567  004482  8007               	bsf	___awdiv@quotient^0,0,c
  7568  004484                     l4034:
  7569  004484  90D8               	bcf	status,0,c
  7570  004486  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7571  004488  3203               	rrcf	___awdiv@divisor^0,f,c
  7572  00448A  2E05               	decfsz	___awdiv@counter^0,f,c
  7573  00448C  EF2F  F022         	goto	l4026
  7574  004490                     l4038:
  7575  004490  5006               	movf	___awdiv@sign^0,w,c
  7576  004492  B4D8               	btfsc	status,2,c
  7577  004494  EF4E  F022         	goto	u4541
  7578  004498  EF50  F022         	goto	u4540
  7579  00449C                     u4541:
  7580  00449C  EF54  F022         	goto	l4042
  7581  0044A0                     u4540:
  7582  0044A0  6C07               	negf	___awdiv@quotient^0,c
  7583  0044A2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7584  0044A4  B0D8               	btfsc	status,0,c
  7585  0044A6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7586  0044A8                     l4042:
  7587  0044A8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7588  0044AC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7589  0044B0  0012               	return		;funcret
  7590  0044B2                     __end_of___awdiv:
  7591                           	callstack 0
  7592                           
  7593 ;; *************** function _dtoa *****************
  7594 ;; Defined at:
  7595 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7598 ;;		 -> sprintf@f(6), 
  7599 ;;  d               8   29[COMRAM] long long 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  n               8   53[COMRAM] long long 
  7602 ;;  i               2   61[COMRAM] int 
  7603 ;;  s               2   51[COMRAM] int 
  7604 ;;  w               2   49[COMRAM] int 
  7605 ;;  p               2   47[COMRAM] int 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  2   27[COMRAM] int 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7615 ;;      Params:        10       0       0       0       0       0       0       0       0
  7616 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7617 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7618 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7619 ;;Total ram usage:       36 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    4
  7622 ;; This function calls:
  7623 ;;		___aodiv
  7624 ;;		___aomod
  7625 ;;		_abs
  7626 ;;		_pad
  7627 ;; This function is called by:
  7628 ;;		_vfpfcnvrt
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text21
  7633  0029BA                     __ptext21:
  7634                           	callstack 0
  7635  0029BA                     _dtoa:
  7636                           	callstack 23
  7637  0029BA                     
  7638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7639  0029BA  C01E  F036         	movff	dtoa@d,dtoa@n
  7640  0029BE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7641  0029C2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7642  0029C6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7643  0029CA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7644  0029CE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7645  0029D2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7646  0029D6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7647  0029DA                     
  7648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7649  0029DA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7650  0029DC  EFF2  F014         	goto	u5101
  7651  0029E0  EFF5  F014         	goto	u5100
  7652  0029E4                     u5101:
  7653  0029E4  0E01               	movlw	1
  7654  0029E6  EFF6  F014         	goto	u5110
  7655  0029EA                     u5100:
  7656  0029EA  0E00               	movlw	0
  7657  0029EC                     u5110:
  7658  0029EC  6E34               	movwf	dtoa@s^0,c
  7659  0029EE  6A35               	clrf	(dtoa@s+1)^0,c
  7660                           
  7661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7662  0029F0  5034               	movf	dtoa@s^0,w,c
  7663  0029F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7664  0029F4  B4D8               	btfsc	status,2,c
  7665  0029F6  EFFF  F014         	goto	u5121
  7666  0029FA  EF01  F015         	goto	u5120
  7667  0029FE                     u5121:
  7668  0029FE  EF11  F015         	goto	l4300
  7669  002A02                     u5120:
  7670  002A02                     
  7671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7672  002A02  1E3D               	comf	(dtoa@n+7)^0,f,c
  7673  002A04  1E3C               	comf	(dtoa@n+6)^0,f,c
  7674  002A06  1E3B               	comf	(dtoa@n+5)^0,f,c
  7675  002A08  1E3A               	comf	(dtoa@n+4)^0,f,c
  7676  002A0A  1E39               	comf	(dtoa@n+3)^0,f,c
  7677  002A0C  1E38               	comf	(dtoa@n+2)^0,f,c
  7678  002A0E  1E37               	comf	(dtoa@n+1)^0,f,c
  7679  002A10  6C36               	negf	dtoa@n^0,c
  7680  002A12  0E00               	movlw	0
  7681  002A14  2237               	addwfc	(dtoa@n+1)^0,f,c
  7682  002A16  2238               	addwfc	(dtoa@n+2)^0,f,c
  7683  002A18  2239               	addwfc	(dtoa@n+3)^0,f,c
  7684  002A1A  223A               	addwfc	(dtoa@n+4)^0,f,c
  7685  002A1C  223B               	addwfc	(dtoa@n+5)^0,f,c
  7686  002A1E  223C               	addwfc	(dtoa@n+6)^0,f,c
  7687  002A20  223D               	addwfc	(dtoa@n+7)^0,f,c
  7688  002A22                     l4300:
  7689                           
  7690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7691  002A22  0100               	movlb	0	; () banked
  7692  002A24  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7693  002A26  EF17  F015         	goto	u5131
  7694  002A2A  EF19  F015         	goto	u5130
  7695  002A2E                     u5131:
  7696  002A2E  EF1A  F015         	goto	l4304
  7697  002A32                     u5130:
  7698  002A32                     
  7699                           ; BSR set to: 0
  7700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7701  002A32  93F1               	bcf	_flags& (0+255),1,b
  7702  002A34                     l4304:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7706  002A34  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7707  002A36  EF27  F015         	goto	u5140
  7708  002A3A  51F0               	movf	(_prec+1)& (0+255),w,b
  7709  002A3C  E106               	bnz	u5141
  7710  002A3E  05EF               	decf	_prec& (0+255),w,b
  7711  002A40  B0D8               	btfsc	status,0,c
  7712  002A42  EF25  F015         	goto	u5141
  7713  002A46  EF27  F015         	goto	u5140
  7714  002A4A                     u5141:
  7715  002A4A  EF2D  F015         	goto	l966
  7716  002A4E                     u5140:
  7717  002A4E                     
  7718                           ; BSR set to: 0
  7719  002A4E  0E00               	movlw	0
  7720  002A50  6E31               	movwf	(dtoa@p+1)^0,c
  7721  002A52  0E01               	movlw	1
  7722  002A54  6E30               	movwf	dtoa@p^0,c
  7723  002A56  EF31  F015         	goto	l968
  7724  002A5A                     l966:
  7725                           
  7726                           ; BSR set to: 0
  7727  002A5A  C0EF  F030         	movff	_prec,dtoa@p
  7728  002A5E  C0F0  F031         	movff	_prec+1,dtoa@p+1
  7729  002A62                     l968:
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7733  002A62  C112  F032         	movff	_width,dtoa@w
  7734  002A66  C113  F033         	movff	_width+1,dtoa@w+1
  7735  002A6A                     
  7736                           ; BSR set to: 0
  7737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7738  002A6A  5034               	movf	dtoa@s^0,w,c
  7739  002A6C  1035               	iorwf	(dtoa@s+1)^0,w,c
  7740  002A6E  A4D8               	btfss	status,2,c
  7741  002A70  EF3C  F015         	goto	u5151
  7742  002A74  EF3E  F015         	goto	u5150
  7743  002A78                     u5151:
  7744  002A78  EF45  F015         	goto	l4312
  7745  002A7C                     u5150:
  7746  002A7C                     
  7747                           ; BSR set to: 0
  7748  002A7C  A5F1               	btfss	_flags& (0+255),2,b
  7749  002A7E  EF43  F015         	goto	u5161
  7750  002A82  EF45  F015         	goto	u5160
  7751  002A86                     u5161:
  7752  002A86  EF48  F015         	goto	l4314
  7753  002A8A                     u5160:
  7754  002A8A                     l4312:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7758  002A8A  0632               	decf	dtoa@w^0,f,c
  7759  002A8C  A0D8               	btfss	status,0,c
  7760  002A8E  0633               	decf	(dtoa@w+1)^0,f,c
  7761  002A90                     l4314:
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7765  002A90  0E00               	movlw	0
  7766  002A92  6E3F               	movwf	(dtoa@i+1)^0,c
  7767  002A94  0E4F               	movlw	79
  7768  002A96  6E3E               	movwf	dtoa@i^0,c
  7769  002A98                     
  7770                           ; BSR set to: 0
  7771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7772  002A98  0E00               	movlw	0
  7773  002A9A  0101               	movlb	1	; () banked
  7774  002A9C  6F69               	movwf	(_dbuf+79)& (0+255),b
  7775                           
  7776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7777  002A9E  EFCD  F015         	goto	l4328
  7778  002AA2                     l4318:
  7779                           
  7780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7781  002AA2  063E               	decf	dtoa@i^0,f,c
  7782  002AA4  A0D8               	btfss	status,0,c
  7783  002AA6  063F               	decf	(dtoa@i+1)^0,f,c
  7784  002AA8                     
  7785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7786  002AA8  0E1A               	movlw	low _dbuf
  7787  002AAA  243E               	addwf	dtoa@i^0,w,c
  7788  002AAC  6ED9               	movwf	fsr2l,c
  7789  002AAE  0E01               	movlw	high _dbuf
  7790  002AB0  203F               	addwfc	(dtoa@i+1)^0,w,c
  7791  002AB2  6EDA               	movwf	fsr2h,c
  7792  002AB4  C036  F001         	movff	dtoa@n,___aomod@dividend
  7793  002AB8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7794  002ABC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7795  002AC0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7796  002AC4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7797  002AC8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7798  002ACC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7799  002AD0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7800  002AD4  0E0A               	movlw	10
  7801  002AD6  6E09               	movwf	___aomod@divisor^0,c
  7802  002AD8  0E00               	movlw	0
  7803  002ADA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7804  002ADC  0E00               	movlw	0
  7805  002ADE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7806  002AE0  0E00               	movlw	0
  7807  002AE2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7808  002AE4  0E00               	movlw	0
  7809  002AE6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7810  002AE8  0E00               	movlw	0
  7811  002AEA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7812  002AEC  0E00               	movlw	0
  7813  002AEE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7814  002AF0  0E00               	movlw	0
  7815  002AF2  6E10               	movwf	(___aomod@divisor+7)^0,c
  7816  002AF4  EC8E  F01E         	call	___aomod	;wreg free
  7817  002AF8  C001  F026         	movff	?___aomod,??_dtoa
  7818  002AFC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7819  002B00  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7820  002B04  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7821  002B08  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7822  002B0C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7823  002B10  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7824  002B14  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7825  002B18  C026  F013         	movff	??_dtoa,abs@a
  7826  002B1C  C028  F014         	movff	??_dtoa+2,abs@a+1
  7827  002B20  ECFD  F024         	call	_abs	;wreg free
  7828  002B24  5013               	movf	?_abs^0,w,c
  7829  002B26  0F30               	addlw	48
  7830  002B28  6EDF               	movwf	indf2,c
  7831  002B2A                     
  7832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7833  002B2A  0630               	decf	dtoa@p^0,f,c
  7834  002B2C  A0D8               	btfss	status,0,c
  7835  002B2E  0631               	decf	(dtoa@p+1)^0,f,c
  7836  002B30                     
  7837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7838  002B30  0632               	decf	dtoa@w^0,f,c
  7839  002B32  A0D8               	btfss	status,0,c
  7840  002B34  0633               	decf	(dtoa@w+1)^0,f,c
  7841  002B36                     
  7842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7843  002B36  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7844  002B3A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7845  002B3E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7846  002B42  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7847  002B46  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7848  002B4A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7849  002B4E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7850  002B52  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7851  002B56  0E0A               	movlw	10
  7852  002B58  6E09               	movwf	___aodiv@divisor^0,c
  7853  002B5A  0E00               	movlw	0
  7854  002B5C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7855  002B5E  0E00               	movlw	0
  7856  002B60  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7857  002B62  0E00               	movlw	0
  7858  002B64  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7859  002B66  0E00               	movlw	0
  7860  002B68  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7861  002B6A  0E00               	movlw	0
  7862  002B6C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7863  002B6E  0E00               	movlw	0
  7864  002B70  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7865  002B72  0E00               	movlw	0
  7866  002B74  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7867  002B76  ECCA  F01D         	call	___aodiv	;wreg free
  7868  002B7A  C001  F036         	movff	?___aodiv,dtoa@n
  7869  002B7E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7870  002B82  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7871  002B86  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7872  002B8A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7873  002B8E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7874  002B92  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7875  002B96  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7876  002B9A                     l4328:
  7877                           
  7878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7879  002B9A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7880  002B9C  EFD8  F015         	goto	u5171
  7881  002BA0  503F               	movf	(dtoa@i+1)^0,w,c
  7882  002BA2  E108               	bnz	u5170
  7883  002BA4  043E               	decf	dtoa@i^0,w,c
  7884  002BA6  A0D8               	btfss	status,0,c
  7885  002BA8  EFD8  F015         	goto	u5171
  7886  002BAC  EFDA  F015         	goto	u5170
  7887  002BB0                     u5171:
  7888  002BB0  EF0B  F016         	goto	l4338
  7889  002BB4                     u5170:
  7890  002BB4  5036               	movf	dtoa@n^0,w,c
  7891  002BB6  1037               	iorwf	(dtoa@n+1)^0,w,c
  7892  002BB8  1038               	iorwf	(dtoa@n+2)^0,w,c
  7893  002BBA  1039               	iorwf	(dtoa@n+3)^0,w,c
  7894  002BBC  103A               	iorwf	(dtoa@n+4)^0,w,c
  7895  002BBE  103B               	iorwf	(dtoa@n+5)^0,w,c
  7896  002BC0  103C               	iorwf	(dtoa@n+6)^0,w,c
  7897  002BC2  103D               	iorwf	(dtoa@n+7)^0,w,c
  7898  002BC4  A4D8               	btfss	status,2,c
  7899  002BC6  EFE7  F015         	goto	u5181
  7900  002BCA  EFE9  F015         	goto	u5180
  7901  002BCE                     u5181:
  7902  002BCE  EF51  F015         	goto	l4318
  7903  002BD2                     u5180:
  7904  002BD2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7905  002BD4  EFF6  F015         	goto	u5190
  7906  002BD8  5031               	movf	(dtoa@p+1)^0,w,c
  7907  002BDA  E106               	bnz	u5191
  7908  002BDC  0430               	decf	dtoa@p^0,w,c
  7909  002BDE  B0D8               	btfsc	status,0,c
  7910  002BE0  EFF4  F015         	goto	u5191
  7911  002BE4  EFF6  F015         	goto	u5190
  7912  002BE8                     u5191:
  7913  002BE8  EF51  F015         	goto	l4318
  7914  002BEC                     u5190:
  7915  002BEC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7916  002BEE  EF01  F016         	goto	u5201
  7917  002BF2  5033               	movf	(dtoa@w+1)^0,w,c
  7918  002BF4  E108               	bnz	u5200
  7919  002BF6  0432               	decf	dtoa@w^0,w,c
  7920  002BF8  A0D8               	btfss	status,0,c
  7921  002BFA  EF01  F016         	goto	u5201
  7922  002BFE  EF03  F016         	goto	u5200
  7923  002C02                     u5201:
  7924  002C02  EF0B  F016         	goto	l4338
  7925  002C06                     u5200:
  7926  002C06  0100               	movlb	0	; () banked
  7927  002C08  B3F1               	btfsc	_flags& (0+255),1,b
  7928  002C0A  EF09  F016         	goto	u5211
  7929  002C0E  EF0B  F016         	goto	u5210
  7930  002C12                     u5211:
  7931  002C12  EF51  F015         	goto	l4318
  7932  002C16                     u5210:
  7933  002C16                     l4338:
  7934                           
  7935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7936  002C16  5034               	movf	dtoa@s^0,w,c
  7937  002C18  1035               	iorwf	(dtoa@s+1)^0,w,c
  7938  002C1A  A4D8               	btfss	status,2,c
  7939  002C1C  EF12  F016         	goto	u5221
  7940  002C20  EF14  F016         	goto	u5220
  7941  002C24                     u5221:
  7942  002C24  EF1C  F016         	goto	l4342
  7943  002C28                     u5220:
  7944  002C28  0100               	movlb	0	; () banked
  7945  002C2A  A5F1               	btfss	_flags& (0+255),2,b
  7946  002C2C  EF1A  F016         	goto	u5231
  7947  002C30  EF1C  F016         	goto	u5230
  7948  002C34                     u5231:
  7949  002C34  EF3A  F016         	goto	l4352
  7950  002C38                     u5230:
  7951  002C38                     l4342:
  7952                           
  7953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7954  002C38  063E               	decf	dtoa@i^0,f,c
  7955  002C3A  A0D8               	btfss	status,0,c
  7956  002C3C  063F               	decf	(dtoa@i+1)^0,f,c
  7957  002C3E                     
  7958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7959  002C3E  5034               	movf	dtoa@s^0,w,c
  7960  002C40  1035               	iorwf	(dtoa@s+1)^0,w,c
  7961  002C42  A4D8               	btfss	status,2,c
  7962  002C44  EF26  F016         	goto	u5241
  7963  002C48  EF28  F016         	goto	u5240
  7964  002C4C                     u5241:
  7965  002C4C  EF2E  F016         	goto	l4348
  7966  002C50                     u5240:
  7967  002C50  0E00               	movlw	0
  7968  002C52  6E2F               	movwf	(_dtoa$904+1)^0,c
  7969  002C54  0E2B               	movlw	43
  7970  002C56  6E2E               	movwf	_dtoa$904^0,c
  7971  002C58  EF32  F016         	goto	l4350
  7972  002C5C                     l4348:
  7973  002C5C  0E00               	movlw	0
  7974  002C5E  6E2F               	movwf	(_dtoa$904+1)^0,c
  7975  002C60  0E2D               	movlw	45
  7976  002C62  6E2E               	movwf	_dtoa$904^0,c
  7977  002C64                     l4350:
  7978  002C64  0E1A               	movlw	low _dbuf
  7979  002C66  243E               	addwf	dtoa@i^0,w,c
  7980  002C68  6ED9               	movwf	fsr2l,c
  7981  002C6A  0E01               	movlw	high _dbuf
  7982  002C6C  203F               	addwfc	(dtoa@i+1)^0,w,c
  7983  002C6E  6EDA               	movwf	fsr2h,c
  7984  002C70  C02E  FFDF         	movff	_dtoa$904,indf2
  7985  002C74                     l4352:
  7986                           
  7987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7988  002C74  C01C  F011         	movff	dtoa@fp,pad@fp
  7989  002C78  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7990  002C7C  0E1A               	movlw	low _dbuf
  7991  002C7E  243E               	addwf	dtoa@i^0,w,c
  7992  002C80  6E13               	movwf	pad@buf^0,c
  7993  002C82  0E01               	movlw	high _dbuf
  7994  002C84  203F               	addwfc	(dtoa@i+1)^0,w,c
  7995  002C86  6E14               	movwf	(pad@buf+1)^0,c
  7996  002C88  C032  F015         	movff	dtoa@w,pad@p
  7997  002C8C  C033  F016         	movff	dtoa@w+1,pad@p+1
  7998  002C90  EC94  F021         	call	_pad	;wreg free
  7999  002C94  C011  F01C         	movff	?_pad,?_dtoa
  8000  002C98  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8001  002C9C  0012               	return		;funcret
  8002  002C9E                     __end_of_dtoa:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _pad *****************
  8006 ;; Defined at:
  8007 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8010 ;;		 -> sprintf@f(6), 
  8011 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8012 ;;		 -> dbuf(80), 
  8013 ;;  p               2   20[COMRAM] int 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  w               2   25[COMRAM] int 
  8016 ;;  i               2   23[COMRAM] int 
  8017 ;; Return value:  Size  Location     Type
  8018 ;;                  2   16[COMRAM] int 
  8019 ;; Registers used:
  8020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8026 ;;      Params:         6       0       0       0       0       0       0       0       0
  8027 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8028 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8029 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8030 ;;Total ram usage:       11 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    3
  8033 ;; This function calls:
  8034 ;;		_fputc
  8035 ;;		_fputs
  8036 ;;		_strlen
  8037 ;; This function is called by:
  8038 ;;		_dtoa
  8039 ;;		_efgtoa
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text22
  8044  004328                     __ptext22:
  8045                           	callstack 0
  8046  004328                     _pad:
  8047                           	callstack 23
  8048  004328                     
  8049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8050  004328  0100               	movlb	0	; () banked
  8051  00432A  A1F1               	btfss	_flags& (0+255),0,b
  8052  00432C  EF9A  F021         	goto	u4771
  8053  004330  EF9C  F021         	goto	u4770
  8054  004334                     u4771:
  8055  004334  EFA6  F021         	goto	l4176
  8056  004338                     u4770:
  8057  004338                     
  8058                           ; BSR set to: 0
  8059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8060  004338  C013  F00A         	movff	pad@buf,fputs@s
  8061  00433C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8062  004340  C011  F00C         	movff	pad@fp,fputs@fp
  8063  004344  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8064  004348  ECDB  F024         	call	_fputs	;wreg free
  8065  00434C                     l4176:
  8066                           
  8067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8068  00434C  BE16               	btfsc	(pad@p+1)^0,7,c
  8069  00434E  EFAB  F021         	goto	u4781
  8070  004352  EFAD  F021         	goto	u4780
  8071  004356                     u4781:
  8072  004356  EFB3  F021         	goto	l4180
  8073  00435A                     u4780:
  8074  00435A  C015  F01A         	movff	pad@p,pad@w
  8075  00435E  C016  F01B         	movff	pad@p+1,pad@w+1
  8076  004362  EFB7  F021         	goto	l955
  8077  004366                     l4180:
  8078  004366  0E00               	movlw	0
  8079  004368  6E1B               	movwf	(pad@w+1)^0,c
  8080  00436A  0E00               	movlw	0
  8081  00436C  6E1A               	movwf	pad@w^0,c
  8082  00436E                     l955:
  8083                           
  8084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8085  00436E  0E00               	movlw	0
  8086  004370  6E19               	movwf	(pad@i+1)^0,c
  8087  004372  0E00               	movlw	0
  8088  004374  6E18               	movwf	pad@i^0,c
  8089                           
  8090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8091  004376  EFC9  F021         	goto	l4186
  8092  00437A                     l4182:
  8093                           
  8094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8095  00437A  0E00               	movlw	0
  8096  00437C  6E02               	movwf	(fputc@c+1)^0,c
  8097  00437E  0E20               	movlw	32
  8098  004380  6E01               	movwf	fputc@c^0,c
  8099  004382  C011  F003         	movff	pad@fp,fputc@fp
  8100  004386  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8101  00438A  EC2F  F021         	call	_fputc	;wreg free
  8102  00438E                     
  8103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8104  00438E  4A18               	infsnz	pad@i^0,f,c
  8105  004390  2A19               	incf	(pad@i+1)^0,f,c
  8106  004392                     l4186:
  8107                           
  8108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8109  004392  501A               	movf	pad@w^0,w,c
  8110  004394  5C18               	subwf	pad@i^0,w,c
  8111  004396  5019               	movf	(pad@i+1)^0,w,c
  8112  004398  0A80               	xorlw	128
  8113  00439A  6E17               	movwf	??_pad^0,c
  8114  00439C  501B               	movf	(pad@w+1)^0,w,c
  8115  00439E  0A80               	xorlw	128
  8116  0043A0  5817               	subwfb	??_pad^0,w,c
  8117  0043A2  A0D8               	btfss	status,0,c
  8118  0043A4  EFD6  F021         	goto	u4791
  8119  0043A8  EFD8  F021         	goto	u4790
  8120  0043AC                     u4791:
  8121  0043AC  EFBD  F021         	goto	l4182
  8122  0043B0                     u4790:
  8123  0043B0                     
  8124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8125  0043B0  0100               	movlb	0	; () banked
  8126  0043B2  B1F1               	btfsc	_flags& (0+255),0,b
  8127  0043B4  EFDE  F021         	goto	u4801
  8128  0043B8  EFE0  F021         	goto	u4800
  8129  0043BC                     u4801:
  8130  0043BC  EFEA  F021         	goto	l4190
  8131  0043C0                     u4800:
  8132  0043C0                     
  8133                           ; BSR set to: 0
  8134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8135  0043C0  C013  F00A         	movff	pad@buf,fputs@s
  8136  0043C4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8137  0043C8  C011  F00C         	movff	pad@fp,fputs@fp
  8138  0043CC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8139  0043D0  ECDB  F024         	call	_fputs	;wreg free
  8140  0043D4                     l4190:
  8141                           
  8142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  8143  0043D4  C013  F001         	movff	pad@buf,strlen@s
  8144  0043D8  C014  F002         	movff	pad@buf+1,strlen@s+1
  8145  0043DC  EC91  F025         	call	_strlen	;wreg free
  8146  0043E0  501A               	movf	pad@w^0,w,c
  8147  0043E2  2401               	addwf	?_strlen^0,w,c
  8148  0043E4  6E11               	movwf	?_pad^0,c
  8149  0043E6  501B               	movf	(pad@w+1)^0,w,c
  8150  0043E8  2002               	addwfc	(?_strlen+1)^0,w,c
  8151  0043EA  6E12               	movwf	(?_pad+1)^0,c
  8152  0043EC  0012               	return		;funcret
  8153  0043EE                     __end_of_pad:
  8154                           	callstack 0
  8155                           
  8156 ;; *************** function _strlen *****************
  8157 ;; Defined at:
  8158 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8161 ;;		 -> dbuf(80), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8164 ;;		 -> dbuf(80), 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  2    0[COMRAM] unsigned int 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8174 ;;      Params:         2       0       0       0       0       0       0       0       0
  8175 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8177 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8178 ;;Total ram usage:        4 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_pad
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text23
  8188  004B22                     __ptext23:
  8189                           	callstack 0
  8190  004B22                     _strlen:
  8191                           	callstack 25
  8192  004B22  C001  F003         	movff	strlen@s,strlen@a
  8193  004B26  C002  F004         	movff	strlen@s+1,strlen@a+1
  8194  004B2A  EF99  F025         	goto	l3632
  8195  004B2E                     l3630:
  8196  004B2E  4A01               	infsnz	strlen@s^0,f,c
  8197  004B30  2A02               	incf	(strlen@s+1)^0,f,c
  8198  004B32                     l3632:
  8199  004B32  C001  FFD9         	movff	strlen@s,fsr2l
  8200  004B36  C002  FFDA         	movff	strlen@s+1,fsr2h
  8201  004B3A  50DF               	movf	indf2,w,c
  8202  004B3C  A4D8               	btfss	status,2,c
  8203  004B3E  EFA3  F025         	goto	u3911
  8204  004B42  EFA5  F025         	goto	u3910
  8205  004B46                     u3911:
  8206  004B46  EF97  F025         	goto	l3630
  8207  004B4A                     u3910:
  8208  004B4A  5003               	movf	strlen@a^0,w,c
  8209  004B4C  5C01               	subwf	strlen@s^0,w,c
  8210  004B4E  6E01               	movwf	?_strlen^0,c
  8211  004B50  5004               	movf	(strlen@a+1)^0,w,c
  8212  004B52  5802               	subwfb	(strlen@s+1)^0,w,c
  8213  004B54  6E02               	movwf	(?_strlen+1)^0,c
  8214  004B56  0012               	return		;funcret
  8215  004B58                     __end_of_strlen:
  8216                           	callstack 0
  8217                           
  8218 ;; *************** function _fputs *****************
  8219 ;; Defined at:
  8220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8223 ;;		 -> dbuf(80), 
  8224 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8225 ;;		 -> sprintf@f(6), 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;  i               2   14[COMRAM] int 
  8228 ;;  c               1   13[COMRAM] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  2    9[COMRAM] int 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8238 ;;      Params:         4       0       0       0       0       0       0       0       0
  8239 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8241 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8242 ;;Total ram usage:        7 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    2
  8245 ;; This function calls:
  8246 ;;		_fputc
  8247 ;; This function is called by:
  8248 ;;		_pad
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text24
  8253  0049B6                     __ptext24:
  8254                           	callstack 0
  8255  0049B6                     _fputs:
  8256                           	callstack 23
  8257  0049B6  0E00               	movlw	0
  8258  0049B8  6E10               	movwf	(fputs@i+1)^0,c
  8259  0049BA  0E00               	movlw	0
  8260  0049BC  6E0F               	movwf	fputs@i^0,c
  8261  0049BE  EFEC  F024         	goto	l3626
  8262  0049C2                     l3622:
  8263  0049C2  C00E  F001         	movff	fputs@c,fputc@c
  8264  0049C6  6A02               	clrf	(fputc@c+1)^0,c
  8265  0049C8  C00C  F003         	movff	fputs@fp,fputc@fp
  8266  0049CC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8267  0049D0  EC2F  F021         	call	_fputc	;wreg free
  8268  0049D4  4A0F               	infsnz	fputs@i^0,f,c
  8269  0049D6  2A10               	incf	(fputs@i+1)^0,f,c
  8270  0049D8                     l3626:
  8271  0049D8  500F               	movf	fputs@i^0,w,c
  8272  0049DA  240A               	addwf	fputs@s^0,w,c
  8273  0049DC  6ED9               	movwf	fsr2l,c
  8274  0049DE  5010               	movf	(fputs@i+1)^0,w,c
  8275  0049E0  200B               	addwfc	(fputs@s+1)^0,w,c
  8276  0049E2  6EDA               	movwf	fsr2h,c
  8277  0049E4  50DF               	movf	indf2,w,c
  8278  0049E6  6E0E               	movwf	fputs@c^0,c
  8279  0049E8  500E               	movf	fputs@c^0,w,c
  8280  0049EA  A4D8               	btfss	status,2,c
  8281  0049EC  EFFA  F024         	goto	u3901
  8282  0049F0  EFFC  F024         	goto	u3900
  8283  0049F4                     u3901:
  8284  0049F4  EFE1  F024         	goto	l3622
  8285  0049F8                     u3900:
  8286  0049F8  0012               	return		;funcret
  8287  0049FA                     __end_of_fputs:
  8288                           	callstack 0
  8289                           
  8290 ;; *************** function _fputc *****************
  8291 ;; Defined at:
  8292 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  c               2    0[COMRAM] int 
  8295 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8296 ;;		 -> sprintf@f(6), 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  2    0[COMRAM] int 
  8301 ;; Registers used:
  8302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8308 ;;      Params:         4       0       0       0       0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8310 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8311 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8312 ;;Total ram usage:        9 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    1
  8315 ;; This function calls:
  8316 ;;		_putch
  8317 ;; This function is called by:
  8318 ;;		_pad
  8319 ;;		_vfpfcnvrt
  8320 ;;		_fputs
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text25
  8325  00425E                     __ptext25:
  8326                           	callstack 0
  8327  00425E                     _fputc:
  8328                           	callstack 26
  8329  00425E  5003               	movf	fputc@fp^0,w,c
  8330  004260  1004               	iorwf	(fputc@fp+1)^0,w,c
  8331  004262  B4D8               	btfsc	status,2,c
  8332  004264  EF36  F021         	goto	u3471
  8333  004268  EF38  F021         	goto	u3470
  8334  00426C                     u3471:
  8335  00426C  EF41  F021         	goto	l3408
  8336  004270                     u3470:
  8337  004270  5003               	movf	fputc@fp^0,w,c
  8338  004272  1004               	iorwf	(fputc@fp+1)^0,w,c
  8339  004274  A4D8               	btfss	status,2,c
  8340  004276  EF3F  F021         	goto	u3481
  8341  00427A  EF41  F021         	goto	u3480
  8342  00427E                     u3481:
  8343  00427E  EF46  F021         	goto	l3410
  8344  004282                     u3480:
  8345  004282                     l3408:
  8346  004282  5001               	movf	fputc@c^0,w,c
  8347  004284  ECDE  F025         	call	_putch
  8348  004288  EF93  F021         	goto	l1217
  8349  00428C                     l3410:
  8350  00428C  EE20 F004          	lfsr	2,4
  8351  004290  5003               	movf	fputc@fp^0,w,c
  8352  004292  26D9               	addwf	fsr2l,f,c
  8353  004294  5004               	movf	(fputc@fp+1)^0,w,c
  8354  004296  22DA               	addwfc	fsr2h,f,c
  8355  004298  50DE               	movf	postinc2,w,c
  8356  00429A  10DE               	iorwf	postinc2,w,c
  8357  00429C  B4D8               	btfsc	status,2,c
  8358  00429E  EF53  F021         	goto	u3491
  8359  0042A2  EF55  F021         	goto	u3490
  8360  0042A6                     u3491:
  8361  0042A6  EF70  F021         	goto	l3414
  8362  0042AA                     u3490:
  8363  0042AA  EE20 F004          	lfsr	2,4
  8364  0042AE  5003               	movf	fputc@fp^0,w,c
  8365  0042B0  26D9               	addwf	fsr2l,f,c
  8366  0042B2  5004               	movf	(fputc@fp+1)^0,w,c
  8367  0042B4  22DA               	addwfc	fsr2h,f,c
  8368  0042B6  EE10 F002          	lfsr	1,2
  8369  0042BA  5003               	movf	fputc@fp^0,w,c
  8370  0042BC  26E1               	addwf	fsr1l,f,c
  8371  0042BE  5004               	movf	(fputc@fp+1)^0,w,c
  8372  0042C0  22E2               	addwfc	fsr1h,f,c
  8373  0042C2  50DE               	movf	postinc2,w,c
  8374  0042C4  5CE6               	subwf	postinc1,w,c
  8375  0042C6  50E6               	movf	postinc1,w,c
  8376  0042C8  0A80               	xorlw	128
  8377  0042CA  6E09               	movwf	(??_fputc+4)^0,c
  8378  0042CC  50DE               	movf	postinc2,w,c
  8379  0042CE  0A80               	xorlw	128
  8380  0042D0  5809               	subwfb	(??_fputc+4)^0,w,c
  8381  0042D2  B0D8               	btfsc	status,0,c
  8382  0042D4  EF6E  F021         	goto	u3501
  8383  0042D8  EF70  F021         	goto	u3500
  8384  0042DC                     u3501:
  8385  0042DC  EF93  F021         	goto	l1217
  8386  0042E0                     u3500:
  8387  0042E0                     l3414:
  8388  0042E0  EE20 F002          	lfsr	2,2
  8389  0042E4  5003               	movf	fputc@fp^0,w,c
  8390  0042E6  26D9               	addwf	fsr2l,f,c
  8391  0042E8  5004               	movf	(fputc@fp+1)^0,w,c
  8392  0042EA  22DA               	addwfc	fsr2h,f,c
  8393  0042EC  CFDE F005          	movff	postinc2,??_fputc
  8394  0042F0  CFDD F006          	movff	postdec2,??_fputc+1
  8395  0042F4  C003  FFD9         	movff	fputc@fp,fsr2l
  8396  0042F8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8397  0042FC  CFDE F007          	movff	postinc2,??_fputc+2
  8398  004300  CFDD F008          	movff	postdec2,??_fputc+3
  8399  004304  5005               	movf	??_fputc^0,w,c
  8400  004306  2407               	addwf	(??_fputc+2)^0,w,c
  8401  004308  6ED9               	movwf	fsr2l,c
  8402  00430A  5006               	movf	(??_fputc+1)^0,w,c
  8403  00430C  2008               	addwfc	(??_fputc+3)^0,w,c
  8404  00430E  6EDA               	movwf	fsr2h,c
  8405  004310  C001  FFDF         	movff	fputc@c,indf2
  8406  004314  EE20 F002          	lfsr	2,2
  8407  004318  5003               	movf	fputc@fp^0,w,c
  8408  00431A  26D9               	addwf	fsr2l,f,c
  8409  00431C  5004               	movf	(fputc@fp+1)^0,w,c
  8410  00431E  22DA               	addwfc	fsr2h,f,c
  8411  004320  2ADE               	incf	postinc2,f,c
  8412  004322  0E00               	movlw	0
  8413  004324  22DD               	addwfc	postdec2,f,c
  8414  004326                     l1217:
  8415  004326  0012               	return		;funcret
  8416  004328                     __end_of_fputc:
  8417                           	callstack 0
  8418                           
  8419 ;; *************** function _putch *****************
  8420 ;; Defined at:
  8421 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  c               1    wreg     unsigned char 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  c               1    0[COMRAM] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8435 ;;      Params:         0       0       0       0       0       0       0       0       0
  8436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8438 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8439 ;;Total ram usage:        0 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_fputc
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text26
  8449  004BBC                     __ptext26:
  8450                           	callstack 0
  8451  004BBC                     _putch:
  8452                           	callstack 26
  8453  004BBC  0012               	return		;funcret
  8454  004BBE                     __end_of_putch:
  8455                           	callstack 0
  8456                           
  8457 ;; *************** function _abs *****************
  8458 ;; Defined at:
  8459 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  a               2   18[COMRAM] int 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  2   18[COMRAM] int 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8473 ;;      Params:         2       0       0       0       0       0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8475 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8476 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8477 ;;Total ram usage:        4 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_dtoa
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text27
  8487  0049FA                     __ptext27:
  8488                           	callstack 0
  8489  0049FA                     _abs:
  8490                           	callstack 26
  8491  0049FA  BE14               	btfsc	(abs@a+1)^0,7,c
  8492  0049FC  EF0A  F025         	goto	u4810
  8493  004A00  5014               	movf	(abs@a+1)^0,w,c
  8494  004A02  E106               	bnz	u4811
  8495  004A04  0413               	decf	abs@a^0,w,c
  8496  004A06  B0D8               	btfsc	status,0,c
  8497  004A08  EF08  F025         	goto	u4811
  8498  004A0C  EF0A  F025         	goto	u4810
  8499  004A10                     u4811:
  8500  004A10  EF18  F025         	goto	l1138
  8501  004A14                     u4810:
  8502  004A14  C013  F015         	movff	abs@a,??_abs
  8503  004A18  C014  F016         	movff	abs@a+1,??_abs+1
  8504  004A1C  1E15               	comf	??_abs^0,f,c
  8505  004A1E  1E16               	comf	(??_abs+1)^0,f,c
  8506  004A20  4A15               	infsnz	??_abs^0,f,c
  8507  004A22  2A16               	incf	(??_abs+1)^0,f,c
  8508  004A24  C015  F013         	movff	??_abs,?_abs
  8509  004A28  C016  F014         	movff	??_abs+1,?_abs+1
  8510  004A2C  EF1C  F025         	goto	l1141
  8511  004A30                     l1138:
  8512  004A30  C013  F013         	movff	abs@a,?_abs
  8513  004A34  C014  F014         	movff	abs@a+1,?_abs+1
  8514  004A38                     l1141:
  8515  004A38  0012               	return		;funcret
  8516  004A3A                     __end_of_abs:
  8517                           	callstack 0
  8518                           
  8519 ;; *************** function ___aomod *****************
  8520 ;; Defined at:
  8521 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  dividend        8    0[COMRAM] long long 
  8524 ;;  divisor         8    8[COMRAM] long long 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;  sign            1   17[COMRAM] unsigned char 
  8527 ;;  counter         1   16[COMRAM] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  8    0[COMRAM] long long 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8537 ;;      Params:        16       0       0       0       0       0       0       0       0
  8538 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8540 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8541 ;;Total ram usage:       18 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_dtoa
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text28
  8551  003D1C                     __ptext28:
  8552                           	callstack 0
  8553  003D1C                     ___aomod:
  8554                           	callstack 26
  8555  003D1C  0E00               	movlw	0
  8556  003D1E  6E12               	movwf	___aomod@sign^0,c
  8557  003D20  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8558  003D22  EF97  F01E         	goto	u4010
  8559  003D26  EF95  F01E         	goto	u4011
  8560  003D2A                     u4011:
  8561  003D2A  EFA9  F01E         	goto	l3700
  8562  003D2E                     u4010:
  8563  003D2E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8564  003D30  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8565  003D32  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8566  003D34  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8567  003D36  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8568  003D38  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8569  003D3A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8570  003D3C  6C01               	negf	___aomod@dividend^0,c
  8571  003D3E  0E00               	movlw	0
  8572  003D40  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8573  003D42  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8574  003D44  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8575  003D46  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8576  003D48  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8577  003D4A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8578  003D4C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8579  003D4E  0E01               	movlw	1
  8580  003D50  6E12               	movwf	___aomod@sign^0,c
  8581  003D52                     l3700:
  8582  003D52  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8583  003D54  EFB0  F01E         	goto	u4020
  8584  003D58  EFAE  F01E         	goto	u4021
  8585  003D5C                     u4021:
  8586  003D5C  EFC0  F01E         	goto	l3704
  8587  003D60                     u4020:
  8588  003D60  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8589  003D62  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8590  003D64  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8591  003D66  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8592  003D68  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8593  003D6A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8594  003D6C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8595  003D6E  6C09               	negf	___aomod@divisor^0,c
  8596  003D70  0E00               	movlw	0
  8597  003D72  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8598  003D74  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8599  003D76  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8600  003D78  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8601  003D7A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8602  003D7C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8603  003D7E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8604  003D80                     l3704:
  8605  003D80  5009               	movf	___aomod@divisor^0,w,c
  8606  003D82  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8607  003D84  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8608  003D86  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8609  003D88  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8610  003D8A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8611  003D8C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8612  003D8E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8613  003D90  B4D8               	btfsc	status,2,c
  8614  003D92  EFCD  F01E         	goto	u4031
  8615  003D96  EFCF  F01E         	goto	u4030
  8616  003D9A                     u4031:
  8617  003D9A  EF17  F01F         	goto	l3720
  8618  003D9E                     u4030:
  8619  003D9E  0E01               	movlw	1
  8620  003DA0  6E11               	movwf	___aomod@counter^0,c
  8621  003DA2  EFDD  F01E         	goto	l3710
  8622  003DA6                     l3708:
  8623  003DA6  90D8               	bcf	status,0,c
  8624  003DA8  3609               	rlcf	___aomod@divisor^0,f,c
  8625  003DAA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8626  003DAC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8627  003DAE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8628  003DB0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8629  003DB2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8630  003DB4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8631  003DB6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8632  003DB8  2A11               	incf	___aomod@counter^0,f,c
  8633  003DBA                     l3710:
  8634  003DBA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8635  003DBC  EFE2  F01E         	goto	u4041
  8636  003DC0  EFE4  F01E         	goto	u4040
  8637  003DC4                     u4041:
  8638  003DC4  EFD3  F01E         	goto	l3708
  8639  003DC8                     u4040:
  8640  003DC8                     l3712:
  8641  003DC8  5009               	movf	___aomod@divisor^0,w,c
  8642  003DCA  5C01               	subwf	___aomod@dividend^0,w,c
  8643  003DCC  500A               	movf	(___aomod@divisor+1)^0,w,c
  8644  003DCE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8645  003DD0  500B               	movf	(___aomod@divisor+2)^0,w,c
  8646  003DD2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8647  003DD4  500C               	movf	(___aomod@divisor+3)^0,w,c
  8648  003DD6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8649  003DD8  500D               	movf	(___aomod@divisor+4)^0,w,c
  8650  003DDA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8651  003DDC  500E               	movf	(___aomod@divisor+5)^0,w,c
  8652  003DDE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8653  003DE0  500F               	movf	(___aomod@divisor+6)^0,w,c
  8654  003DE2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8655  003DE4  5010               	movf	(___aomod@divisor+7)^0,w,c
  8656  003DE6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8657  003DE8  A0D8               	btfss	status,0,c
  8658  003DEA  EFF9  F01E         	goto	u4051
  8659  003DEE  EFFB  F01E         	goto	u4050
  8660  003DF2                     u4051:
  8661  003DF2  EF0B  F01F         	goto	l3716
  8662  003DF6                     u4050:
  8663  003DF6  5009               	movf	___aomod@divisor^0,w,c
  8664  003DF8  5E01               	subwf	___aomod@dividend^0,f,c
  8665  003DFA  500A               	movf	(___aomod@divisor+1)^0,w,c
  8666  003DFC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8667  003DFE  500B               	movf	(___aomod@divisor+2)^0,w,c
  8668  003E00  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8669  003E02  500C               	movf	(___aomod@divisor+3)^0,w,c
  8670  003E04  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8671  003E06  500D               	movf	(___aomod@divisor+4)^0,w,c
  8672  003E08  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8673  003E0A  500E               	movf	(___aomod@divisor+5)^0,w,c
  8674  003E0C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8675  003E0E  500F               	movf	(___aomod@divisor+6)^0,w,c
  8676  003E10  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8677  003E12  5010               	movf	(___aomod@divisor+7)^0,w,c
  8678  003E14  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8679  003E16                     l3716:
  8680  003E16  90D8               	bcf	status,0,c
  8681  003E18  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8682  003E1A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8683  003E1C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8684  003E1E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8685  003E20  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8686  003E22  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8687  003E24  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8688  003E26  3209               	rrcf	___aomod@divisor^0,f,c
  8689  003E28  2E11               	decfsz	___aomod@counter^0,f,c
  8690  003E2A  EFE4  F01E         	goto	l3712
  8691  003E2E                     l3720:
  8692  003E2E  5012               	movf	___aomod@sign^0,w,c
  8693  003E30  B4D8               	btfsc	status,2,c
  8694  003E32  EF1D  F01F         	goto	u4061
  8695  003E36  EF1F  F01F         	goto	u4060
  8696  003E3A                     u4061:
  8697  003E3A  EF2F  F01F         	goto	l3724
  8698  003E3E                     u4060:
  8699  003E3E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8700  003E40  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8701  003E42  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8702  003E44  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8703  003E46  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8704  003E48  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8705  003E4A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8706  003E4C  6C01               	negf	___aomod@dividend^0,c
  8707  003E4E  0E00               	movlw	0
  8708  003E50  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8709  003E52  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8710  003E54  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8711  003E56  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8712  003E58  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8713  003E5A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8714  003E5C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8715  003E5E                     l3724:
  8716  003E5E  C001  F001         	movff	___aomod@dividend,?___aomod
  8717  003E62  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8718  003E66  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8719  003E6A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8720  003E6E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8721  003E72  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8722  003E76  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8723  003E7A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8724  003E7E  0012               	return		;funcret
  8725  003E80                     __end_of___aomod:
  8726                           	callstack 0
  8727                           
  8728 ;; *************** function ___aodiv *****************
  8729 ;; Defined at:
  8730 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  dividend        8    0[COMRAM] long long 
  8733 ;;  divisor         8    8[COMRAM] long long 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;  quotient        8   18[COMRAM] long long 
  8736 ;;  sign            1   17[COMRAM] unsigned char 
  8737 ;;  counter         1   16[COMRAM] unsigned char 
  8738 ;; Return value:  Size  Location     Type
  8739 ;;                  8    0[COMRAM] long long 
  8740 ;; Registers used:
  8741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8742 ;; Tracked objects:
  8743 ;;		On entry : 0/0
  8744 ;;		On exit  : 0/0
  8745 ;;		Unchanged: 0/0
  8746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8747 ;;      Params:        16       0       0       0       0       0       0       0       0
  8748 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8750 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8751 ;;Total ram usage:       26 bytes
  8752 ;; Hardware stack levels used:    1
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_dtoa
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text29
  8761  003B94                     __ptext29:
  8762                           	callstack 0
  8763  003B94                     ___aodiv:
  8764                           	callstack 26
  8765  003B94  0E00               	movlw	0
  8766  003B96  6E12               	movwf	___aodiv@sign^0,c
  8767  003B98  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8768  003B9A  EFD3  F01D         	goto	u3940
  8769  003B9E  EFD1  F01D         	goto	u3941
  8770  003BA2                     u3941:
  8771  003BA2  EFE5  F01D         	goto	l3656
  8772  003BA6                     u3940:
  8773  003BA6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8774  003BA8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8775  003BAA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8776  003BAC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8777  003BAE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8778  003BB0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8779  003BB2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8780  003BB4  6C09               	negf	___aodiv@divisor^0,c
  8781  003BB6  0E00               	movlw	0
  8782  003BB8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8783  003BBA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8784  003BBC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8785  003BBE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8786  003BC0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8787  003BC2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8788  003BC4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8789  003BC6  0E01               	movlw	1
  8790  003BC8  6E12               	movwf	___aodiv@sign^0,c
  8791  003BCA                     l3656:
  8792  003BCA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8793  003BCC  EFEC  F01D         	goto	u3950
  8794  003BD0  EFEA  F01D         	goto	u3951
  8795  003BD4                     u3951:
  8796  003BD4  EFFE  F01D         	goto	l3662
  8797  003BD8                     u3950:
  8798  003BD8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8799  003BDA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8800  003BDC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8801  003BDE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8802  003BE0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8803  003BE2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8804  003BE4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8805  003BE6  6C01               	negf	___aodiv@dividend^0,c
  8806  003BE8  0E00               	movlw	0
  8807  003BEA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8808  003BEC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8809  003BEE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8810  003BF0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8811  003BF2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8812  003BF4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8813  003BF6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8814  003BF8  0E01               	movlw	1
  8815  003BFA  1A12               	xorwf	___aodiv@sign^0,f,c
  8816  003BFC                     l3662:
  8817  003BFC  EE20  F013         	lfsr	2,___aodiv@quotient
  8818  003C00  0E07               	movlw	7
  8819  003C02                     u3961:
  8820  003C02  6ADE               	clrf	postinc2,c
  8821  003C04  06E8               	decf	wreg,f,c
  8822  003C06  E2FD               	bc	u3961
  8823  003C08  5009               	movf	___aodiv@divisor^0,w,c
  8824  003C0A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8825  003C0C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8826  003C0E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8827  003C10  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8828  003C12  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8829  003C14  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8830  003C16  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8831  003C18  B4D8               	btfsc	status,2,c
  8832  003C1A  EF11  F01E         	goto	u3971
  8833  003C1E  EF13  F01E         	goto	u3970
  8834  003C22                     u3971:
  8835  003C22  EF65  F01E         	goto	l3684
  8836  003C26                     u3970:
  8837  003C26  0E01               	movlw	1
  8838  003C28  6E11               	movwf	___aodiv@counter^0,c
  8839  003C2A  EF21  F01E         	goto	l3670
  8840  003C2E                     l3668:
  8841  003C2E  90D8               	bcf	status,0,c
  8842  003C30  3609               	rlcf	___aodiv@divisor^0,f,c
  8843  003C32  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8844  003C34  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8845  003C36  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8846  003C38  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8847  003C3A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8848  003C3C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8849  003C3E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8850  003C40  2A11               	incf	___aodiv@counter^0,f,c
  8851  003C42                     l3670:
  8852  003C42  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8853  003C44  EF26  F01E         	goto	u3981
  8854  003C48  EF28  F01E         	goto	u3980
  8855  003C4C                     u3981:
  8856  003C4C  EF17  F01E         	goto	l3668
  8857  003C50                     u3980:
  8858  003C50                     l3672:
  8859  003C50  90D8               	bcf	status,0,c
  8860  003C52  3613               	rlcf	___aodiv@quotient^0,f,c
  8861  003C54  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8862  003C56  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8863  003C58  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8864  003C5A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8865  003C5C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8866  003C5E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8867  003C60  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8868  003C62  5009               	movf	___aodiv@divisor^0,w,c
  8869  003C64  5C01               	subwf	___aodiv@dividend^0,w,c
  8870  003C66  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8871  003C68  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8872  003C6A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8873  003C6C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8874  003C6E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8875  003C70  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8876  003C72  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8877  003C74  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8878  003C76  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8879  003C78  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8880  003C7A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8881  003C7C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8882  003C7E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8883  003C80  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8884  003C82  A0D8               	btfss	status,0,c
  8885  003C84  EF46  F01E         	goto	u3991
  8886  003C88  EF48  F01E         	goto	u3990
  8887  003C8C                     u3991:
  8888  003C8C  EF59  F01E         	goto	l3680
  8889  003C90                     u3990:
  8890  003C90  5009               	movf	___aodiv@divisor^0,w,c
  8891  003C92  5E01               	subwf	___aodiv@dividend^0,f,c
  8892  003C94  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8893  003C96  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8894  003C98  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8895  003C9A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8896  003C9C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8897  003C9E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8898  003CA0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8899  003CA2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8900  003CA4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8901  003CA6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8902  003CA8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8903  003CAA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8904  003CAC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8905  003CAE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8906  003CB0  8013               	bsf	___aodiv@quotient^0,0,c
  8907  003CB2                     l3680:
  8908  003CB2  90D8               	bcf	status,0,c
  8909  003CB4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8910  003CB6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8911  003CB8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8912  003CBA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8913  003CBC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8914  003CBE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8915  003CC0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8916  003CC2  3209               	rrcf	___aodiv@divisor^0,f,c
  8917  003CC4  2E11               	decfsz	___aodiv@counter^0,f,c
  8918  003CC6  EF28  F01E         	goto	l3672
  8919  003CCA                     l3684:
  8920  003CCA  5012               	movf	___aodiv@sign^0,w,c
  8921  003CCC  B4D8               	btfsc	status,2,c
  8922  003CCE  EF6B  F01E         	goto	u4001
  8923  003CD2  EF6D  F01E         	goto	u4000
  8924  003CD6                     u4001:
  8925  003CD6  EF7D  F01E         	goto	l3688
  8926  003CDA                     u4000:
  8927  003CDA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8928  003CDC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8929  003CDE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8930  003CE0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8931  003CE2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8932  003CE4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8933  003CE6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8934  003CE8  6C13               	negf	___aodiv@quotient^0,c
  8935  003CEA  0E00               	movlw	0
  8936  003CEC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8937  003CEE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8938  003CF0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8939  003CF2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8940  003CF4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8941  003CF6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8942  003CF8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8943  003CFA                     l3688:
  8944  003CFA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8945  003CFE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8946  003D02  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8947  003D06  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8948  003D0A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8949  003D0E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8950  003D12  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8951  003D16  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8952  003D1A  0012               	return		;funcret
  8953  003D1C                     __end_of___aodiv:
  8954                           	callstack 0
  8955                           
  8956 ;; *************** function _atoi *****************
  8957 ;; Defined at:
  8958 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8961 ;;		 -> STR_11(6), STR_10(3), STR_8(5), STR_6(12), 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  n               2   20[COMRAM] int 
  8964 ;;  neg             2   13[COMRAM] int 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  2    7[COMRAM] int 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8974 ;;      Params:         2       0       0       0       0       0       0       0       0
  8975 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8976 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8977 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8978 ;;Total ram usage:       15 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    1
  8981 ;; This function calls:
  8982 ;;		___wmul
  8983 ;;		_isdigit
  8984 ;;		_isspace
  8985 ;; This function is called by:
  8986 ;;		_vfpfcnvrt
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text30
  8991  003A04                     __ptext30:
  8992                           	callstack 0
  8993  003A04                     _atoi:
  8994                           	callstack 26
  8995  003A04  0E00               	movlw	0
  8996  003A06  6E16               	movwf	(atoi@n+1)^0,c
  8997  003A08  0E00               	movlw	0
  8998  003A0A  6E15               	movwf	atoi@n^0,c
  8999  003A0C  0E00               	movlw	0
  9000  003A0E  6E0F               	movwf	(atoi@neg+1)^0,c
  9001  003A10  0E00               	movlw	0
  9002  003A12  6E0E               	movwf	atoi@neg^0,c
  9003  003A14  EF0E  F01D         	goto	l4658
  9004  003A18                     l4656:
  9005  003A18  4A08               	infsnz	atoi@s^0,f,c
  9006  003A1A  2A09               	incf	(atoi@s+1)^0,f,c
  9007  003A1C                     l4658:
  9008  003A1C  0E01               	movlw	1
  9009  003A1E  6E14               	movwf	_atoi$995^0,c
  9010  003A20  C008  FFF6         	movff	atoi@s,tblptrl
  9011  003A24  C009  FFF7         	movff	atoi@s+1,tblptrh
  9012  003A28                     	if	0	;tblptru may be non-zero
  9013  003A28                     	endif
  9014  003A28                     	if	0	;tblptru may be non-zero
  9015  003A28                     	endif
  9016  003A28  0008               	tblrd		*
  9017  003A2A  50F5               	movf	tablat,w,c
  9018  003A2C  0A20               	xorlw	32
  9019  003A2E  B4D8               	btfsc	status,2,c
  9020  003A30  EF1C  F01D         	goto	u5771
  9021  003A34  EF1E  F01D         	goto	u5770
  9022  003A38                     u5771:
  9023  003A38  EF3B  F01D         	goto	l4666
  9024  003A3C                     u5770:
  9025  003A3C  0EF7               	movlw	247
  9026  003A3E  6E0A               	movwf	??_atoi^0,c
  9027  003A40  0EFF               	movlw	255
  9028  003A42  6E0B               	movwf	(??_atoi+1)^0,c
  9029  003A44  C008  FFF6         	movff	atoi@s,tblptrl
  9030  003A48  C009  FFF7         	movff	atoi@s+1,tblptrh
  9031  003A4C                     	if	0	;tblptru may be non-zero
  9032  003A4C                     	endif
  9033  003A4C                     	if	0	;tblptru may be non-zero
  9034  003A4C                     	endif
  9035  003A4C  0008               	tblrd		*
  9036  003A4E  50F5               	movf	tablat,w,c
  9037  003A50  6E0C               	movwf	(??_atoi+2)^0,c
  9038  003A52  6A0D               	clrf	(??_atoi+3)^0,c
  9039  003A54  500A               	movf	??_atoi^0,w,c
  9040  003A56  260C               	addwf	(??_atoi+2)^0,f,c
  9041  003A58  500B               	movf	(??_atoi+1)^0,w,c
  9042  003A5A  220D               	addwfc	(??_atoi+3)^0,f,c
  9043  003A5C  500D               	movf	(??_atoi+3)^0,w,c
  9044  003A5E  E109               	bnz	u5780
  9045  003A60  0E05               	movlw	5
  9046  003A62  5C0C               	subwf	(??_atoi+2)^0,w,c
  9047  003A64  A0D8               	btfss	status,0,c
  9048  003A66  EF37  F01D         	goto	u5781
  9049  003A6A  EF39  F01D         	goto	u5780
  9050  003A6E                     u5781:
  9051  003A6E  EF3B  F01D         	goto	l4666
  9052  003A72                     u5780:
  9053  003A72  0E00               	movlw	0
  9054  003A74  6E14               	movwf	_atoi$995^0,c
  9055  003A76                     l4666:
  9056  003A76  C014  F010         	movff	_atoi$995,_atoi$994
  9057  003A7A  6A11               	clrf	(_atoi$994+1)^0,c
  9058  003A7C  5010               	movf	_atoi$994^0,w,c
  9059  003A7E  1011               	iorwf	(_atoi$994+1)^0,w,c
  9060  003A80  A4D8               	btfss	status,2,c
  9061  003A82  EF45  F01D         	goto	u5791
  9062  003A86  EF47  F01D         	goto	u5790
  9063  003A8A                     u5791:
  9064  003A8A  EF0C  F01D         	goto	l4656
  9065  003A8E                     u5790:
  9066  003A8E  EF51  F01D         	goto	l4676
  9067  003A92                     l4672:
  9068  003A92  0E00               	movlw	0
  9069  003A94  6E0F               	movwf	(atoi@neg+1)^0,c
  9070  003A96  0E01               	movlw	1
  9071  003A98  6E0E               	movwf	atoi@neg^0,c
  9072  003A9A                     l4674:
  9073  003A9A  4A08               	infsnz	atoi@s^0,f,c
  9074  003A9C  2A09               	incf	(atoi@s+1)^0,f,c
  9075  003A9E  EF86  F01D         	goto	l4682
  9076  003AA2                     l4676:
  9077  003AA2  C008  FFF6         	movff	atoi@s,tblptrl
  9078  003AA6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9079  003AAA                     	if	0	;tblptru may be non-zero
  9080  003AAA                     	endif
  9081  003AAA                     	if	0	;tblptru may be non-zero
  9082  003AAA                     	endif
  9083  003AAA  0008               	tblrd		*
  9084  003AAC  50F5               	movf	tablat,w,c
  9085  003AAE  6E0A               	movwf	??_atoi^0,c
  9086  003AB0  6A0B               	clrf	(??_atoi+1)^0,c
  9087                           
  9088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9089                           ; Switch size 1, requested type "simple"
  9090                           ; Number of cases is 1, Range of values is 0 to 0
  9091                           ; switch strategies available:
  9092                           ; Name         Instructions Cycles
  9093                           ; simple_byte            4     3 (average)
  9094                           ;	Chosen strategy is simple_byte
  9095  003AB2  500B               	movf	(??_atoi+1)^0,w,c
  9096  003AB4  0A00               	xorlw	0	; case 0
  9097  003AB6  B4D8               	btfsc	status,2,c
  9098  003AB8  EF60  F01D         	goto	l5522
  9099  003ABC  EF86  F01D         	goto	l4682
  9100  003AC0                     l5522:
  9101                           
  9102                           ; Switch size 1, requested type "simple"
  9103                           ; Number of cases is 2, Range of values is 43 to 45
  9104                           ; switch strategies available:
  9105                           ; Name         Instructions Cycles
  9106                           ; simple_byte            7     4 (average)
  9107                           ;	Chosen strategy is simple_byte
  9108  003AC0  500A               	movf	??_atoi^0,w,c
  9109  003AC2  0A2B               	xorlw	43	; case 43
  9110  003AC4  B4D8               	btfsc	status,2,c
  9111  003AC6  EF4D  F01D         	goto	l4674
  9112  003ACA  0A06               	xorlw	6	; case 45
  9113  003ACC  B4D8               	btfsc	status,2,c
  9114  003ACE  EF49  F01D         	goto	l4672
  9115  003AD2  EF86  F01D         	goto	l4682
  9116  003AD6                     l4678:
  9117  003AD6  C015  F001         	movff	atoi@n,___wmul@multiplier
  9118  003ADA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9119  003ADE  0E00               	movlw	0
  9120  003AE0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9121  003AE2  0E0A               	movlw	10
  9122  003AE4  6E03               	movwf	___wmul@multiplicand^0,c
  9123  003AE6  ECC4  F025         	call	___wmul	;wreg free
  9124  003AEA  C008  FFF6         	movff	atoi@s,tblptrl
  9125  003AEE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9126  003AF2                     	if	0	;tblptru may be non-zero
  9127  003AF2                     	endif
  9128  003AF2                     	if	0	;tblptru may be non-zero
  9129  003AF2                     	endif
  9130  003AF2  0008               	tblrd		*
  9131  003AF4  50F5               	movf	tablat,w,c
  9132  003AF6  5E01               	subwf	?___wmul^0,f,c
  9133  003AF8  0E00               	movlw	0
  9134  003AFA  5A02               	subwfb	(?___wmul+1)^0,f,c
  9135  003AFC  0E30               	movlw	48
  9136  003AFE  2401               	addwf	?___wmul^0,w,c
  9137  003B00  6E15               	movwf	atoi@n^0,c
  9138  003B02  0E00               	movlw	0
  9139  003B04  2002               	addwfc	(?___wmul+1)^0,w,c
  9140  003B06  6E16               	movwf	(atoi@n+1)^0,c
  9141  003B08  EF4D  F01D         	goto	l4674
  9142  003B0C                     l4682:
  9143  003B0C  0ED0               	movlw	208
  9144  003B0E  6E0A               	movwf	??_atoi^0,c
  9145  003B10  0EFF               	movlw	255
  9146  003B12  6E0B               	movwf	(??_atoi+1)^0,c
  9147  003B14  C008  FFF6         	movff	atoi@s,tblptrl
  9148  003B18  C009  FFF7         	movff	atoi@s+1,tblptrh
  9149  003B1C                     	if	0	;tblptru may be non-zero
  9150  003B1C                     	endif
  9151  003B1C                     	if	0	;tblptru may be non-zero
  9152  003B1C                     	endif
  9153  003B1C  0008               	tblrd		*
  9154  003B1E  50F5               	movf	tablat,w,c
  9155  003B20  6E0C               	movwf	(??_atoi+2)^0,c
  9156  003B22  6A0D               	clrf	(??_atoi+3)^0,c
  9157  003B24  500A               	movf	??_atoi^0,w,c
  9158  003B26  260C               	addwf	(??_atoi+2)^0,f,c
  9159  003B28  500B               	movf	(??_atoi+1)^0,w,c
  9160  003B2A  220D               	addwfc	(??_atoi+3)^0,f,c
  9161  003B2C  500D               	movf	(??_atoi+3)^0,w,c
  9162  003B2E  E10A               	bnz	u5800
  9163  003B30  0E0A               	movlw	10
  9164  003B32  5C0C               	subwf	(??_atoi+2)^0,w,c
  9165  003B34  A0D8               	btfss	status,0,c
  9166  003B36  EF9F  F01D         	goto	u5801
  9167  003B3A  EFA2  F01D         	goto	u5800
  9168  003B3E                     u5801:
  9169  003B3E  0E01               	movlw	1
  9170  003B40  EFA3  F01D         	goto	u5810
  9171  003B44                     u5800:
  9172  003B44  0E00               	movlw	0
  9173  003B46                     u5810:
  9174  003B46  6E12               	movwf	_atoi$996^0,c
  9175  003B48  6A13               	clrf	(_atoi$996+1)^0,c
  9176  003B4A  5012               	movf	_atoi$996^0,w,c
  9177  003B4C  1013               	iorwf	(_atoi$996+1)^0,w,c
  9178  003B4E  A4D8               	btfss	status,2,c
  9179  003B50  EFAC  F01D         	goto	u5821
  9180  003B54  EFAE  F01D         	goto	u5820
  9181  003B58                     u5821:
  9182  003B58  EF6B  F01D         	goto	l4678
  9183  003B5C                     u5820:
  9184  003B5C  500E               	movf	atoi@neg^0,w,c
  9185  003B5E  100F               	iorwf	(atoi@neg+1)^0,w,c
  9186  003B60  A4D8               	btfss	status,2,c
  9187  003B62  EFB5  F01D         	goto	u5831
  9188  003B66  EFB7  F01D         	goto	u5830
  9189  003B6A                     u5831:
  9190  003B6A  EFC5  F01D         	goto	l1169
  9191  003B6E                     u5830:
  9192  003B6E  C015  F00A         	movff	atoi@n,??_atoi
  9193  003B72  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9194  003B76  1E0A               	comf	??_atoi^0,f,c
  9195  003B78  1E0B               	comf	(??_atoi+1)^0,f,c
  9196  003B7A  4A0A               	infsnz	??_atoi^0,f,c
  9197  003B7C  2A0B               	incf	(??_atoi+1)^0,f,c
  9198  003B7E  C00A  F008         	movff	??_atoi,?_atoi
  9199  003B82  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9200  003B86  EFC9  F01D         	goto	l1172
  9201  003B8A                     l1169:
  9202  003B8A  C015  F008         	movff	atoi@n,?_atoi
  9203  003B8E  C016  F009         	movff	atoi@n+1,?_atoi+1
  9204  003B92                     l1172:
  9205  003B92  0012               	return		;funcret
  9206  003B94                     __end_of_atoi:
  9207                           	callstack 0
  9208                           
  9209 ;; *************** function _isspace *****************
  9210 ;; Defined at:
  9211 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  c               2    0[COMRAM] int 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  2    0[COMRAM] int 
  9218 ;; Registers used:
  9219 ;;		wreg, status,2, status,0
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9225 ;;      Params:         2       0       0       0       0       0       0       0       0
  9226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9227 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9228 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9229 ;;Total ram usage:        7 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_atoi
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text31
  9239  00483C                     __ptext31:
  9240                           	callstack 0
  9241  00483C                     _isspace:
  9242                           	callstack 26
  9243  00483C  0E01               	movlw	1
  9244  00483E  6E07               	movwf	_isspace$1025^0,c
  9245  004840  0E20               	movlw	32
  9246  004842  1801               	xorwf	isspace@c^0,w,c
  9247  004844  1002               	iorwf	(isspace@c+1)^0,w,c
  9248  004846  B4D8               	btfsc	status,2,c
  9249  004848  EF28  F024         	goto	u5061
  9250  00484C  EF2A  F024         	goto	u5060
  9251  004850                     u5061:
  9252  004850  EF43  F024         	goto	l4274
  9253  004854                     u5060:
  9254  004854  0EF7               	movlw	247
  9255  004856  6E03               	movwf	??_isspace^0,c
  9256  004858  0EFF               	movlw	255
  9257  00485A  6E04               	movwf	(??_isspace+1)^0,c
  9258  00485C  C001  F005         	movff	isspace@c,??_isspace+2
  9259  004860  C002  F006         	movff	isspace@c+1,??_isspace+3
  9260  004864  5003               	movf	??_isspace^0,w,c
  9261  004866  2605               	addwf	(??_isspace+2)^0,f,c
  9262  004868  5004               	movf	(??_isspace+1)^0,w,c
  9263  00486A  2206               	addwfc	(??_isspace+3)^0,f,c
  9264  00486C  5006               	movf	(??_isspace+3)^0,w,c
  9265  00486E  E109               	bnz	u5070
  9266  004870  0E05               	movlw	5
  9267  004872  5C05               	subwf	(??_isspace+2)^0,w,c
  9268  004874  A0D8               	btfss	status,0,c
  9269  004876  EF3F  F024         	goto	u5071
  9270  00487A  EF41  F024         	goto	u5070
  9271  00487E                     u5071:
  9272  00487E  EF43  F024         	goto	l4274
  9273  004882                     u5070:
  9274  004882  0E00               	movlw	0
  9275  004884  6E07               	movwf	_isspace$1025^0,c
  9276  004886                     l4274:
  9277  004886  C007  F001         	movff	_isspace$1025,?_isspace
  9278  00488A  6A02               	clrf	(?_isspace+1)^0,c
  9279  00488C  0012               	return		;funcret
  9280  00488E                     __end_of_isspace:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function _isdigit *****************
  9284 ;; Defined at:
  9285 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  c               2    0[COMRAM] int 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;		None
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  2    0[COMRAM] int 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, status,0
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9299 ;;      Params:         2       0       0       0       0       0       0       0       0
  9300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9301 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9302 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9303 ;;Total ram usage:        6 bytes
  9304 ;; Hardware stack levels used:    1
  9305 ;; This function calls:
  9306 ;;		Nothing
  9307 ;; This function is called by:
  9308 ;;		_vfpfcnvrt
  9309 ;;		_atoi
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text32
  9314  004AEA                     __ptext32:
  9315                           	callstack 0
  9316  004AEA                     _isdigit:
  9317                           	callstack 27
  9318  004AEA  0ED0               	movlw	208
  9319  004AEC  6E03               	movwf	??_isdigit^0,c
  9320  004AEE  0EFF               	movlw	255
  9321  004AF0  6E04               	movwf	(??_isdigit+1)^0,c
  9322  004AF2  C001  F005         	movff	isdigit@c,??_isdigit+2
  9323  004AF6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9324  004AFA  5003               	movf	??_isdigit^0,w,c
  9325  004AFC  2605               	addwf	(??_isdigit+2)^0,f,c
  9326  004AFE  5004               	movf	(??_isdigit+1)^0,w,c
  9327  004B00  2206               	addwfc	(??_isdigit+3)^0,f,c
  9328  004B02  5006               	movf	(??_isdigit+3)^0,w,c
  9329  004B04  E10A               	bnz	u5040
  9330  004B06  0E0A               	movlw	10
  9331  004B08  5C05               	subwf	(??_isdigit+2)^0,w,c
  9332  004B0A  A0D8               	btfss	status,0,c
  9333  004B0C  EF8A  F025         	goto	u5041
  9334  004B10  EF8D  F025         	goto	u5040
  9335  004B14                     u5041:
  9336  004B14  0E01               	movlw	1
  9337  004B16  EF8E  F025         	goto	u5050
  9338  004B1A                     u5040:
  9339  004B1A  0E00               	movlw	0
  9340  004B1C                     u5050:
  9341  004B1C  6E01               	movwf	?_isdigit^0,c
  9342  004B1E  6A02               	clrf	(?_isdigit+1)^0,c
  9343  004B20  0012               	return		;funcret
  9344  004B22                     __end_of_isdigit:
  9345                           	callstack 0
  9346                           
  9347 ;; *************** function ___wmul *****************
  9348 ;; Defined at:
  9349 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;  multiplier      2    0[COMRAM] unsigned int 
  9352 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  product         2    4[COMRAM] unsigned int 
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2    0[COMRAM] unsigned int 
  9357 ;; Registers used:
  9358 ;;		wreg, status,2, status,0, prodl, prodh
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9364 ;;      Params:         4       0       0       0       0       0       0       0       0
  9365 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9367 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9368 ;;Total ram usage:        6 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_atoi
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text33
  9378  004B88                     __ptext33:
  9379                           	callstack 0
  9380  004B88                     ___wmul:
  9381                           	callstack 26
  9382  004B88  5001               	movf	___wmul@multiplier^0,w,c
  9383  004B8A  0203               	mulwf	___wmul@multiplicand^0,c
  9384  004B8C  CFF3 F005          	movff	prodl,___wmul@product
  9385  004B90  CFF4 F006          	movff	prodh,___wmul@product+1
  9386  004B94  5001               	movf	___wmul@multiplier^0,w,c
  9387  004B96  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9388  004B98  50F3               	movf	243,w,c
  9389  004B9A  2606               	addwf	(___wmul@product+1)^0,f,c
  9390  004B9C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9391  004B9E  0203               	mulwf	___wmul@multiplicand^0,c
  9392  004BA0  50F3               	movf	243,w,c
  9393  004BA2  2606               	addwf	(___wmul@product+1)^0,f,c
  9394  004BA4  C005  F001         	movff	___wmul@product,?___wmul
  9395  004BA8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9396  004BAC  0012               	return		;funcret
  9397  004BAE                     __end_of___wmul:
  9398                           	callstack 0
  9399                           
  9400 ;; *************** function ___xxtofl *****************
  9401 ;; Defined at:
  9402 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  sign            1    wreg     unsigned char 
  9405 ;;  val             4    0[COMRAM] long 
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  sign            1    8[COMRAM] unsigned char 
  9408 ;;  arg             4   10[COMRAM] unsigned long 
  9409 ;;  exp             1    9[COMRAM] unsigned char 
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  4    0[COMRAM] unsigned char 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9419 ;;      Params:         4       0       0       0       0       0       0       0       0
  9420 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9421 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9422 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9423 ;;Total ram usage:       14 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_main
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text34
  9433  003850                     __ptext34:
  9434                           	callstack 0
  9435  003850                     ___xxtofl:
  9436                           	callstack 30
  9437                           
  9438                           ;incstack = 0
  9439                           ;___xxtofl@sign stored from wreg
  9440  003850  6E09               	movwf	___xxtofl@sign^0,c
  9441  003852  5009               	movf	___xxtofl@sign^0,w,c
  9442  003854  B4D8               	btfsc	status,2,c
  9443  003856  EF2F  F01C         	goto	u6771
  9444  00385A  EF31  F01C         	goto	u6770
  9445  00385E                     u6771:
  9446  00385E  EF53  F01C         	goto	l889
  9447  003862                     u6770:
  9448  003862  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9449  003864  EF38  F01C         	goto	u6780
  9450  003868  EF36  F01C         	goto	u6781
  9451  00386C                     u6781:
  9452  00386C  EF53  F01C         	goto	l889
  9453  003870                     u6780:
  9454  003870  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9455  003874  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9456  003878  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9457  00387C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9458  003880  1E05               	comf	??___xxtofl^0,f,c
  9459  003882  1E06               	comf	(??___xxtofl+1)^0,f,c
  9460  003884  1E07               	comf	(??___xxtofl+2)^0,f,c
  9461  003886  1E08               	comf	(??___xxtofl+3)^0,f,c
  9462  003888  2A05               	incf	??___xxtofl^0,f,c
  9463  00388A  0E00               	movlw	0
  9464  00388C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9465  00388E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9466  003890  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9467  003892  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9468  003896  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9469  00389A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9470  00389E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9471  0038A2  EF5B  F01C         	goto	l5328
  9472  0038A6                     l889:
  9473  0038A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9474  0038AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9475  0038AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9476  0038B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9477  0038B6                     l5328:
  9478  0038B6  5001               	movf	___xxtofl@val^0,w,c
  9479  0038B8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9480  0038BA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9481  0038BC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9482  0038BE  A4D8               	btfss	status,2,c
  9483  0038C0  EF64  F01C         	goto	u6791
  9484  0038C4  EF66  F01C         	goto	u6790
  9485  0038C8                     u6791:
  9486  0038C8  EF70  F01C         	goto	l5334
  9487  0038CC                     u6790:
  9488  0038CC  0E00               	movlw	0
  9489  0038CE  6E01               	movwf	?___xxtofl^0,c
  9490  0038D0  0E00               	movlw	0
  9491  0038D2  6E02               	movwf	(?___xxtofl+1)^0,c
  9492  0038D4  0E00               	movlw	0
  9493  0038D6  6E03               	movwf	(?___xxtofl+2)^0,c
  9494  0038D8  0E00               	movlw	0
  9495  0038DA  6E04               	movwf	(?___xxtofl+3)^0,c
  9496  0038DC  EF01  F01D         	goto	l892
  9497  0038E0                     l5334:
  9498  0038E0  0E96               	movlw	150
  9499  0038E2  6E0A               	movwf	___xxtofl@exp^0,c
  9500  0038E4  EF7A  F01C         	goto	l5338
  9501  0038E8                     l5336:
  9502  0038E8  2A0A               	incf	___xxtofl@exp^0,f,c
  9503  0038EA  90D8               	bcf	status,0,c
  9504  0038EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9505  0038EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9506  0038F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9507  0038F2  320B               	rrcf	___xxtofl@arg^0,f,c
  9508  0038F4                     l5338:
  9509  0038F4  0E00               	movlw	0
  9510  0038F6  140B               	andwf	___xxtofl@arg^0,w,c
  9511  0038F8  6E05               	movwf	??___xxtofl^0,c
  9512  0038FA  0E00               	movlw	0
  9513  0038FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9514  0038FE  6E06               	movwf	(??___xxtofl+1)^0,c
  9515  003900  0E00               	movlw	0
  9516  003902  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9517  003904  6E07               	movwf	(??___xxtofl+2)^0,c
  9518  003906  0EFE               	movlw	254
  9519  003908  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9520  00390A  6E08               	movwf	(??___xxtofl+3)^0,c
  9521  00390C  5005               	movf	??___xxtofl^0,w,c
  9522  00390E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9523  003910  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9524  003912  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9525  003914  A4D8               	btfss	status,2,c
  9526  003916  EF8F  F01C         	goto	u6801
  9527  00391A  EF91  F01C         	goto	u6800
  9528  00391E                     u6801:
  9529  00391E  EF74  F01C         	goto	l5336
  9530  003922                     u6800:
  9531  003922  EF9F  F01C         	goto	l896
  9532  003926                     l5340:
  9533  003926  2A0A               	incf	___xxtofl@exp^0,f,c
  9534  003928  0E01               	movlw	1
  9535  00392A  260B               	addwf	___xxtofl@arg^0,f,c
  9536  00392C  0E00               	movlw	0
  9537  00392E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9538  003930  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9539  003932  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9540  003934  90D8               	bcf	status,0,c
  9541  003936  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9542  003938  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9543  00393A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9544  00393C  320B               	rrcf	___xxtofl@arg^0,f,c
  9545  00393E                     l896:
  9546  00393E  0E00               	movlw	0
  9547  003940  140B               	andwf	___xxtofl@arg^0,w,c
  9548  003942  6E05               	movwf	??___xxtofl^0,c
  9549  003944  0E00               	movlw	0
  9550  003946  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9551  003948  6E06               	movwf	(??___xxtofl+1)^0,c
  9552  00394A  0E00               	movlw	0
  9553  00394C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9554  00394E  6E07               	movwf	(??___xxtofl+2)^0,c
  9555  003950  0EFF               	movlw	255
  9556  003952  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9557  003954  6E08               	movwf	(??___xxtofl+3)^0,c
  9558  003956  5005               	movf	??___xxtofl^0,w,c
  9559  003958  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9560  00395A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9561  00395C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9562  00395E  A4D8               	btfss	status,2,c
  9563  003960  EFB4  F01C         	goto	u6811
  9564  003964  EFB6  F01C         	goto	u6810
  9565  003968                     u6811:
  9566  003968  EF93  F01C         	goto	l5340
  9567  00396C                     u6810:
  9568  00396C  EFBE  F01C         	goto	l5348
  9569  003970                     l5346:
  9570  003970  060A               	decf	___xxtofl@exp^0,f,c
  9571  003972  90D8               	bcf	status,0,c
  9572  003974  360B               	rlcf	___xxtofl@arg^0,f,c
  9573  003976  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9574  003978  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9575  00397A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9576  00397C                     l5348:
  9577  00397C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9578  00397E  EFC3  F01C         	goto	u6821
  9579  003982  EFC5  F01C         	goto	u6820
  9580  003986                     u6821:
  9581  003986  EFCD  F01C         	goto	l903
  9582  00398A                     u6820:
  9583  00398A  0E02               	movlw	2
  9584  00398C  600A               	cpfslt	___xxtofl@exp^0,c
  9585  00398E  EFCB  F01C         	goto	u6831
  9586  003992  EFCD  F01C         	goto	u6830
  9587  003996                     u6831:
  9588  003996  EFB8  F01C         	goto	l5346
  9589  00399A                     u6830:
  9590  00399A                     l903:
  9591  00399A  B00A               	btfsc	___xxtofl@exp^0,0,c
  9592  00399C  EFD2  F01C         	goto	u6841
  9593  0039A0  EFD4  F01C         	goto	u6840
  9594  0039A4                     u6841:
  9595  0039A4  EFD5  F01C         	goto	l5354
  9596  0039A8                     u6840:
  9597  0039A8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9598  0039AA                     l5354:
  9599  0039AA  90D8               	bcf	status,0,c
  9600  0039AC  320A               	rrcf	___xxtofl@exp^0,f,c
  9601  0039AE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9602  0039B2  6A06               	clrf	(??___xxtofl+1)^0,c
  9603  0039B4  6A07               	clrf	(??___xxtofl+2)^0,c
  9604  0039B6  6A08               	clrf	(??___xxtofl+3)^0,c
  9605  0039B8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9606  0039BC  6A07               	clrf	(??___xxtofl+2)^0,c
  9607  0039BE  6A06               	clrf	(??___xxtofl+1)^0,c
  9608  0039C0  6A05               	clrf	??___xxtofl^0,c
  9609  0039C2  5005               	movf	??___xxtofl^0,w,c
  9610  0039C4  120B               	iorwf	___xxtofl@arg^0,f,c
  9611  0039C6  5006               	movf	(??___xxtofl+1)^0,w,c
  9612  0039C8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9613  0039CA  5007               	movf	(??___xxtofl+2)^0,w,c
  9614  0039CC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9615  0039CE  5008               	movf	(??___xxtofl+3)^0,w,c
  9616  0039D0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9617  0039D2  5009               	movf	___xxtofl@sign^0,w,c
  9618  0039D4  B4D8               	btfsc	status,2,c
  9619  0039D6  EFEF  F01C         	goto	u6851
  9620  0039DA  EFF1  F01C         	goto	u6850
  9621  0039DE                     u6851:
  9622  0039DE  EFF9  F01C         	goto	l5364
  9623  0039E2                     u6850:
  9624  0039E2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9625  0039E4  EFF8  F01C         	goto	u6860
  9626  0039E8  EFF6  F01C         	goto	u6861
  9627  0039EC                     u6861:
  9628  0039EC  EFF9  F01C         	goto	l5364
  9629  0039F0                     u6860:
  9630  0039F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9631  0039F2                     l5364:
  9632  0039F2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9633  0039F6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9634  0039FA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9635  0039FE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9636  003A02                     l892:
  9637  003A02  0012               	return		;funcret
  9638  003A04                     __end_of___xxtofl:
  9639                           	callstack 0
  9640                           
  9641 ;; *************** function _Secuence4 *****************
  9642 ;; Defined at:
  9643 ;;		line 335 in file "distance_finding.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;		None
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;		None
  9648 ;; Return value:  Size  Location     Type
  9649 ;;                  2   38[None  ] int 
  9650 ;; Registers used:
  9651 ;;		wreg, status,2, status,0, cstack
  9652 ;; Tracked objects:
  9653 ;;		On entry : 0/0
  9654 ;;		On exit  : 0/0
  9655 ;;		Unchanged: 0/0
  9656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9657 ;;      Params:         0       0       0       0       0       0       0       0       0
  9658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9659 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9660 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9661 ;;Total ram usage:        2 bytes
  9662 ;; Hardware stack levels used:    1
  9663 ;; Hardware stack levels required when called:    3
  9664 ;; This function calls:
  9665 ;;		_LCD_Clear
  9666 ;; This function is called by:
  9667 ;;		_main
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671                           	psect	text35
  9672  002C9E                     __ptext35:
  9673                           	callstack 0
  9674  002C9E                     _Secuence4:
  9675                           	callstack 27
  9676  002C9E                     
  9677                           ;distance_finding.c: 336:     TRISBbits.RB5 = 0;
  9678  002C9E  9A93               	bcf	147,5,c	;volatile
  9679                           
  9680                           ;distance_finding.c: 337:     TRISC=0xff;
  9681  002CA0  6894               	setf	148,c	;volatile
  9682                           
  9683                           ;distance_finding.c: 338:     RB5=1;
  9684  002CA2  8A81               	bsf	3969,5,c	;volatile
  9685                           
  9686                           ;distance_finding.c: 339:    if(RC0==1 && d == 0){
  9687  002CA4  A082               	btfss	3970,0,c	;volatile
  9688  002CA6  EF57  F016         	goto	u6601
  9689  002CAA  EF59  F016         	goto	u6600
  9690  002CAE                     u6601:
  9691  002CAE  EF9E  F016         	goto	l172
  9692  002CB2                     u6600:
  9693  002CB2  0100               	movlb	0	; () banked
  9694  002CB4  51F7               	movf	_d& (0+255),w,b
  9695  002CB6  11F8               	iorwf	(_d+1)& (0+255),w,b
  9696  002CB8  A4D8               	btfss	status,2,c
  9697  002CBA  EF61  F016         	goto	u6611
  9698  002CBE  EF63  F016         	goto	u6610
  9699  002CC2                     u6611:
  9700  002CC2  EF9E  F016         	goto	l172
  9701  002CC6                     u6610:
  9702  002CC6                     
  9703                           ; BSR set to: 0
  9704                           ;distance_finding.c: 340:         d=1;
  9705  002CC6  0E00               	movlw	0
  9706  002CC8  6FF8               	movwf	(_d+1)& (0+255),b
  9707  002CCA  0E01               	movlw	1
  9708  002CCC  6FF7               	movwf	_d& (0+255),b
  9709  002CCE                     
  9710                           ; BSR set to: 0
  9711                           ;distance_finding.c: 341:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9712  002CCE  0E03               	movlw	3
  9713  002CD0  6E0A               	movwf	(??_Secuence4+1)^0,c
  9714  002CD2  0E8A               	movlw	138
  9715  002CD4  6E09               	movwf	??_Secuence4^0,c
  9716  002CD6  0E56               	movlw	86
  9717  002CD8                     u6967:
  9718  002CD8  2EE8               	decfsz	wreg,f,c
  9719  002CDA  D7FE               	bra	u6967
  9720  002CDC  2E09               	decfsz	??_Secuence4^0,f,c
  9721  002CDE  D7FC               	bra	u6967
  9722  002CE0  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9723  002CE2  D7FA               	bra	u6967
  9724  002CE4                     
  9725                           ;distance_finding.c: 342:         if(RC0==0 && d==1){
  9726  002CE4  B082               	btfsc	3970,0,c	;volatile
  9727  002CE6  EF77  F016         	goto	u6621
  9728  002CEA  EF79  F016         	goto	u6620
  9729  002CEE                     u6621:
  9730  002CEE  EF8A  F017         	goto	l5318
  9731  002CF2                     u6620:
  9732  002CF2  0100               	movlb	0	; () banked
  9733  002CF4  05F7               	decf	_d& (0+255),w,b
  9734  002CF6  11F8               	iorwf	(_d+1)& (0+255),w,b
  9735  002CF8  A4D8               	btfss	status,2,c
  9736  002CFA  EF81  F016         	goto	u6631
  9737  002CFE  EF83  F016         	goto	u6630
  9738  002D02                     u6631:
  9739  002D02  EF8A  F017         	goto	l5318
  9740  002D06                     u6630:
  9741  002D06                     
  9742                           ; BSR set to: 0
  9743                           ;distance_finding.c: 343:         f=0;
  9744  002D06  0E00               	movlw	0
  9745  002D08  0101               	movlb	1	; () banked
  9746  002D0A  6F17               	movwf	(_f+1)& (0+255),b
  9747  002D0C  0E00               	movlw	0
  9748  002D0E  6F16               	movwf	_f& (0+255),b
  9749                           
  9750                           ;distance_finding.c: 344:         d=0;
  9751  002D10  0E00               	movlw	0
  9752  002D12  0100               	movlb	0	; () banked
  9753  002D14  6FF8               	movwf	(_d+1)& (0+255),b
  9754  002D16  0E00               	movlw	0
  9755  002D18  6FF7               	movwf	_d& (0+255),b
  9756  002D1A                     
  9757                           ; BSR set to: 0
  9758                           ;distance_finding.c: 345:         LCD_Clear();
  9759  002D1A  ECD7  F025         	call	_LCD_Clear	;wreg free
  9760  002D1E                     
  9761                           ;distance_finding.c: 346:         a = 0;
  9762  002D1E  0E00               	movlw	0
  9763  002D20  0100               	movlb	0	; () banked
  9764  002D22  6FF4               	movwf	(_a+1)& (0+255),b
  9765  002D24  0E00               	movlw	0
  9766  002D26  6FF3               	movwf	_a& (0+255),b
  9767  002D28                     
  9768                           ; BSR set to: 0
  9769                           ;distance_finding.c: 347:         c = 0;
  9770  002D28  0E00               	movlw	0
  9771  002D2A  6FFA               	movwf	(_c+1)& (0+255),b
  9772  002D2C  0E00               	movlw	0
  9773  002D2E  6FF9               	movwf	_c& (0+255),b
  9774  002D30                     
  9775                           ; BSR set to: 0
  9776                           ;distance_finding.c: 348:         LCD_Clear();
  9777  002D30  ECD7  F025         	call	_LCD_Clear	;wreg free
  9778  002D34                     
  9779                           ;distance_finding.c: 349:         RB5=0;
  9780  002D34  9A81               	bcf	3969,5,c	;volatile
  9781  002D36                     
  9782                           ;distance_finding.c: 352:         RC0=0;
  9783  002D36  9082               	bcf	3970,0,c	;volatile
  9784  002D38  EF8A  F017         	goto	l5318
  9785  002D3C                     l172:
  9786  002D3C  A282               	btfss	3970,1,c	;volatile
  9787  002D3E  EFA3  F016         	goto	u6641
  9788  002D42  EFA5  F016         	goto	u6640
  9789  002D46                     u6641:
  9790  002D46  EFDF  F016         	goto	l175
  9791  002D4A                     u6640:
  9792  002D4A  0100               	movlb	0	; () banked
  9793  002D4C  51F7               	movf	_d& (0+255),w,b
  9794  002D4E  11F8               	iorwf	(_d+1)& (0+255),w,b
  9795  002D50  A4D8               	btfss	status,2,c
  9796  002D52  EFAD  F016         	goto	u6651
  9797  002D56  EFAF  F016         	goto	u6650
  9798  002D5A                     u6651:
  9799  002D5A  EFDF  F016         	goto	l175
  9800  002D5E                     u6650:
  9801  002D5E                     
  9802                           ; BSR set to: 0
  9803                           ;distance_finding.c: 356:         d=1;
  9804  002D5E  0E00               	movlw	0
  9805  002D60  6FF8               	movwf	(_d+1)& (0+255),b
  9806  002D62  0E01               	movlw	1
  9807  002D64  6FF7               	movwf	_d& (0+255),b
  9808  002D66                     
  9809                           ; BSR set to: 0
  9810                           ;distance_finding.c: 357:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9811  002D66  0E03               	movlw	3
  9812  002D68  6E0A               	movwf	(??_Secuence4+1)^0,c
  9813  002D6A  0E8A               	movlw	138
  9814  002D6C  6E09               	movwf	??_Secuence4^0,c
  9815  002D6E  0E56               	movlw	86
  9816  002D70                     u6977:
  9817  002D70  2EE8               	decfsz	wreg,f,c
  9818  002D72  D7FE               	bra	u6977
  9819  002D74  2E09               	decfsz	??_Secuence4^0,f,c
  9820  002D76  D7FC               	bra	u6977
  9821  002D78  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9822  002D7A  D7FA               	bra	u6977
  9823  002D7C                     
  9824                           ;distance_finding.c: 358:         if(RC1==0 && d==1){
  9825  002D7C  B282               	btfsc	3970,1,c	;volatile
  9826  002D7E  EFC3  F016         	goto	u6661
  9827  002D82  EFC5  F016         	goto	u6660
  9828  002D86                     u6661:
  9829  002D86  EF8A  F017         	goto	l5318
  9830  002D8A                     u6660:
  9831  002D8A  0100               	movlb	0	; () banked
  9832  002D8C  05F7               	decf	_d& (0+255),w,b
  9833  002D8E  11F8               	iorwf	(_d+1)& (0+255),w,b
  9834  002D90  A4D8               	btfss	status,2,c
  9835  002D92  EFCD  F016         	goto	u6671
  9836  002D96  EFCF  F016         	goto	u6670
  9837  002D9A                     u6671:
  9838  002D9A  EF8A  F017         	goto	l5318
  9839  002D9E                     u6670:
  9840  002D9E                     
  9841                           ; BSR set to: 0
  9842                           ;distance_finding.c: 359:         f=0;
  9843  002D9E  0E00               	movlw	0
  9844  002DA0  0101               	movlb	1	; () banked
  9845  002DA2  6F17               	movwf	(_f+1)& (0+255),b
  9846  002DA4  0E00               	movlw	0
  9847  002DA6  6F16               	movwf	_f& (0+255),b
  9848  002DA8                     
  9849                           ; BSR set to: 1
  9850                           ;distance_finding.c: 360:         RB5=0;
  9851  002DA8  9A81               	bcf	3969,5,c	;volatile
  9852                           
  9853                           ;distance_finding.c: 361:         a=0;
  9854  002DAA  0E00               	movlw	0
  9855  002DAC  0100               	movlb	0	; () banked
  9856  002DAE  6FF4               	movwf	(_a+1)& (0+255),b
  9857  002DB0  0E00               	movlw	0
  9858  002DB2  6FF3               	movwf	_a& (0+255),b
  9859  002DB4                     
  9860                           ; BSR set to: 0
  9861                           ;distance_finding.c: 362:         c++;
  9862  002DB4  4BF9               	infsnz	_c& (0+255),f,b
  9863  002DB6  2BFA               	incf	(_c+1)& (0+255),f,b
  9864  002DB8                     
  9865                           ; BSR set to: 0
  9866                           ;distance_finding.c: 363:         RC1=0;
  9867  002DB8  9282               	bcf	3970,1,c	;volatile
  9868  002DBA  EF8A  F017         	goto	l5318
  9869  002DBE                     l175:
  9870  002DBE  A482               	btfss	3970,2,c	;volatile
  9871  002DC0  EFE4  F016         	goto	u6681
  9872  002DC4  EFE6  F016         	goto	u6680
  9873  002DC8                     u6681:
  9874  002DC8  EF41  F017         	goto	l178
  9875  002DCC                     u6680:
  9876  002DCC  0100               	movlb	0	; () banked
  9877  002DCE  51F7               	movf	_d& (0+255),w,b
  9878  002DD0  11F8               	iorwf	(_d+1)& (0+255),w,b
  9879  002DD2  A4D8               	btfss	status,2,c
  9880  002DD4  EFEE  F016         	goto	u6691
  9881  002DD8  EFF0  F016         	goto	u6690
  9882  002DDC                     u6691:
  9883  002DDC  EF41  F017         	goto	l178
  9884  002DE0                     u6690:
  9885  002DE0                     
  9886                           ; BSR set to: 0
  9887                           ;distance_finding.c: 367:         d=1;
  9888  002DE0  0E00               	movlw	0
  9889  002DE2  6FF8               	movwf	(_d+1)& (0+255),b
  9890  002DE4  0E01               	movlw	1
  9891  002DE6  6FF7               	movwf	_d& (0+255),b
  9892  002DE8                     
  9893                           ; BSR set to: 0
  9894                           ;distance_finding.c: 368:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9895  002DE8  0E03               	movlw	3
  9896  002DEA  6E0A               	movwf	(??_Secuence4+1)^0,c
  9897  002DEC  0E8A               	movlw	138
  9898  002DEE  6E09               	movwf	??_Secuence4^0,c
  9899  002DF0  0E56               	movlw	86
  9900  002DF2                     u6987:
  9901  002DF2  2EE8               	decfsz	wreg,f,c
  9902  002DF4  D7FE               	bra	u6987
  9903  002DF6  2E09               	decfsz	??_Secuence4^0,f,c
  9904  002DF8  D7FC               	bra	u6987
  9905  002DFA  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9906  002DFC  D7FA               	bra	u6987
  9907  002DFE                     
  9908                           ;distance_finding.c: 369:         if(RC2==0 && d==1){
  9909  002DFE  B482               	btfsc	3970,2,c	;volatile
  9910  002E00  EF04  F017         	goto	u6701
  9911  002E04  EF06  F017         	goto	u6700
  9912  002E08                     u6701:
  9913  002E08  EF8A  F017         	goto	l5318
  9914  002E0C                     u6700:
  9915  002E0C  0100               	movlb	0	; () banked
  9916  002E0E  05F7               	decf	_d& (0+255),w,b
  9917  002E10  11F8               	iorwf	(_d+1)& (0+255),w,b
  9918  002E12  A4D8               	btfss	status,2,c
  9919  002E14  EF0E  F017         	goto	u6711
  9920  002E18  EF10  F017         	goto	u6710
  9921  002E1C                     u6711:
  9922  002E1C  EF8A  F017         	goto	l5318
  9923  002E20                     u6710:
  9924  002E20                     
  9925                           ; BSR set to: 0
  9926                           ;distance_finding.c: 370:         f=0;
  9927  002E20  0E00               	movlw	0
  9928  002E22  0101               	movlb	1	; () banked
  9929  002E24  6F17               	movwf	(_f+1)& (0+255),b
  9930  002E26  0E00               	movlw	0
  9931  002E28  6F16               	movwf	_f& (0+255),b
  9932                           
  9933                           ;distance_finding.c: 371:         d=0;
  9934  002E2A  0E00               	movlw	0
  9935  002E2C  0100               	movlb	0	; () banked
  9936  002E2E  6FF8               	movwf	(_d+1)& (0+255),b
  9937  002E30  0E00               	movlw	0
  9938  002E32  6FF7               	movwf	_d& (0+255),b
  9939  002E34                     
  9940                           ; BSR set to: 0
  9941                           ;distance_finding.c: 372:         RB5=0;
  9942  002E34  9A81               	bcf	3969,5,c	;volatile
  9943  002E36                     
  9944                           ; BSR set to: 0
  9945                           ;distance_finding.c: 373:         LCD_Clear();
  9946  002E36  ECD7  F025         	call	_LCD_Clear	;wreg free
  9947  002E3A                     
  9948                           ;distance_finding.c: 375:         if(b==1){
  9949  002E3A  0100               	movlb	0	; () banked
  9950  002E3C  05FB               	decf	_b& (0+255),w,b
  9951  002E3E  11FC               	iorwf	(_b+1)& (0+255),w,b
  9952  002E40  A4D8               	btfss	status,2,c
  9953  002E42  EF25  F017         	goto	u6721
  9954  002E46  EF27  F017         	goto	u6720
  9955  002E4A                     u6721:
  9956  002E4A  EF33  F017         	goto	l5292
  9957  002E4E                     u6720:
  9958  002E4E                     
  9959                           ; BSR set to: 0
  9960                           ;distance_finding.c: 376:             b=2;
  9961  002E4E  0E00               	movlw	0
  9962  002E50  6FFC               	movwf	(_b+1)& (0+255),b
  9963  002E52  0E02               	movlw	2
  9964  002E54  6FFB               	movwf	_b& (0+255),b
  9965                           
  9966                           ;distance_finding.c: 377:             c=0;
  9967  002E56  0E00               	movlw	0
  9968  002E58  6FFA               	movwf	(_c+1)& (0+255),b
  9969  002E5A  0E00               	movlw	0
  9970  002E5C  6FF9               	movwf	_c& (0+255),b
  9971  002E5E                     
  9972                           ; BSR set to: 0
  9973                           ;distance_finding.c: 378:             LCD_Clear();
  9974  002E5E  ECD7  F025         	call	_LCD_Clear	;wreg free
  9975                           
  9976                           ;distance_finding.c: 380:         }
  9977  002E62  EF37  F017         	goto	l5294
  9978  002E66                     l5292:
  9979                           
  9980                           ; BSR set to: 0
  9981  002E66  0E00               	movlw	0
  9982  002E68  6FFC               	movwf	(_b+1)& (0+255),b
  9983  002E6A  0E01               	movlw	1
  9984  002E6C  6FFB               	movwf	_b& (0+255),b
  9985  002E6E                     l5294:
  9986                           
  9987                           ;distance_finding.c: 382:          RC2=0;
  9988  002E6E  9482               	bcf	3970,2,c	;volatile
  9989                           
  9990                           ;distance_finding.c: 383:          c=0;
  9991  002E70  0E00               	movlw	0
  9992  002E72  0100               	movlb	0	; () banked
  9993  002E74  6FFA               	movwf	(_c+1)& (0+255),b
  9994  002E76  0E00               	movlw	0
  9995  002E78  6FF9               	movwf	_c& (0+255),b
  9996  002E7A                     
  9997                           ; BSR set to: 0
  9998                           ;distance_finding.c: 384:          LCD_Clear();
  9999  002E7A  ECD7  F025         	call	_LCD_Clear	;wreg free
 10000  002E7E  EF8A  F017         	goto	l5318
 10001  002E82                     l178:
 10002  002E82  A882               	btfss	3970,4,c	;volatile
 10003  002E84  EF46  F017         	goto	u6731
 10004  002E88  EF48  F017         	goto	u6730
 10005  002E8C                     u6731:
 10006  002E8C  EF86  F017         	goto	l183
 10007  002E90                     u6730:
 10008  002E90  0100               	movlb	0	; () banked
 10009  002E92  05F7               	decf	_d& (0+255),w,b
 10010  002E94  11F8               	iorwf	(_d+1)& (0+255),w,b
 10011  002E96  A4D8               	btfss	status,2,c
 10012  002E98  EF50  F017         	goto	u6741
 10013  002E9C  EF52  F017         	goto	u6740
 10014  002EA0                     u6741:
 10015  002EA0  EF86  F017         	goto	l183
 10016  002EA4                     u6740:
 10017  002EA4                     
 10018                           ; BSR set to: 0
 10019                           ;distance_finding.c: 388:         d=1;
 10020  002EA4  0E00               	movlw	0
 10021  002EA6  6FF8               	movwf	(_d+1)& (0+255),b
 10022  002EA8  0E01               	movlw	1
 10023  002EAA  6FF7               	movwf	_d& (0+255),b
 10024  002EAC                     
 10025                           ; BSR set to: 0
 10026                           ;distance_finding.c: 389:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10027  002EAC  0E03               	movlw	3
 10028  002EAE  6E0A               	movwf	(??_Secuence4+1)^0,c
 10029  002EB0  0E8A               	movlw	138
 10030  002EB2  6E09               	movwf	??_Secuence4^0,c
 10031  002EB4  0E56               	movlw	86
 10032  002EB6                     u6997:
 10033  002EB6  2EE8               	decfsz	wreg,f,c
 10034  002EB8  D7FE               	bra	u6997
 10035  002EBA  2E09               	decfsz	??_Secuence4^0,f,c
 10036  002EBC  D7FC               	bra	u6997
 10037  002EBE  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
 10038  002EC0  D7FA               	bra	u6997
 10039  002EC2                     
 10040                           ;distance_finding.c: 390:         if(RC1==0 && d==1){
 10041  002EC2  B282               	btfsc	3970,1,c	;volatile
 10042  002EC4  EF66  F017         	goto	u6751
 10043  002EC8  EF68  F017         	goto	u6750
 10044  002ECC                     u6751:
 10045  002ECC  EF8A  F017         	goto	l5318
 10046  002ED0                     u6750:
 10047  002ED0  0100               	movlb	0	; () banked
 10048  002ED2  05F7               	decf	_d& (0+255),w,b
 10049  002ED4  11F8               	iorwf	(_d+1)& (0+255),w,b
 10050  002ED6  A4D8               	btfss	status,2,c
 10051  002ED8  EF70  F017         	goto	u6761
 10052  002EDC  EF72  F017         	goto	u6760
 10053  002EE0                     u6761:
 10054  002EE0  EF8A  F017         	goto	l5318
 10055  002EE4                     u6760:
 10056  002EE4                     
 10057                           ; BSR set to: 0
 10058                           ;distance_finding.c: 391:           f=0;
 10059  002EE4  0E00               	movlw	0
 10060  002EE6  0101               	movlb	1	; () banked
 10061  002EE8  6F17               	movwf	(_f+1)& (0+255),b
 10062  002EEA  0E00               	movlw	0
 10063  002EEC  6F16               	movwf	_f& (0+255),b
 10064                           
 10065                           ;distance_finding.c: 392:           d=0;
 10066  002EEE  0E00               	movlw	0
 10067  002EF0  0100               	movlb	0	; () banked
 10068  002EF2  6FF8               	movwf	(_d+1)& (0+255),b
 10069  002EF4  0E00               	movlw	0
 10070  002EF6  6FF7               	movwf	_d& (0+255),b
 10071  002EF8                     
 10072                           ; BSR set to: 0
 10073                           ;distance_finding.c: 393:           RB5=0;
 10074  002EF8  9A81               	bcf	3969,5,c	;volatile
 10075  002EFA                     
 10076                           ; BSR set to: 0
 10077                           ;distance_finding.c: 394:           _delay((unsigned long)((300)*(20000000/4000000.0)));
 10078  002EFA  0ED6               	movlw	214
 10079  002EFC                     u7007:
 10080  002EFC  D000               	nop2	
 10081  002EFE  D000               	nop2	
 10082  002F00  2EE8               	decfsz	wreg,f,c
 10083  002F02  D7FC               	bra	u7007
 10084  002F04  D000               	nop2	
 10085  002F06                     
 10086                           ;distance_finding.c: 395:           RC4=0;
 10087  002F06  9882               	bcf	3970,4,c	;volatile
 10088  002F08  EF8A  F017         	goto	l5318
 10089  002F0C                     l183:
 10090                           
 10091                           ;distance_finding.c: 399:         RB5=0;
 10092  002F0C  9A81               	bcf	3969,5,c	;volatile
 10093                           
 10094                           ;distance_finding.c: 400:         TRISBbits.RB5 = 1;
 10095  002F0E  8A93               	bsf	147,5,c	;volatile
 10096  002F10                     
 10097                           ;distance_finding.c: 401:           TRISC=0x00;
 10098  002F10  0E00               	movlw	0
 10099  002F12  6E94               	movwf	148,c	;volatile
 10100  002F14                     l5318:
 10101                           
 10102                           ;distance_finding.c: 404:     RB5=0;
 10103  002F14  9A81               	bcf	3969,5,c	;volatile
 10104  002F16                     
 10105                           ;distance_finding.c: 405:     TRISBbits.RB5 = 1;
 10106  002F16  8A93               	bsf	147,5,c	;volatile
 10107                           
 10108                           ;distance_finding.c: 406:     TRISC=0x00;
 10109  002F18  0E00               	movlw	0
 10110  002F1A  6E94               	movwf	148,c	;volatile
 10111  002F1C  0012               	return		;funcret
 10112  002F1E                     __end_of_Secuence4:
 10113                           	callstack 0
 10114                           
 10115 ;; *************** function _Secuence3 *****************
 10116 ;; Defined at:
 10117 ;;		line 260 in file "distance_finding.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;		None
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;		None
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  2   24[None  ] int 
 10124 ;; Registers used:
 10125 ;;		wreg, status,2, status,0
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10131 ;;      Params:         0       0       0       0       0       0       0       0       0
 10132 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10133 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10134 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10135 ;;Total ram usage:        2 bytes
 10136 ;; Hardware stack levels used:    1
 10137 ;; This function calls:
 10138 ;;		Nothing
 10139 ;; This function is called by:
 10140 ;;		_main
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text36
 10145  002F1E                     __ptext36:
 10146                           	callstack 0
 10147  002F1E                     _Secuence3:
 10148                           	callstack 30
 10149  002F1E                     
 10150                           ;distance_finding.c: 261:     TRISBbits.RB4 = 0;
 10151  002F1E  9893               	bcf	147,4,c	;volatile
 10152                           
 10153                           ;distance_finding.c: 262:     TRISC=0xff;
 10154  002F20  6894               	setf	148,c	;volatile
 10155                           
 10156                           ;distance_finding.c: 263:     RB4=1;
 10157  002F22  8881               	bsf	3969,4,c	;volatile
 10158                           
 10159                           ;distance_finding.c: 265:      if(RC0==1 && d == 0){
 10160  002F24  A082               	btfss	3970,0,c	;volatile
 10161  002F26  EF97  F017         	goto	u6121
 10162  002F2A  EF99  F017         	goto	u6120
 10163  002F2E                     u6121:
 10164  002F2E  EFDE  F017         	goto	l157
 10165  002F32                     u6120:
 10166  002F32  0100               	movlb	0	; () banked
 10167  002F34  51F7               	movf	_d& (0+255),w,b
 10168  002F36  11F8               	iorwf	(_d+1)& (0+255),w,b
 10169  002F38  A4D8               	btfss	status,2,c
 10170  002F3A  EFA1  F017         	goto	u6131
 10171  002F3E  EFA3  F017         	goto	u6130
 10172  002F42                     u6131:
 10173  002F42  EFDE  F017         	goto	l157
 10174  002F46                     u6130:
 10175  002F46                     
 10176                           ; BSR set to: 0
 10177                           ;distance_finding.c: 266:         d=1;
 10178  002F46  0E00               	movlw	0
 10179  002F48  6FF8               	movwf	(_d+1)& (0+255),b
 10180  002F4A  0E01               	movlw	1
 10181  002F4C  6FF7               	movwf	_d& (0+255),b
 10182  002F4E                     
 10183                           ; BSR set to: 0
 10184                           ;distance_finding.c: 267:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10185  002F4E  0E03               	movlw	3
 10186  002F50  6E02               	movwf	(??_Secuence3+1)^0,c
 10187  002F52  0E8A               	movlw	138
 10188  002F54  6E01               	movwf	??_Secuence3^0,c
 10189  002F56  0E56               	movlw	86
 10190  002F58                     u7017:
 10191  002F58  2EE8               	decfsz	wreg,f,c
 10192  002F5A  D7FE               	bra	u7017
 10193  002F5C  2E01               	decfsz	??_Secuence3^0,f,c
 10194  002F5E  D7FC               	bra	u7017
 10195  002F60  2E02               	decfsz	(??_Secuence3+1)^0,f,c
 10196  002F62  D7FA               	bra	u7017
 10197  002F64                     
 10198                           ;distance_finding.c: 268:         if(RC0==0 && d==1){
 10199  002F64  B082               	btfsc	3970,0,c	;volatile
 10200  002F66  EFB7  F017         	goto	u6141
 10201  002F6A  EFB9  F017         	goto	u6140
 10202  002F6E                     u6141:
 10203  002F6E  EFC0  F018         	goto	l5034
 10204  002F72                     u6140:
 10205  002F72  0100               	movlb	0	; () banked
 10206  002F74  05F7               	decf	_d& (0+255),w,b
 10207  002F76  11F8               	iorwf	(_d+1)& (0+255),w,b
 10208  002F78  A4D8               	btfss	status,2,c
 10209  002F7A  EFC1  F017         	goto	u6151
 10210  002F7E  EFC3  F017         	goto	u6150
 10211  002F82                     u6151:
 10212  002F82  EFC0  F018         	goto	l5034
 10213  002F86                     u6150:
 10214  002F86                     
 10215                           ; BSR set to: 0
 10216                           ;distance_finding.c: 269:         f=0;
 10217  002F86  0E00               	movlw	0
 10218  002F88  0101               	movlb	1	; () banked
 10219  002F8A  6F17               	movwf	(_f+1)& (0+255),b
 10220  002F8C  0E00               	movlw	0
 10221  002F8E  6F16               	movwf	_f& (0+255),b
 10222                           
 10223                           ;distance_finding.c: 270:         d=0;
 10224  002F90  0E00               	movlw	0
 10225  002F92  0100               	movlb	0	; () banked
 10226  002F94  6FF8               	movwf	(_d+1)& (0+255),b
 10227  002F96  0E00               	movlw	0
 10228  002F98  6FF7               	movwf	_d& (0+255),b
 10229  002F9A                     
 10230                           ; BSR set to: 0
 10231                           ;distance_finding.c: 271:         c++;
 10232  002F9A  4BF9               	infsnz	_c& (0+255),f,b
 10233  002F9C  2BFA               	incf	(_c+1)& (0+255),f,b
 10234  002F9E                     
 10235                           ; BSR set to: 0
 10236                           ;distance_finding.c: 272:         RB6=0;
 10237  002F9E  9C81               	bcf	3969,6,c	;volatile
 10238  002FA0                     
 10239                           ; BSR set to: 0
 10240                           ;distance_finding.c: 273:         a = 1;
 10241  002FA0  0E00               	movlw	0
 10242  002FA2  6FF4               	movwf	(_a+1)& (0+255),b
 10243  002FA4  0E01               	movlw	1
 10244  002FA6  6FF3               	movwf	_a& (0+255),b
 10245  002FA8                     
 10246                           ; BSR set to: 0
 10247                           ;distance_finding.c: 275:         RB0=0;
 10248  002FA8  9081               	bcf	3969,0,c	;volatile
 10249  002FAA                     
 10250                           ; BSR set to: 0
 10251                           ;distance_finding.c: 277:          _delay((unsigned long)((300)*(20000000/4000000.0)));
 10252  002FAA  0ED6               	movlw	214
 10253  002FAC                     u7027:
 10254  002FAC  D000               	nop2	
 10255  002FAE  D000               	nop2	
 10256  002FB0  2EE8               	decfsz	wreg,f,c
 10257  002FB2  D7FC               	bra	u7027
 10258  002FB4  D000               	nop2	
 10259  002FB6                     
 10260                           ;distance_finding.c: 278:         RC0=0;
 10261  002FB6  9082               	bcf	3970,0,c	;volatile
 10262  002FB8  EFC0  F018         	goto	l5034
 10263  002FBC                     l157:
 10264  002FBC  A282               	btfss	3970,1,c	;volatile
 10265  002FBE  EFE3  F017         	goto	u6161
 10266  002FC2  EFE5  F017         	goto	u6160
 10267  002FC6                     u6161:
 10268  002FC6  EF2A  F018         	goto	l160
 10269  002FCA                     u6160:
 10270  002FCA  0100               	movlb	0	; () banked
 10271  002FCC  51F7               	movf	_d& (0+255),w,b
 10272  002FCE  11F8               	iorwf	(_d+1)& (0+255),w,b
 10273  002FD0  A4D8               	btfss	status,2,c
 10274  002FD2  EFED  F017         	goto	u6171
 10275  002FD6  EFEF  F017         	goto	u6170
 10276  002FDA                     u6171:
 10277  002FDA  EF2A  F018         	goto	l160
 10278  002FDE                     u6170:
 10279  002FDE                     
 10280                           ; BSR set to: 0
 10281                           ;distance_finding.c: 282:         d=1;
 10282  002FDE  0E00               	movlw	0
 10283  002FE0  6FF8               	movwf	(_d+1)& (0+255),b
 10284  002FE2  0E01               	movlw	1
 10285  002FE4  6FF7               	movwf	_d& (0+255),b
 10286  002FE6                     
 10287                           ; BSR set to: 0
 10288                           ;distance_finding.c: 283:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10289  002FE6  0E03               	movlw	3
 10290  002FE8  6E02               	movwf	(??_Secuence3+1)^0,c
 10291  002FEA  0E8A               	movlw	138
 10292  002FEC  6E01               	movwf	??_Secuence3^0,c
 10293  002FEE  0E56               	movlw	86
 10294  002FF0                     u7037:
 10295  002FF0  2EE8               	decfsz	wreg,f,c
 10296  002FF2  D7FE               	bra	u7037
 10297  002FF4  2E01               	decfsz	??_Secuence3^0,f,c
 10298  002FF6  D7FC               	bra	u7037
 10299  002FF8  2E02               	decfsz	(??_Secuence3+1)^0,f,c
 10300  002FFA  D7FA               	bra	u7037
 10301  002FFC                     
 10302                           ;distance_finding.c: 284:         if(RC1==0 && d==1){
 10303  002FFC  B282               	btfsc	3970,1,c	;volatile
 10304  002FFE  EF03  F018         	goto	u6181
 10305  003002  EF05  F018         	goto	u6180
 10306  003006                     u6181:
 10307  003006  EFC0  F018         	goto	l5034
 10308  00300A                     u6180:
 10309  00300A  0100               	movlb	0	; () banked
 10310  00300C  05F7               	decf	_d& (0+255),w,b
 10311  00300E  11F8               	iorwf	(_d+1)& (0+255),w,b
 10312  003010  A4D8               	btfss	status,2,c
 10313  003012  EF0D  F018         	goto	u6191
 10314  003016  EF0F  F018         	goto	u6190
 10315  00301A                     u6191:
 10316  00301A  EFC0  F018         	goto	l5034
 10317  00301E                     u6190:
 10318  00301E                     
 10319                           ; BSR set to: 0
 10320                           ;distance_finding.c: 285:         f=0;
 10321  00301E  0E00               	movlw	0
 10322  003020  0101               	movlb	1	; () banked
 10323  003022  6F17               	movwf	(_f+1)& (0+255),b
 10324  003024  0E00               	movlw	0
 10325  003026  6F16               	movwf	_f& (0+255),b
 10326                           
 10327                           ;distance_finding.c: 286:         d=0;
 10328  003028  0E00               	movlw	0
 10329  00302A  0100               	movlb	0	; () banked
 10330  00302C  6FF8               	movwf	(_d+1)& (0+255),b
 10331  00302E  0E00               	movlw	0
 10332  003030  6FF7               	movwf	_d& (0+255),b
 10333  003032                     
 10334                           ; BSR set to: 0
 10335                           ;distance_finding.c: 287:         c++;
 10336  003032  4BF9               	infsnz	_c& (0+255),f,b
 10337  003034  2BFA               	incf	(_c+1)& (0+255),f,b
 10338  003036                     
 10339                           ; BSR set to: 0
 10340                           ;distance_finding.c: 288:         RB6=1;
 10341  003036  8C81               	bsf	3969,6,c	;volatile
 10342  003038                     
 10343                           ; BSR set to: 0
 10344                           ;distance_finding.c: 289:         a=2;
 10345  003038  0E00               	movlw	0
 10346  00303A  6FF4               	movwf	(_a+1)& (0+255),b
 10347  00303C  0E02               	movlw	2
 10348  00303E  6FF3               	movwf	_a& (0+255),b
 10349  003040                     
 10350                           ; BSR set to: 0
 10351                           ;distance_finding.c: 291:         RB0=1;
 10352  003040  8081               	bsf	3969,0,c	;volatile
 10353  003042                     
 10354                           ; BSR set to: 0
 10355                           ;distance_finding.c: 292:         _delay((unsigned long)((300)*(20000000/4000000.0)));
 10356  003042  0ED6               	movlw	214
 10357  003044                     u7047:
 10358  003044  D000               	nop2	
 10359  003046  D000               	nop2	
 10360  003048  2EE8               	decfsz	wreg,f,c
 10361  00304A  D7FC               	bra	u7047
 10362  00304C  D000               	nop2	
 10363  00304E                     
 10364                           ;distance_finding.c: 293:         RC1=0;
 10365  00304E  9282               	bcf	3970,1,c	;volatile
 10366  003050  EFC0  F018         	goto	l5034
 10367  003054                     l160:
 10368  003054  A482               	btfss	3970,2,c	;volatile
 10369  003056  EF2F  F018         	goto	u6201
 10370  00305A  EF31  F018         	goto	u6200
 10371  00305E                     u6201:
 10372  00305E  EF75  F018         	goto	l163
 10373  003062                     u6200:
 10374  003062  0100               	movlb	0	; () banked
 10375  003064  51F7               	movf	_d& (0+255),w,b
 10376  003066  11F8               	iorwf	(_d+1)& (0+255),w,b
 10377  003068  A4D8               	btfss	status,2,c
 10378  00306A  EF39  F018         	goto	u6211
 10379  00306E  EF3B  F018         	goto	u6210
 10380  003072                     u6211:
 10381  003072  EF75  F018         	goto	l163
 10382  003076                     u6210:
 10383  003076                     
 10384                           ; BSR set to: 0
 10385                           ;distance_finding.c: 298:         d=1;
 10386  003076  0E00               	movlw	0
 10387  003078  6FF8               	movwf	(_d+1)& (0+255),b
 10388  00307A  0E01               	movlw	1
 10389  00307C  6FF7               	movwf	_d& (0+255),b
 10390  00307E                     
 10391                           ; BSR set to: 0
 10392                           ;distance_finding.c: 299:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10393  00307E  0E03               	movlw	3
 10394  003080  6E02               	movwf	(??_Secuence3+1)^0,c
 10395  003082  0E8A               	movlw	138
 10396  003084  6E01               	movwf	??_Secuence3^0,c
 10397  003086  0E56               	movlw	86
 10398  003088                     u7057:
 10399  003088  2EE8               	decfsz	wreg,f,c
 10400  00308A  D7FE               	bra	u7057
 10401  00308C  2E01               	decfsz	??_Secuence3^0,f,c
 10402  00308E  D7FC               	bra	u7057
 10403  003090  2E02               	decfsz	(??_Secuence3+1)^0,f,c
 10404  003092  D7FA               	bra	u7057
 10405  003094                     
 10406                           ;distance_finding.c: 300:         if(RC2==0 && d==1){
 10407  003094  B482               	btfsc	3970,2,c	;volatile
 10408  003096  EF4F  F018         	goto	u6221
 10409  00309A  EF51  F018         	goto	u6220
 10410  00309E                     u6221:
 10411  00309E  EFC0  F018         	goto	l5034
 10412  0030A2                     u6220:
 10413  0030A2  0100               	movlb	0	; () banked
 10414  0030A4  05F7               	decf	_d& (0+255),w,b
 10415  0030A6  11F8               	iorwf	(_d+1)& (0+255),w,b
 10416  0030A8  A4D8               	btfss	status,2,c
 10417  0030AA  EF59  F018         	goto	u6231
 10418  0030AE  EF5B  F018         	goto	u6230
 10419  0030B2                     u6231:
 10420  0030B2  EFC0  F018         	goto	l5034
 10421  0030B6                     u6230:
 10422  0030B6                     
 10423                           ; BSR set to: 0
 10424                           ;distance_finding.c: 301:         f=0;
 10425  0030B6  0E00               	movlw	0
 10426  0030B8  0101               	movlb	1	; () banked
 10427  0030BA  6F17               	movwf	(_f+1)& (0+255),b
 10428  0030BC  0E00               	movlw	0
 10429  0030BE  6F16               	movwf	_f& (0+255),b
 10430                           
 10431                           ;distance_finding.c: 302:         d=0;
 10432  0030C0  0E00               	movlw	0
 10433  0030C2  0100               	movlb	0	; () banked
 10434  0030C4  6FF8               	movwf	(_d+1)& (0+255),b
 10435  0030C6  0E00               	movlw	0
 10436  0030C8  6FF7               	movwf	_d& (0+255),b
 10437  0030CA                     
 10438                           ; BSR set to: 0
 10439                           ;distance_finding.c: 303:         c++;
 10440  0030CA  4BF9               	infsnz	_c& (0+255),f,b
 10441  0030CC  2BFA               	incf	(_c+1)& (0+255),f,b
 10442  0030CE                     
 10443                           ; BSR set to: 0
 10444                           ;distance_finding.c: 304:         RB4=0;
 10445  0030CE  9881               	bcf	3969,4,c	;volatile
 10446  0030D0                     
 10447                           ; BSR set to: 0
 10448                           ;distance_finding.c: 305:         a= 3;
 10449  0030D0  0E00               	movlw	0
 10450  0030D2  6FF4               	movwf	(_a+1)& (0+255),b
 10451  0030D4  0E03               	movlw	3
 10452  0030D6  6FF3               	movwf	_a& (0+255),b
 10453  0030D8                     
 10454                           ; BSR set to: 0
 10455                           ;distance_finding.c: 306:          _delay((unsigned long)((300)*(20000000/4000000.0)));
 10456  0030D8  0ED6               	movlw	214
 10457  0030DA                     u7067:
 10458  0030DA  D000               	nop2	
 10459  0030DC  D000               	nop2	
 10460  0030DE  2EE8               	decfsz	wreg,f,c
 10461  0030E0  D7FC               	bra	u7067
 10462  0030E2  D000               	nop2	
 10463  0030E4                     
 10464                           ;distance_finding.c: 307:          RC2=0;
 10465  0030E4  9482               	bcf	3970,2,c	;volatile
 10466  0030E6  EFC0  F018         	goto	l5034
 10467  0030EA                     l163:
 10468  0030EA  A882               	btfss	3970,4,c	;volatile
 10469  0030EC  EF7A  F018         	goto	u6241
 10470  0030F0  EF7C  F018         	goto	u6240
 10471  0030F4                     u6241:
 10472  0030F4  EFBC  F018         	goto	l166
 10473  0030F8                     u6240:
 10474  0030F8  0100               	movlb	0	; () banked
 10475  0030FA  05F7               	decf	_d& (0+255),w,b
 10476  0030FC  11F8               	iorwf	(_d+1)& (0+255),w,b
 10477  0030FE  A4D8               	btfss	status,2,c
 10478  003100  EF84  F018         	goto	u6251
 10479  003104  EF86  F018         	goto	u6250
 10480  003108                     u6251:
 10481  003108  EFBC  F018         	goto	l166
 10482  00310C                     u6250:
 10483  00310C                     
 10484                           ; BSR set to: 0
 10485                           ;distance_finding.c: 312:         d=1;
 10486  00310C  0E00               	movlw	0
 10487  00310E  6FF8               	movwf	(_d+1)& (0+255),b
 10488  003110  0E01               	movlw	1
 10489  003112  6FF7               	movwf	_d& (0+255),b
 10490  003114                     
 10491                           ; BSR set to: 0
 10492                           ;distance_finding.c: 313:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10493  003114  0E03               	movlw	3
 10494  003116  6E02               	movwf	(??_Secuence3+1)^0,c
 10495  003118  0E8A               	movlw	138
 10496  00311A  6E01               	movwf	??_Secuence3^0,c
 10497  00311C  0E56               	movlw	86
 10498  00311E                     u7077:
 10499  00311E  2EE8               	decfsz	wreg,f,c
 10500  003120  D7FE               	bra	u7077
 10501  003122  2E01               	decfsz	??_Secuence3^0,f,c
 10502  003124  D7FC               	bra	u7077
 10503  003126  2E02               	decfsz	(??_Secuence3+1)^0,f,c
 10504  003128  D7FA               	bra	u7077
 10505  00312A                     
 10506                           ;distance_finding.c: 314:         if(RC1==0 && d==1){
 10507  00312A  B282               	btfsc	3970,1,c	;volatile
 10508  00312C  EF9A  F018         	goto	u6261
 10509  003130  EF9C  F018         	goto	u6260
 10510  003134                     u6261:
 10511  003134  EFC0  F018         	goto	l5034
 10512  003138                     u6260:
 10513  003138  0100               	movlb	0	; () banked
 10514  00313A  05F7               	decf	_d& (0+255),w,b
 10515  00313C  11F8               	iorwf	(_d+1)& (0+255),w,b
 10516  00313E  A4D8               	btfss	status,2,c
 10517  003140  EFA4  F018         	goto	u6271
 10518  003144  EFA6  F018         	goto	u6270
 10519  003148                     u6271:
 10520  003148  EFC0  F018         	goto	l5034
 10521  00314C                     u6270:
 10522  00314C                     
 10523                           ; BSR set to: 0
 10524                           ;distance_finding.c: 315:           f=0;
 10525  00314C  0E00               	movlw	0
 10526  00314E  0101               	movlb	1	; () banked
 10527  003150  6F17               	movwf	(_f+1)& (0+255),b
 10528  003152  0E00               	movlw	0
 10529  003154  6F16               	movwf	_f& (0+255),b
 10530                           
 10531                           ;distance_finding.c: 316:           d=0;
 10532  003156  0E00               	movlw	0
 10533  003158  0100               	movlb	0	; () banked
 10534  00315A  6FF8               	movwf	(_d+1)& (0+255),b
 10535  00315C  0E00               	movlw	0
 10536  00315E  6FF7               	movwf	_d& (0+255),b
 10537  003160                     
 10538                           ; BSR set to: 0
 10539                           ;distance_finding.c: 317:           c++;
 10540  003160  4BF9               	infsnz	_c& (0+255),f,b
 10541  003162  2BFA               	incf	(_c+1)& (0+255),f,b
 10542  003164                     
 10543                           ; BSR set to: 0
 10544                           ;distance_finding.c: 318:           RB4=0;
 10545  003164  9881               	bcf	3969,4,c	;volatile
 10546  003166                     
 10547                           ; BSR set to: 0
 10548                           ;distance_finding.c: 320:           _delay((unsigned long)((300)*(20000000/4000000.0)));
 10549  003166  0ED6               	movlw	214
 10550  003168                     u7087:
 10551  003168  D000               	nop2	
 10552  00316A  D000               	nop2	
 10553  00316C  2EE8               	decfsz	wreg,f,c
 10554  00316E  D7FC               	bra	u7087
 10555  003170  D000               	nop2	
 10556  003172                     
 10557                           ;distance_finding.c: 321:           RC4=0;
 10558  003172  9882               	bcf	3970,4,c	;volatile
 10559  003174  EFC0  F018         	goto	l5034
 10560  003178                     l166:
 10561                           
 10562                           ;distance_finding.c: 325:         RB4=0;
 10563  003178  9881               	bcf	3969,4,c	;volatile
 10564                           
 10565                           ;distance_finding.c: 326:         TRISBbits.RB4 = 1;
 10566  00317A  8893               	bsf	147,4,c	;volatile
 10567  00317C                     
 10568                           ;distance_finding.c: 327:           TRISC=0x00;
 10569  00317C  0E00               	movlw	0
 10570  00317E  6E94               	movwf	148,c	;volatile
 10571  003180                     l5034:
 10572                           
 10573                           ;distance_finding.c: 330:     RB4=0;
 10574  003180  9881               	bcf	3969,4,c	;volatile
 10575  003182                     
 10576                           ;distance_finding.c: 331:     TRISBbits.RB4 = 1;
 10577  003182  8893               	bsf	147,4,c	;volatile
 10578                           
 10579                           ;distance_finding.c: 332:     TRISC=0x00;
 10580  003184  0E00               	movlw	0
 10581  003186  6E94               	movwf	148,c	;volatile
 10582                           
 10583                           ;distance_finding.c: 333:     d=0;
 10584  003188  0E00               	movlw	0
 10585  00318A  0100               	movlb	0	; () banked
 10586  00318C  6FF8               	movwf	(_d+1)& (0+255),b
 10587  00318E  0E00               	movlw	0
 10588  003190  6FF7               	movwf	_d& (0+255),b
 10589  003192                     
 10590                           ; BSR set to: 0
 10591  003192  0012               	return		;funcret
 10592  003194                     __end_of_Secuence3:
 10593                           	callstack 0
 10594                           
 10595 ;; *************** function _Secuence2 *****************
 10596 ;; Defined at:
 10597 ;;		line 191 in file "distance_finding.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;		None
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;		None
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  2   36[None  ] int 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10611 ;;      Params:         0       0       0       0       0       0       0       0       0
 10612 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10613 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10614 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10615 ;;Total ram usage:        2 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    3
 10618 ;; This function calls:
 10619 ;;		_LCD_Clear
 10620 ;; This function is called by:
 10621 ;;		_main
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text37
 10626  003194                     __ptext37:
 10627                           	callstack 0
 10628  003194                     _Secuence2:
 10629                           	callstack 27
 10630  003194                     
 10631                           ;distance_finding.c: 192:     TRISBbits.RB2 = 0;
 10632  003194  9493               	bcf	147,2,c	;volatile
 10633                           
 10634                           ;distance_finding.c: 193:     TRISC=0xff;
 10635  003196  6894               	setf	148,c	;volatile
 10636                           
 10637                           ;distance_finding.c: 194:     RB2=1;
 10638  003198  8481               	bsf	3969,2,c	;volatile
 10639                           
 10640                           ;distance_finding.c: 195:    if(RC0==1 && d == 0){
 10641  00319A  A082               	btfss	3970,0,c	;volatile
 10642  00319C  EFD2  F018         	goto	u6441
 10643  0031A0  EFD4  F018         	goto	u6440
 10644  0031A4                     u6441:
 10645  0031A4  EF12  F019         	goto	l142
 10646  0031A8                     u6440:
 10647  0031A8  0100               	movlb	0	; () banked
 10648  0031AA  51F7               	movf	_d& (0+255),w,b
 10649  0031AC  11F8               	iorwf	(_d+1)& (0+255),w,b
 10650  0031AE  A4D8               	btfss	status,2,c
 10651  0031B0  EFDC  F018         	goto	u6451
 10652  0031B4  EFDE  F018         	goto	u6450
 10653  0031B8                     u6451:
 10654  0031B8  EF12  F019         	goto	l142
 10655  0031BC                     u6450:
 10656  0031BC                     
 10657                           ; BSR set to: 0
 10658                           ;distance_finding.c: 196:         d=1;
 10659  0031BC  0E00               	movlw	0
 10660  0031BE  6FF8               	movwf	(_d+1)& (0+255),b
 10661  0031C0  0E01               	movlw	1
 10662  0031C2  6FF7               	movwf	_d& (0+255),b
 10663  0031C4                     
 10664                           ; BSR set to: 0
 10665                           ;distance_finding.c: 197:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10666  0031C4  0E03               	movlw	3
 10667  0031C6  6E0A               	movwf	(??_Secuence2+1)^0,c
 10668  0031C8  0E8A               	movlw	138
 10669  0031CA  6E09               	movwf	??_Secuence2^0,c
 10670  0031CC  0E56               	movlw	86
 10671  0031CE                     u7097:
 10672  0031CE  2EE8               	decfsz	wreg,f,c
 10673  0031D0  D7FE               	bra	u7097
 10674  0031D2  2E09               	decfsz	??_Secuence2^0,f,c
 10675  0031D4  D7FC               	bra	u7097
 10676  0031D6  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10677  0031D8  D7FA               	bra	u7097
 10678  0031DA                     
 10679                           ;distance_finding.c: 198:         if(RC0==0 && d==1){
 10680  0031DA  B082               	btfsc	3970,0,c	;volatile
 10681  0031DC  EFF2  F018         	goto	u6461
 10682  0031E0  EFF4  F018         	goto	u6460
 10683  0031E4                     u6461:
 10684  0031E4  EFF1  F019         	goto	l5222
 10685  0031E8                     u6460:
 10686  0031E8  0100               	movlb	0	; () banked
 10687  0031EA  05F7               	decf	_d& (0+255),w,b
 10688  0031EC  11F8               	iorwf	(_d+1)& (0+255),w,b
 10689  0031EE  A4D8               	btfss	status,2,c
 10690  0031F0  EFFC  F018         	goto	u6471
 10691  0031F4  EFFE  F018         	goto	u6470
 10692  0031F8                     u6471:
 10693  0031F8  EFF1  F019         	goto	l5222
 10694  0031FC                     u6470:
 10695  0031FC                     
 10696                           ; BSR set to: 0
 10697                           ;distance_finding.c: 199:         f=0;
 10698  0031FC  0E00               	movlw	0
 10699  0031FE  0101               	movlb	1	; () banked
 10700  003200  6F17               	movwf	(_f+1)& (0+255),b
 10701  003202  0E00               	movlw	0
 10702  003204  6F16               	movwf	_f& (0+255),b
 10703                           
 10704                           ;distance_finding.c: 200:         d=0;
 10705  003206  0E00               	movlw	0
 10706  003208  0100               	movlb	0	; () banked
 10707  00320A  6FF8               	movwf	(_d+1)& (0+255),b
 10708  00320C  0E00               	movlw	0
 10709  00320E  6FF7               	movwf	_d& (0+255),b
 10710  003210                     
 10711                           ; BSR set to: 0
 10712                           ;distance_finding.c: 201:         c++;
 10713  003210  4BF9               	infsnz	_c& (0+255),f,b
 10714  003212  2BFA               	incf	(_c+1)& (0+255),f,b
 10715  003214                     
 10716                           ; BSR set to: 0
 10717                           ;distance_finding.c: 202:         RB1=0;
 10718  003214  9281               	bcf	3969,1,c	;volatile
 10719  003216                     
 10720                           ; BSR set to: 0
 10721                           ;distance_finding.c: 203:         a = 4;
 10722  003216  0E00               	movlw	0
 10723  003218  6FF4               	movwf	(_a+1)& (0+255),b
 10724  00321A  0E04               	movlw	4
 10725  00321C  6FF3               	movwf	_a& (0+255),b
 10726  00321E                     
 10727                           ; BSR set to: 0
 10728                           ;distance_finding.c: 205:         RC0=0;
 10729  00321E  9082               	bcf	3970,0,c	;volatile
 10730  003220  EFF1  F019         	goto	l5222
 10731  003224                     l142:
 10732  003224  A282               	btfss	3970,1,c	;volatile
 10733  003226  EF17  F019         	goto	u6481
 10734  00322A  EF19  F019         	goto	u6480
 10735  00322E                     u6481:
 10736  00322E  EF57  F019         	goto	l145
 10737  003232                     u6480:
 10738  003232  0100               	movlb	0	; () banked
 10739  003234  51F7               	movf	_d& (0+255),w,b
 10740  003236  11F8               	iorwf	(_d+1)& (0+255),w,b
 10741  003238  A4D8               	btfss	status,2,c
 10742  00323A  EF21  F019         	goto	u6491
 10743  00323E  EF23  F019         	goto	u6490
 10744  003242                     u6491:
 10745  003242  EF57  F019         	goto	l145
 10746  003246                     u6490:
 10747  003246                     
 10748                           ; BSR set to: 0
 10749                           ;distance_finding.c: 210:         d=1;
 10750  003246  0E00               	movlw	0
 10751  003248  6FF8               	movwf	(_d+1)& (0+255),b
 10752  00324A  0E01               	movlw	1
 10753  00324C  6FF7               	movwf	_d& (0+255),b
 10754  00324E                     
 10755                           ; BSR set to: 0
 10756                           ;distance_finding.c: 211:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10757  00324E  0E03               	movlw	3
 10758  003250  6E0A               	movwf	(??_Secuence2+1)^0,c
 10759  003252  0E8A               	movlw	138
 10760  003254  6E09               	movwf	??_Secuence2^0,c
 10761  003256  0E56               	movlw	86
 10762  003258                     u7107:
 10763  003258  2EE8               	decfsz	wreg,f,c
 10764  00325A  D7FE               	bra	u7107
 10765  00325C  2E09               	decfsz	??_Secuence2^0,f,c
 10766  00325E  D7FC               	bra	u7107
 10767  003260  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10768  003262  D7FA               	bra	u7107
 10769  003264                     
 10770                           ;distance_finding.c: 212:         if(RC1==0 && d==1){
 10771  003264  B282               	btfsc	3970,1,c	;volatile
 10772  003266  EF37  F019         	goto	u6501
 10773  00326A  EF39  F019         	goto	u6500
 10774  00326E                     u6501:
 10775  00326E  EFF1  F019         	goto	l5222
 10776  003272                     u6500:
 10777  003272  0100               	movlb	0	; () banked
 10778  003274  05F7               	decf	_d& (0+255),w,b
 10779  003276  11F8               	iorwf	(_d+1)& (0+255),w,b
 10780  003278  A4D8               	btfss	status,2,c
 10781  00327A  EF41  F019         	goto	u6511
 10782  00327E  EF43  F019         	goto	u6510
 10783  003282                     u6511:
 10784  003282  EFF1  F019         	goto	l5222
 10785  003286                     u6510:
 10786  003286                     
 10787                           ; BSR set to: 0
 10788                           ;distance_finding.c: 213:         f=0;
 10789  003286  0E00               	movlw	0
 10790  003288  0101               	movlb	1	; () banked
 10791  00328A  6F17               	movwf	(_f+1)& (0+255),b
 10792  00328C  0E00               	movlw	0
 10793  00328E  6F16               	movwf	_f& (0+255),b
 10794                           
 10795                           ;distance_finding.c: 214:         d=0;
 10796  003290  0E00               	movlw	0
 10797  003292  0100               	movlb	0	; () banked
 10798  003294  6FF8               	movwf	(_d+1)& (0+255),b
 10799  003296  0E00               	movlw	0
 10800  003298  6FF7               	movwf	_d& (0+255),b
 10801  00329A                     
 10802                           ; BSR set to: 0
 10803                           ;distance_finding.c: 215:         c++;
 10804  00329A  4BF9               	infsnz	_c& (0+255),f,b
 10805  00329C  2BFA               	incf	(_c+1)& (0+255),f,b
 10806  00329E                     
 10807                           ; BSR set to: 0
 10808                           ;distance_finding.c: 216:         RB1=0;
 10809  00329E  9281               	bcf	3969,1,c	;volatile
 10810  0032A0                     
 10811                           ; BSR set to: 0
 10812                           ;distance_finding.c: 217:         a=5;
 10813  0032A0  0E00               	movlw	0
 10814  0032A2  6FF4               	movwf	(_a+1)& (0+255),b
 10815  0032A4  0E05               	movlw	5
 10816  0032A6  6FF3               	movwf	_a& (0+255),b
 10817  0032A8                     
 10818                           ; BSR set to: 0
 10819                           ;distance_finding.c: 218:         RC1=0;
 10820  0032A8  9282               	bcf	3970,1,c	;volatile
 10821  0032AA  EFF1  F019         	goto	l5222
 10822  0032AE                     l145:
 10823  0032AE  A482               	btfss	3970,2,c	;volatile
 10824  0032B0  EF5C  F019         	goto	u6521
 10825  0032B4  EF5E  F019         	goto	u6520
 10826  0032B8                     u6521:
 10827  0032B8  EF9C  F019         	goto	l148
 10828  0032BC                     u6520:
 10829  0032BC  0100               	movlb	0	; () banked
 10830  0032BE  51F7               	movf	_d& (0+255),w,b
 10831  0032C0  11F8               	iorwf	(_d+1)& (0+255),w,b
 10832  0032C2  A4D8               	btfss	status,2,c
 10833  0032C4  EF66  F019         	goto	u6531
 10834  0032C8  EF68  F019         	goto	u6530
 10835  0032CC                     u6531:
 10836  0032CC  EF9C  F019         	goto	l148
 10837  0032D0                     u6530:
 10838  0032D0                     
 10839                           ; BSR set to: 0
 10840                           ;distance_finding.c: 222:         d=1;
 10841  0032D0  0E00               	movlw	0
 10842  0032D2  6FF8               	movwf	(_d+1)& (0+255),b
 10843  0032D4  0E01               	movlw	1
 10844  0032D6  6FF7               	movwf	_d& (0+255),b
 10845  0032D8                     
 10846                           ; BSR set to: 0
 10847                           ;distance_finding.c: 224:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10848  0032D8  0E03               	movlw	3
 10849  0032DA  6E0A               	movwf	(??_Secuence2+1)^0,c
 10850  0032DC  0E8A               	movlw	138
 10851  0032DE  6E09               	movwf	??_Secuence2^0,c
 10852  0032E0  0E56               	movlw	86
 10853  0032E2                     u7117:
 10854  0032E2  2EE8               	decfsz	wreg,f,c
 10855  0032E4  D7FE               	bra	u7117
 10856  0032E6  2E09               	decfsz	??_Secuence2^0,f,c
 10857  0032E8  D7FC               	bra	u7117
 10858  0032EA  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10859  0032EC  D7FA               	bra	u7117
 10860  0032EE                     
 10861                           ;distance_finding.c: 225:         if(RC2==0 && d==1){
 10862  0032EE  B482               	btfsc	3970,2,c	;volatile
 10863  0032F0  EF7C  F019         	goto	u6541
 10864  0032F4  EF7E  F019         	goto	u6540
 10865  0032F8                     u6541:
 10866  0032F8  EFF1  F019         	goto	l5222
 10867  0032FC                     u6540:
 10868  0032FC  0100               	movlb	0	; () banked
 10869  0032FE  05F7               	decf	_d& (0+255),w,b
 10870  003300  11F8               	iorwf	(_d+1)& (0+255),w,b
 10871  003302  A4D8               	btfss	status,2,c
 10872  003304  EF86  F019         	goto	u6551
 10873  003308  EF88  F019         	goto	u6550
 10874  00330C                     u6551:
 10875  00330C  EFF1  F019         	goto	l5222
 10876  003310                     u6550:
 10877  003310                     
 10878                           ; BSR set to: 0
 10879                           ;distance_finding.c: 226:         f=0;
 10880  003310  0E00               	movlw	0
 10881  003312  0101               	movlb	1	; () banked
 10882  003314  6F17               	movwf	(_f+1)& (0+255),b
 10883  003316  0E00               	movlw	0
 10884  003318  6F16               	movwf	_f& (0+255),b
 10885  00331A                     
 10886                           ; BSR set to: 1
 10887                           ;distance_finding.c: 227:         c++;
 10888  00331A  0100               	movlb	0	; () banked
 10889  00331C  4BF9               	infsnz	_c& (0+255),f,b
 10890  00331E  2BFA               	incf	(_c+1)& (0+255),f,b
 10891  003320                     
 10892                           ; BSR set to: 0
 10893                           ;distance_finding.c: 228:         d=0;
 10894  003320  0E00               	movlw	0
 10895  003322  6FF8               	movwf	(_d+1)& (0+255),b
 10896  003324  0E00               	movlw	0
 10897  003326  6FF7               	movwf	_d& (0+255),b
 10898  003328                     
 10899                           ; BSR set to: 0
 10900                           ;distance_finding.c: 229:         RB1=0;
 10901  003328  9281               	bcf	3969,1,c	;volatile
 10902  00332A                     
 10903                           ; BSR set to: 0
 10904                           ;distance_finding.c: 230:         a= 6;
 10905  00332A  0E00               	movlw	0
 10906  00332C  6FF4               	movwf	(_a+1)& (0+255),b
 10907  00332E  0E06               	movlw	6
 10908  003330  6FF3               	movwf	_a& (0+255),b
 10909  003332                     
 10910                           ; BSR set to: 0
 10911                           ;distance_finding.c: 231:          RC2=0;
 10912  003332  9482               	bcf	3970,2,c	;volatile
 10913  003334  EFF1  F019         	goto	l5222
 10914  003338                     l148:
 10915  003338  A882               	btfss	3970,4,c	;volatile
 10916  00333A  EFA1  F019         	goto	u6561
 10917  00333E  EFA3  F019         	goto	u6560
 10918  003342                     u6561:
 10919  003342  EFE8  F019         	goto	l151
 10920  003346                     u6560:
 10921  003346  0100               	movlb	0	; () banked
 10922  003348  51F7               	movf	_d& (0+255),w,b
 10923  00334A  11F8               	iorwf	(_d+1)& (0+255),w,b
 10924  00334C  A4D8               	btfss	status,2,c
 10925  00334E  EFAB  F019         	goto	u6571
 10926  003352  EFAD  F019         	goto	u6570
 10927  003356                     u6571:
 10928  003356  EFE8  F019         	goto	l151
 10929  00335A                     u6570:
 10930  00335A                     
 10931                           ; BSR set to: 0
 10932                           ;distance_finding.c: 236:         d=1;
 10933  00335A  0E00               	movlw	0
 10934  00335C  6FF8               	movwf	(_d+1)& (0+255),b
 10935  00335E  0E01               	movlw	1
 10936  003360  6FF7               	movwf	_d& (0+255),b
 10937  003362                     
 10938                           ; BSR set to: 0
 10939                           ;distance_finding.c: 237:         c++;
 10940  003362  4BF9               	infsnz	_c& (0+255),f,b
 10941  003364  2BFA               	incf	(_c+1)& (0+255),f,b
 10942  003366                     
 10943                           ; BSR set to: 0
 10944                           ;distance_finding.c: 238:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10945  003366  0E03               	movlw	3
 10946  003368  6E0A               	movwf	(??_Secuence2+1)^0,c
 10947  00336A  0E8A               	movlw	138
 10948  00336C  6E09               	movwf	??_Secuence2^0,c
 10949  00336E  0E56               	movlw	86
 10950  003370                     u7127:
 10951  003370  2EE8               	decfsz	wreg,f,c
 10952  003372  D7FE               	bra	u7127
 10953  003374  2E09               	decfsz	??_Secuence2^0,f,c
 10954  003376  D7FC               	bra	u7127
 10955  003378  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10956  00337A  D7FA               	bra	u7127
 10957  00337C                     
 10958                           ;distance_finding.c: 239:         if(RC1==0 && d==1){
 10959  00337C  B282               	btfsc	3970,1,c	;volatile
 10960  00337E  EFC3  F019         	goto	u6581
 10961  003382  EFC5  F019         	goto	u6580
 10962  003386                     u6581:
 10963  003386  EFF1  F019         	goto	l5222
 10964  00338A                     u6580:
 10965  00338A  0100               	movlb	0	; () banked
 10966  00338C  05F7               	decf	_d& (0+255),w,b
 10967  00338E  11F8               	iorwf	(_d+1)& (0+255),w,b
 10968  003390  A4D8               	btfss	status,2,c
 10969  003392  EFCD  F019         	goto	u6591
 10970  003396  EFCF  F019         	goto	u6590
 10971  00339A                     u6591:
 10972  00339A  EFF1  F019         	goto	l5222
 10973  00339E                     u6590:
 10974  00339E                     
 10975                           ; BSR set to: 0
 10976                           ;distance_finding.c: 240:           f=0;
 10977  00339E  0E00               	movlw	0
 10978  0033A0  0101               	movlb	1	; () banked
 10979  0033A2  6F17               	movwf	(_f+1)& (0+255),b
 10980  0033A4  0E00               	movlw	0
 10981  0033A6  6F16               	movwf	_f& (0+255),b
 10982                           
 10983                           ;distance_finding.c: 241:           c=1;
 10984  0033A8  0E00               	movlw	0
 10985  0033AA  0100               	movlb	0	; () banked
 10986  0033AC  6FFA               	movwf	(_c+1)& (0+255),b
 10987  0033AE  0E01               	movlw	1
 10988  0033B0  6FF9               	movwf	_c& (0+255),b
 10989  0033B2                     
 10990                           ; BSR set to: 0
 10991                           ;distance_finding.c: 242:           LCD_Clear();
 10992  0033B2  ECD7  F025         	call	_LCD_Clear	;wreg free
 10993  0033B6                     
 10994                           ;distance_finding.c: 243:           d=0;
 10995  0033B6  0E00               	movlw	0
 10996  0033B8  0100               	movlb	0	; () banked
 10997  0033BA  6FF8               	movwf	(_d+1)& (0+255),b
 10998  0033BC  0E00               	movlw	0
 10999  0033BE  6FF7               	movwf	_d& (0+255),b
 11000  0033C0                     
 11001                           ; BSR set to: 0
 11002                           ;distance_finding.c: 244:           RB1=0;
 11003  0033C0  9281               	bcf	3969,1,c	;volatile
 11004  0033C2                     
 11005                           ; BSR set to: 0
 11006                           ;distance_finding.c: 245:           a = 1000;
 11007  0033C2  0E03               	movlw	3
 11008  0033C4  6FF4               	movwf	(_a+1)& (0+255),b
 11009  0033C6  0EE8               	movlw	232
 11010  0033C8  6FF3               	movwf	_a& (0+255),b
 11011  0033CA                     
 11012                           ; BSR set to: 0
 11013                           ;distance_finding.c: 246:           RC4=0;
 11014  0033CA  9882               	bcf	3970,4,c	;volatile
 11015  0033CC  EFF1  F019         	goto	l5222
 11016  0033D0                     l151:
 11017                           
 11018                           ;distance_finding.c: 251:         RB2=0;TRISBbits.RB2 = 1;
 11019  0033D0  9481               	bcf	3969,2,c	;volatile
 11020  0033D2  8493               	bsf	147,2,c	;volatile
 11021  0033D4                     
 11022                           ;distance_finding.c: 252:           TRISC=0x00;
 11023  0033D4  0E00               	movlw	0
 11024  0033D6  6E94               	movwf	148,c	;volatile
 11025                           
 11026                           ;distance_finding.c: 253:           d=0;
 11027  0033D8  0E00               	movlw	0
 11028  0033DA  0100               	movlb	0	; () banked
 11029  0033DC  6FF8               	movwf	(_d+1)& (0+255),b
 11030  0033DE  0E00               	movlw	0
 11031  0033E0  6FF7               	movwf	_d& (0+255),b
 11032  0033E2                     l5222:
 11033                           
 11034                           ;distance_finding.c: 256:     RB2=0;TRISBbits.RB2 = 1;
 11035  0033E2  9481               	bcf	3969,2,c	;volatile
 11036  0033E4  8493               	bsf	147,2,c	;volatile
 11037                           
 11038                           ;distance_finding.c: 257:     TRISC=0x00;
 11039  0033E6  0E00               	movlw	0
 11040  0033E8  6E94               	movwf	148,c	;volatile
 11041  0033EA  0012               	return		;funcret
 11042  0033EC                     __end_of_Secuence2:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function _LCD_Clear *****************
 11046 ;; Defined at:
 11047 ;;		line 76 in file "LCD_16x2_4bit_mode.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;		None
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;		None
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  1    wreg      void 
 11054 ;; Registers used:
 11055 ;;		wreg, status,2, status,0, cstack
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11061 ;;      Params:         0       0       0       0       0       0       0       0       0
 11062 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11063 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11064 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11065 ;;Total ram usage:        0 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:    2
 11068 ;; This function calls:
 11069 ;;		_LCD_Command
 11070 ;; This function is called by:
 11071 ;;		_main
 11072 ;;		_Secuence2
 11073 ;;		_Secuence4
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text38
 11078  004BAE                     __ptext38:
 11079                           	callstack 0
 11080  004BAE                     _LCD_Clear:
 11081                           	callstack 27
 11082  004BAE                     
 11083                           ;LCD_16x2_4bit_mode.c: 78:     LCD_Command(0x01);
 11084  004BAE  0E01               	movlw	1
 11085  004BB0  EC6D  F024         	call	_LCD_Command
 11086  004BB4  0012               	return		;funcret
 11087  004BB6                     __end_of_LCD_Clear:
 11088                           	callstack 0
 11089                           
 11090 ;; *************** function _Secuence1 *****************
 11091 ;; Defined at:
 11092 ;;		line 124 in file "distance_finding.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;		None
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  2   34[None  ] int 
 11099 ;; Registers used:
 11100 ;;		wreg, status,2, status,0
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11106 ;;      Params:         0       0       0       0       0       0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11108 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11109 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11110 ;;Total ram usage:        2 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; This function calls:
 11113 ;;		Nothing
 11114 ;; This function is called by:
 11115 ;;		_main
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text39
 11120  0033EC                     __ptext39:
 11121                           	callstack 0
 11122  0033EC                     _Secuence1:
 11123                           	callstack 30
 11124  0033EC                     
 11125                           ;distance_finding.c: 125:     TRISBbits.RB1 = 0;
 11126  0033EC  9293               	bcf	147,1,c	;volatile
 11127                           
 11128                           ;distance_finding.c: 126:     TRISC=0xff;
 11129  0033EE  6894               	setf	148,c	;volatile
 11130                           
 11131                           ;distance_finding.c: 128:     RB1=1;
 11132  0033F0  8281               	bsf	3969,1,c	;volatile
 11133                           
 11134                           ;distance_finding.c: 129:     if(RC0==1 && d == 0){
 11135  0033F2  A082               	btfss	3970,0,c	;volatile
 11136  0033F4  EFFE  F019         	goto	u6281
 11137  0033F8  EF00  F01A         	goto	u6280
 11138  0033FC                     u6281:
 11139  0033FC  EF3D  F01A         	goto	l127
 11140  003400                     u6280:
 11141  003400  0100               	movlb	0	; () banked
 11142  003402  51F7               	movf	_d& (0+255),w,b
 11143  003404  11F8               	iorwf	(_d+1)& (0+255),w,b
 11144  003406  A4D8               	btfss	status,2,c
 11145  003408  EF08  F01A         	goto	u6291
 11146  00340C  EF0A  F01A         	goto	u6290
 11147  003410                     u6291:
 11148  003410  EF3D  F01A         	goto	l127
 11149  003414                     u6290:
 11150  003414                     
 11151                           ; BSR set to: 0
 11152                           ;distance_finding.c: 130:         d=1;
 11153  003414  0E00               	movlw	0
 11154  003416  6FF8               	movwf	(_d+1)& (0+255),b
 11155  003418  0E01               	movlw	1
 11156  00341A  6FF7               	movwf	_d& (0+255),b
 11157                           
 11158                           ;distance_finding.c: 131:         f=0;
 11159  00341C  0E00               	movlw	0
 11160  00341E  0101               	movlb	1	; () banked
 11161  003420  6F17               	movwf	(_f+1)& (0+255),b
 11162  003422  0E00               	movlw	0
 11163  003424  6F16               	movwf	_f& (0+255),b
 11164  003426                     
 11165                           ; BSR set to: 1
 11166                           ;distance_finding.c: 132:         _delay((unsigned long)((100)*(20000000/4000.0)));
 11167  003426  0E03               	movlw	3
 11168  003428  6E02               	movwf	(??_Secuence1+1)^0,c
 11169  00342A  0E8A               	movlw	138
 11170  00342C  6E01               	movwf	??_Secuence1^0,c
 11171  00342E  0E56               	movlw	86
 11172  003430                     u7137:
 11173  003430  2EE8               	decfsz	wreg,f,c
 11174  003432  D7FE               	bra	u7137
 11175  003434  2E01               	decfsz	??_Secuence1^0,f,c
 11176  003436  D7FC               	bra	u7137
 11177  003438  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 11178  00343A  D7FA               	bra	u7137
 11179  00343C                     
 11180                           ;distance_finding.c: 133:         if(RC0==0 && d==1){
 11181  00343C  B082               	btfsc	3970,0,c	;volatile
 11182  00343E  EF23  F01A         	goto	u6301
 11183  003442  EF25  F01A         	goto	u6300
 11184  003446                     u6301:
 11185  003446  EF1A  F01B         	goto	l5128
 11186  00344A                     u6300:
 11187  00344A  0100               	movlb	0	; () banked
 11188  00344C  05F7               	decf	_d& (0+255),w,b
 11189  00344E  11F8               	iorwf	(_d+1)& (0+255),w,b
 11190  003450  A4D8               	btfss	status,2,c
 11191  003452  EF2D  F01A         	goto	u6311
 11192  003456  EF2F  F01A         	goto	u6310
 11193  00345A                     u6311:
 11194  00345A  EF1A  F01B         	goto	l5128
 11195  00345E                     u6310:
 11196  00345E                     
 11197                           ; BSR set to: 0
 11198                           ;distance_finding.c: 134:         d=0;
 11199  00345E  0E00               	movlw	0
 11200  003460  6FF8               	movwf	(_d+1)& (0+255),b
 11201  003462  0E00               	movlw	0
 11202  003464  6FF7               	movwf	_d& (0+255),b
 11203  003466                     
 11204                           ; BSR set to: 0
 11205                           ;distance_finding.c: 135:         RB1=0;
 11206  003466  9281               	bcf	3969,1,c	;volatile
 11207                           
 11208                           ;distance_finding.c: 136:         a = 7;
 11209  003468  0E00               	movlw	0
 11210  00346A  6FF4               	movwf	(_a+1)& (0+255),b
 11211  00346C  0E07               	movlw	7
 11212  00346E  6FF3               	movwf	_a& (0+255),b
 11213  003470                     
 11214                           ; BSR set to: 0
 11215                           ;distance_finding.c: 137:         c++;
 11216  003470  4BF9               	infsnz	_c& (0+255),f,b
 11217  003472  2BFA               	incf	(_c+1)& (0+255),f,b
 11218  003474                     
 11219                           ; BSR set to: 0
 11220                           ;distance_finding.c: 138:         RC0=0;
 11221  003474  9082               	bcf	3970,0,c	;volatile
 11222  003476  EF1A  F01B         	goto	l5128
 11223  00347A                     l127:
 11224  00347A  A282               	btfss	3970,1,c	;volatile
 11225  00347C  EF42  F01A         	goto	u6321
 11226  003480  EF44  F01A         	goto	u6320
 11227  003484                     u6321:
 11228  003484  EF82  F01A         	goto	l130
 11229  003488                     u6320:
 11230  003488  0100               	movlb	0	; () banked
 11231  00348A  51F7               	movf	_d& (0+255),w,b
 11232  00348C  11F8               	iorwf	(_d+1)& (0+255),w,b
 11233  00348E  A4D8               	btfss	status,2,c
 11234  003490  EF4C  F01A         	goto	u6331
 11235  003494  EF4E  F01A         	goto	u6330
 11236  003498                     u6331:
 11237  003498  EF82  F01A         	goto	l130
 11238  00349C                     u6330:
 11239  00349C                     
 11240                           ; BSR set to: 0
 11241                           ;distance_finding.c: 143:         d=1;
 11242  00349C  0E00               	movlw	0
 11243  00349E  6FF8               	movwf	(_d+1)& (0+255),b
 11244  0034A0  0E01               	movlw	1
 11245  0034A2  6FF7               	movwf	_d& (0+255),b
 11246  0034A4                     
 11247                           ; BSR set to: 0
 11248                           ;distance_finding.c: 144:         _delay((unsigned long)((100)*(20000000/4000.0)));
 11249  0034A4  0E03               	movlw	3
 11250  0034A6  6E02               	movwf	(??_Secuence1+1)^0,c
 11251  0034A8  0E8A               	movlw	138
 11252  0034AA  6E01               	movwf	??_Secuence1^0,c
 11253  0034AC  0E56               	movlw	86
 11254  0034AE                     u7147:
 11255  0034AE  2EE8               	decfsz	wreg,f,c
 11256  0034B0  D7FE               	bra	u7147
 11257  0034B2  2E01               	decfsz	??_Secuence1^0,f,c
 11258  0034B4  D7FC               	bra	u7147
 11259  0034B6  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 11260  0034B8  D7FA               	bra	u7147
 11261  0034BA                     
 11262                           ;distance_finding.c: 145:         if(RC1==0 && d==1){
 11263  0034BA  B282               	btfsc	3970,1,c	;volatile
 11264  0034BC  EF62  F01A         	goto	u6341
 11265  0034C0  EF64  F01A         	goto	u6340
 11266  0034C4                     u6341:
 11267  0034C4  EF1A  F01B         	goto	l5128
 11268  0034C8                     u6340:
 11269  0034C8  0100               	movlb	0	; () banked
 11270  0034CA  05F7               	decf	_d& (0+255),w,b
 11271  0034CC  11F8               	iorwf	(_d+1)& (0+255),w,b
 11272  0034CE  A4D8               	btfss	status,2,c
 11273  0034D0  EF6C  F01A         	goto	u6351
 11274  0034D4  EF6E  F01A         	goto	u6350
 11275  0034D8                     u6351:
 11276  0034D8  EF1A  F01B         	goto	l5128
 11277  0034DC                     u6350:
 11278  0034DC                     
 11279                           ; BSR set to: 0
 11280                           ;distance_finding.c: 146:         d=0;
 11281  0034DC  0E00               	movlw	0
 11282  0034DE  6FF8               	movwf	(_d+1)& (0+255),b
 11283  0034E0  0E00               	movlw	0
 11284  0034E2  6FF7               	movwf	_d& (0+255),b
 11285                           
 11286                           ;distance_finding.c: 147:         f=0;
 11287  0034E4  0E00               	movlw	0
 11288  0034E6  0101               	movlb	1	; () banked
 11289  0034E8  6F17               	movwf	(_f+1)& (0+255),b
 11290  0034EA  0E00               	movlw	0
 11291  0034EC  6F16               	movwf	_f& (0+255),b
 11292  0034EE                     
 11293                           ; BSR set to: 1
 11294                           ;distance_finding.c: 148:         RB1=0;
 11295  0034EE  9281               	bcf	3969,1,c	;volatile
 11296                           
 11297                           ;distance_finding.c: 149:         a=8;
 11298  0034F0  0E00               	movlw	0
 11299  0034F2  0100               	movlb	0	; () banked
 11300  0034F4  6FF4               	movwf	(_a+1)& (0+255),b
 11301  0034F6  0E08               	movlw	8
 11302  0034F8  6FF3               	movwf	_a& (0+255),b
 11303  0034FA                     
 11304                           ; BSR set to: 0
 11305                           ;distance_finding.c: 150:          c++;
 11306  0034FA  4BF9               	infsnz	_c& (0+255),f,b
 11307  0034FC  2BFA               	incf	(_c+1)& (0+255),f,b
 11308  0034FE                     
 11309                           ; BSR set to: 0
 11310                           ;distance_finding.c: 151:         RC1=0;
 11311  0034FE  9282               	bcf	3970,1,c	;volatile
 11312  003500  EF1A  F01B         	goto	l5128
 11313  003504                     l130:
 11314  003504  A482               	btfss	3970,2,c	;volatile
 11315  003506  EF87  F01A         	goto	u6361
 11316  00350A  EF89  F01A         	goto	u6360
 11317  00350E                     u6361:
 11318  00350E  EFC7  F01A         	goto	l133
 11319  003512                     u6360:
 11320  003512  0100               	movlb	0	; () banked
 11321  003514  51F7               	movf	_d& (0+255),w,b
 11322  003516  11F8               	iorwf	(_d+1)& (0+255),w,b
 11323  003518  A4D8               	btfss	status,2,c
 11324  00351A  EF91  F01A         	goto	u6371
 11325  00351E  EF93  F01A         	goto	u6370
 11326  003522                     u6371:
 11327  003522  EFC7  F01A         	goto	l133
 11328  003526                     u6370:
 11329  003526                     
 11330                           ; BSR set to: 0
 11331                           ;distance_finding.c: 156:         d=1;
 11332  003526  0E00               	movlw	0
 11333  003528  6FF8               	movwf	(_d+1)& (0+255),b
 11334  00352A  0E01               	movlw	1
 11335  00352C  6FF7               	movwf	_d& (0+255),b
 11336  00352E                     
 11337                           ; BSR set to: 0
 11338                           ;distance_finding.c: 157:         _delay((unsigned long)((100)*(20000000/4000.0)));
 11339  00352E  0E03               	movlw	3
 11340  003530  6E02               	movwf	(??_Secuence1+1)^0,c
 11341  003532  0E8A               	movlw	138
 11342  003534  6E01               	movwf	??_Secuence1^0,c
 11343  003536  0E56               	movlw	86
 11344  003538                     u7157:
 11345  003538  2EE8               	decfsz	wreg,f,c
 11346  00353A  D7FE               	bra	u7157
 11347  00353C  2E01               	decfsz	??_Secuence1^0,f,c
 11348  00353E  D7FC               	bra	u7157
 11349  003540  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 11350  003542  D7FA               	bra	u7157
 11351  003544                     
 11352                           ;distance_finding.c: 158:         if(RC2==0 && d==1){
 11353  003544  B482               	btfsc	3970,2,c	;volatile
 11354  003546  EFA7  F01A         	goto	u6381
 11355  00354A  EFA9  F01A         	goto	u6380
 11356  00354E                     u6381:
 11357  00354E  EF1A  F01B         	goto	l5128
 11358  003552                     u6380:
 11359  003552  0100               	movlb	0	; () banked
 11360  003554  05F7               	decf	_d& (0+255),w,b
 11361  003556  11F8               	iorwf	(_d+1)& (0+255),w,b
 11362  003558  A4D8               	btfss	status,2,c
 11363  00355A  EFB1  F01A         	goto	u6391
 11364  00355E  EFB3  F01A         	goto	u6390
 11365  003562                     u6391:
 11366  003562  EF1A  F01B         	goto	l5128
 11367  003566                     u6390:
 11368  003566                     
 11369                           ; BSR set to: 0
 11370                           ;distance_finding.c: 159:         d=0;
 11371  003566  0E00               	movlw	0
 11372  003568  6FF8               	movwf	(_d+1)& (0+255),b
 11373  00356A  0E00               	movlw	0
 11374  00356C  6FF7               	movwf	_d& (0+255),b
 11375                           
 11376                           ;distance_finding.c: 160:         f=0;
 11377  00356E  0E00               	movlw	0
 11378  003570  0101               	movlb	1	; () banked
 11379  003572  6F17               	movwf	(_f+1)& (0+255),b
 11380  003574  0E00               	movlw	0
 11381  003576  6F16               	movwf	_f& (0+255),b
 11382  003578                     
 11383                           ; BSR set to: 1
 11384                           ;distance_finding.c: 161:         RB1=0;
 11385  003578  9281               	bcf	3969,1,c	;volatile
 11386                           
 11387                           ;distance_finding.c: 162:         a= 9;
 11388  00357A  0E00               	movlw	0
 11389  00357C  0100               	movlb	0	; () banked
 11390  00357E  6FF4               	movwf	(_a+1)& (0+255),b
 11391  003580  0E09               	movlw	9
 11392  003582  6FF3               	movwf	_a& (0+255),b
 11393  003584                     
 11394                           ; BSR set to: 0
 11395                           ;distance_finding.c: 163:         c++;
 11396  003584  4BF9               	infsnz	_c& (0+255),f,b
 11397  003586  2BFA               	incf	(_c+1)& (0+255),f,b
 11398  003588                     
 11399                           ; BSR set to: 0
 11400                           ;distance_finding.c: 164:          RC2=0;
 11401  003588  9482               	bcf	3970,2,c	;volatile
 11402  00358A  EF1A  F01B         	goto	l5128
 11403  00358E                     l133:
 11404  00358E  A882               	btfss	3970,4,c	;volatile
 11405  003590  EFCC  F01A         	goto	u6401
 11406  003594  EFCE  F01A         	goto	u6400
 11407  003598                     u6401:
 11408  003598  EF11  F01B         	goto	l136
 11409  00359C                     u6400:
 11410  00359C  0100               	movlb	0	; () banked
 11411  00359E  51F7               	movf	_d& (0+255),w,b
 11412  0035A0  11F8               	iorwf	(_d+1)& (0+255),w,b
 11413  0035A2  A4D8               	btfss	status,2,c
 11414  0035A4  EFD6  F01A         	goto	u6411
 11415  0035A8  EFD8  F01A         	goto	u6410
 11416  0035AC                     u6411:
 11417  0035AC  EF11  F01B         	goto	l136
 11418  0035B0                     u6410:
 11419  0035B0                     
 11420                           ; BSR set to: 0
 11421                           ;distance_finding.c: 168:         d=1;
 11422  0035B0  0E00               	movlw	0
 11423  0035B2  6FF8               	movwf	(_d+1)& (0+255),b
 11424  0035B4  0E01               	movlw	1
 11425  0035B6  6FF7               	movwf	_d& (0+255),b
 11426  0035B8                     
 11427                           ; BSR set to: 0
 11428                           ;distance_finding.c: 169:         _delay((unsigned long)((100)*(20000000/4000.0)));
 11429  0035B8  0E03               	movlw	3
 11430  0035BA  6E02               	movwf	(??_Secuence1+1)^0,c
 11431  0035BC  0E8A               	movlw	138
 11432  0035BE  6E01               	movwf	??_Secuence1^0,c
 11433  0035C0  0E56               	movlw	86
 11434  0035C2                     u7167:
 11435  0035C2  2EE8               	decfsz	wreg,f,c
 11436  0035C4  D7FE               	bra	u7167
 11437  0035C6  2E01               	decfsz	??_Secuence1^0,f,c
 11438  0035C8  D7FC               	bra	u7167
 11439  0035CA  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 11440  0035CC  D7FA               	bra	u7167
 11441  0035CE                     
 11442                           ;distance_finding.c: 170:         if(RC1==0 && d==1){
 11443  0035CE  B282               	btfsc	3970,1,c	;volatile
 11444  0035D0  EFEC  F01A         	goto	u6421
 11445  0035D4  EFEE  F01A         	goto	u6420
 11446  0035D8                     u6421:
 11447  0035D8  EF1A  F01B         	goto	l5128
 11448  0035DC                     u6420:
 11449  0035DC  0100               	movlb	0	; () banked
 11450  0035DE  05F7               	decf	_d& (0+255),w,b
 11451  0035E0  11F8               	iorwf	(_d+1)& (0+255),w,b
 11452  0035E2  A4D8               	btfss	status,2,c
 11453  0035E4  EFF6  F01A         	goto	u6431
 11454  0035E8  EFF8  F01A         	goto	u6430
 11455  0035EC                     u6431:
 11456  0035EC  EF1A  F01B         	goto	l5128
 11457  0035F0                     u6430:
 11458  0035F0                     
 11459                           ; BSR set to: 0
 11460                           ;distance_finding.c: 171:           f=0;
 11461  0035F0  0E00               	movlw	0
 11462  0035F2  0101               	movlb	1	; () banked
 11463  0035F4  6F17               	movwf	(_f+1)& (0+255),b
 11464  0035F6  0E00               	movlw	0
 11465  0035F8  6F16               	movwf	_f& (0+255),b
 11466                           
 11467                           ;distance_finding.c: 172:           d=0;
 11468  0035FA  0E00               	movlw	0
 11469  0035FC  0100               	movlb	0	; () banked
 11470  0035FE  6FF8               	movwf	(_d+1)& (0+255),b
 11471  003600  0E00               	movlw	0
 11472  003602  6FF7               	movwf	_d& (0+255),b
 11473  003604                     
 11474                           ; BSR set to: 0
 11475                           ;distance_finding.c: 173:           RB1=0;
 11476  003604  9281               	bcf	3969,1,c	;volatile
 11477                           
 11478                           ;distance_finding.c: 174:           a = 1;
 11479  003606  0E00               	movlw	0
 11480  003608  6FF4               	movwf	(_a+1)& (0+255),b
 11481  00360A  0E01               	movlw	1
 11482  00360C  6FF3               	movwf	_a& (0+255),b
 11483  00360E                     
 11484                           ; BSR set to: 0
 11485                           ;distance_finding.c: 175:           c++;
 11486  00360E  4BF9               	infsnz	_c& (0+255),f,b
 11487  003610  2BFA               	incf	(_c+1)& (0+255),f,b
 11488  003612                     
 11489                           ; BSR set to: 0
 11490                           ;distance_finding.c: 176:           f=1;
 11491  003612  0E00               	movlw	0
 11492  003614  0101               	movlb	1	; () banked
 11493  003616  6F17               	movwf	(_f+1)& (0+255),b
 11494  003618  0E01               	movlw	1
 11495  00361A  6F16               	movwf	_f& (0+255),b
 11496  00361C                     
 11497                           ; BSR set to: 1
 11498                           ;distance_finding.c: 177:           RC4=0;
 11499  00361C  9882               	bcf	3970,4,c	;volatile
 11500  00361E  EF1A  F01B         	goto	l5128
 11501  003622                     l136:
 11502  003622  9281               	bcf	3969,1,c	;volatile
 11503                           
 11504                           ;distance_finding.c: 181:         TRISBbits.RB1 = 1;
 11505  003624  8293               	bsf	147,1,c	;volatile
 11506  003626                     
 11507                           ;distance_finding.c: 182:           TRISC=0x00;
 11508  003626  0E00               	movlw	0
 11509  003628  6E94               	movwf	148,c	;volatile
 11510                           
 11511                           ;distance_finding.c: 183:           d=0;
 11512  00362A  0E00               	movlw	0
 11513  00362C  0100               	movlb	0	; () banked
 11514  00362E  6FF8               	movwf	(_d+1)& (0+255),b
 11515  003630  0E00               	movlw	0
 11516  003632  6FF7               	movwf	_d& (0+255),b
 11517  003634                     l5128:
 11518                           
 11519                           ;distance_finding.c: 186:     RB1 = 0;
 11520  003634  9281               	bcf	3969,1,c	;volatile
 11521  003636                     
 11522                           ;distance_finding.c: 187:     TRISBbits.RB1 = 1;
 11523  003636  8293               	bsf	147,1,c	;volatile
 11524                           
 11525                           ;distance_finding.c: 188:     TRISC=0x00;
 11526  003638  0E00               	movlw	0
 11527  00363A  6E94               	movwf	148,c	;volatile
 11528  00363C  0012               	return		;funcret
 11529  00363E                     __end_of_Secuence1:
 11530                           	callstack 0
 11531                           
 11532 ;; *************** function _LCD_String_xy *****************
 11533 ;; Defined at:
 11534 ;;		line 57 in file "LCD_16x2_4bit_mode.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;  row             1    wreg     unsigned char 
 11537 ;;  pos             1   10[COMRAM] unsigned char 
 11538 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 11539 ;;		 -> STR_9(18), STR_7(15), main@Total_distance(20), STR_5(16), 
 11540 ;;		 -> STR_4(20), STR_3(20), STR_2(14), STR_1(13), 
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;  row             1   13[COMRAM] unsigned char 
 11543 ;;  location        1   14[COMRAM] unsigned char 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11553 ;;      Params:         3       0       0       0       0       0       0       0       0
 11554 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11556 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11557 ;;Total ram usage:        5 bytes
 11558 ;; Hardware stack levels used:    1
 11559 ;; Hardware stack levels required when called:    3
 11560 ;; This function calls:
 11561 ;;		_LCD_Command
 11562 ;;		_LCD_String
 11563 ;; This function is called by:
 11564 ;;		_main
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text40
 11569  004A3A                     __ptext40:
 11570                           	callstack 0
 11571  004A3A                     _LCD_String_xy:
 11572                           	callstack 27
 11573                           
 11574                           ;incstack = 0
 11575                           ;LCD_String_xy@row stored from wreg
 11576  004A3A  6E0E               	movwf	LCD_String_xy@row^0,c
 11577  004A3C                     
 11578                           ;LCD_16x2_4bit_mode.c: 60:     if(row<=1)
 11579  004A3C  0E02               	movlw	2
 11580  004A3E  600E               	cpfslt	LCD_String_xy@row^0,c
 11581  004A40  EF24  F025         	goto	u6111
 11582  004A44  EF26  F025         	goto	u6110
 11583  004A48                     u6111:
 11584  004A48  EF2F  F025         	goto	l4934
 11585  004A4C                     u6110:
 11586  004A4C                     
 11587                           ;LCD_16x2_4bit_mode.c: 61:     {;LCD_16x2_4bit_mode.c: 62:         location=(0x80) | ((p
      +                          os) & 0x0f);
 11588  004A4C  500B               	movf	LCD_String_xy@pos^0,w,c
 11589  004A4E  0B0F               	andlw	15
 11590  004A50  0980               	iorlw	128
 11591  004A52  6E0F               	movwf	LCD_String_xy@location^0,c
 11592  004A54                     
 11593                           ;LCD_16x2_4bit_mode.c: 63:         LCD_Command(location);
 11594  004A54  500F               	movf	LCD_String_xy@location^0,w,c
 11595  004A56  EC6D  F024         	call	_LCD_Command
 11596                           
 11597                           ;LCD_16x2_4bit_mode.c: 64:     }
 11598  004A5A  EF36  F025         	goto	l4938
 11599  004A5E                     l4934:
 11600                           
 11601                           ;LCD_16x2_4bit_mode.c: 66:     {;LCD_16x2_4bit_mode.c: 67:         location=(0xC0) | ((p
      +                          os) & 0x0f);
 11602  004A5E  500B               	movf	LCD_String_xy@pos^0,w,c
 11603  004A60  0B0F               	andlw	15
 11604  004A62  09C0               	iorlw	192
 11605  004A64  6E0F               	movwf	LCD_String_xy@location^0,c
 11606  004A66                     
 11607                           ;LCD_16x2_4bit_mode.c: 68:         LCD_Command(location);
 11608  004A66  500F               	movf	LCD_String_xy@location^0,w,c
 11609  004A68  EC6D  F024         	call	_LCD_Command
 11610  004A6C                     l4938:
 11611                           
 11612                           ;LCD_16x2_4bit_mode.c: 72:     LCD_String(msg);
 11613  004A6C  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 11614  004A70  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 11615  004A74  EC6B  F023         	call	_LCD_String	;wreg free
 11616  004A78  0012               	return		;funcret
 11617  004A7A                     __end_of_LCD_String_xy:
 11618                           	callstack 0
 11619                           
 11620 ;; *************** function _LCD_String *****************
 11621 ;; Defined at:
 11622 ;;		line 47 in file "LCD_16x2_4bit_mode.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 11625 ;;		 -> STR_9(18), STR_7(15), main@Total_distance(20), STR_5(16), 
 11626 ;;		 -> STR_4(20), STR_3(20), STR_2(14), STR_1(13), 
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1    wreg      void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11638 ;;      Params:         2       0       0       0       0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11640 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11641 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11642 ;;Total ram usage:        2 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:    2
 11645 ;; This function calls:
 11646 ;;		_LCD_Char
 11647 ;; This function is called by:
 11648 ;;		_LCD_String_xy
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text41
 11653  0046D6                     __ptext41:
 11654                           	callstack 0
 11655  0046D6                     _LCD_String:
 11656                           	callstack 27
 11657  0046D6                     
 11658                           ;LCD_16x2_4bit_mode.c: 47: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 48: {;
      +                          LCD_16x2_4bit_mode.c: 49:  while((*msg)!=0)
 11659  0046D6  EF81  F023         	goto	l4902
 11660  0046DA                     l4898:
 11661                           
 11662                           ;LCD_16x2_4bit_mode.c: 50:  {;LCD_16x2_4bit_mode.c: 51:    LCD_Char(*msg);
 11663  0046DA  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11664  0046DE  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11665  0046E2  6AF8               	clrf	tblptru,c
 11666  0046E4  0E07               	movlw	(high __ramtop+-1)
 11667  0046E6  64F7               	cpfsgt	tblptrh,c
 11668  0046E8  D003               	bra	u6077
 11669  0046EA  0008               	tblrd		*
 11670  0046EC  50F5               	movf	tablat,w,c
 11671  0046EE  D005               	bra	u6070
 11672  0046F0                     u6077:
 11673  0046F0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11674  0046F4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11675  0046F8  50E7               	movf	indf1,w,c
 11676  0046FA                     u6070:
 11677  0046FA  EC47  F024         	call	_LCD_Char
 11678  0046FE                     
 11679                           ;LCD_16x2_4bit_mode.c: 52:    msg++;
 11680  0046FE  4A09               	infsnz	LCD_String@msg^0,f,c
 11681  004700  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 11682  004702                     l4902:
 11683                           
 11684                           ;LCD_16x2_4bit_mode.c: 49:  while((*msg)!=0)
 11685  004702  C009  FFF6         	movff	LCD_String@msg,tblptrl
 11686  004706  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 11687  00470A  6AF8               	clrf	tblptru,c
 11688  00470C  0E07               	movlw	(high __ramtop+-1)
 11689  00470E  64F7               	cpfsgt	tblptrh,c
 11690  004710  D003               	bra	u6087
 11691  004712  0008               	tblrd		*
 11692  004714  50F5               	movf	tablat,w,c
 11693  004716  D005               	bra	u6080
 11694  004718                     u6087:
 11695  004718  CFF6 FFE1          	movff	tblptrl,fsr1l
 11696  00471C  CFF7 FFE2          	movff	tblptrh,fsr1h
 11697  004720  50E7               	movf	indf1,w,c
 11698  004722                     u6080:
 11699  004722  0900               	iorlw	0
 11700  004724  A4D8               	btfss	status,2,c
 11701  004726  EF97  F023         	goto	u6091
 11702  00472A  EF99  F023         	goto	u6090
 11703  00472E                     u6091:
 11704  00472E  EF6D  F023         	goto	l4898
 11705  004732                     u6090:
 11706  004732  0012               	return		;funcret
 11707  004734                     __end_of_LCD_String:
 11708                           	callstack 0
 11709                           
 11710 ;; *************** function _LCD_Char *****************
 11711 ;; Defined at:
 11712 ;;		line 33 in file "LCD_16x2_4bit_mode.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;  dat             1    wreg     unsigned char 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;  dat             1    7[COMRAM] unsigned char 
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, status,2, status,0, cstack
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11726 ;;      Params:         0       0       0       0       0       0       0       0       0
 11727 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11728 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11729 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11730 ;;Total ram usage:        2 bytes
 11731 ;; Hardware stack levels used:    1
 11732 ;; Hardware stack levels required when called:    1
 11733 ;; This function calls:
 11734 ;;		_MSdelay
 11735 ;; This function is called by:
 11736 ;;		_LCD_String
 11737 ;; This function uses a non-reentrant model
 11738 ;;
 11739                           
 11740                           	psect	text42
 11741  00488E                     __ptext42:
 11742                           	callstack 0
 11743  00488E                     _LCD_Char:
 11744                           	callstack 27
 11745                           
 11746                           ;incstack = 0
 11747                           ;LCD_Char@dat stored from wreg
 11748  00488E  6E08               	movwf	LCD_Char@dat^0,c
 11749  004890                     
 11750                           ;LCD_16x2_4bit_mode.c: 33: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 34: {;
      +                          LCD_16x2_4bit_mode.c: 35:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 11751  004890  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11752  004894  0EF0               	movlw	240
 11753  004896  1607               	andwf	??_LCD_Char^0,f,c
 11754  004898  508C               	movf	140,w,c	;volatile
 11755  00489A  0B0F               	andlw	15
 11756  00489C  1007               	iorwf	??_LCD_Char^0,w,c
 11757  00489E  6E8C               	movwf	140,c	;volatile
 11758  0048A0                     
 11759                           ;LCD_16x2_4bit_mode.c: 36:  LATD2 = 1;
 11760  0048A0  848C               	bsf	3980,2,c	;volatile
 11761  0048A2                     
 11762                           ;LCD_16x2_4bit_mode.c: 37:  LATD3 = 1;
 11763  0048A2  868C               	bsf	3980,3,c	;volatile
 11764  0048A4                     
 11765                           ;LCD_16x2_4bit_mode.c: 38:  __nop();
 11766  0048A4  F000               	nop	
 11767  0048A6                     
 11768                           ;LCD_16x2_4bit_mode.c: 39:  LATD3 = 0;
 11769  0048A6  968C               	bcf	3980,3,c	;volatile
 11770  0048A8                     
 11771                           ;LCD_16x2_4bit_mode.c: 40:  MSdelay(1);
 11772  0048A8  0E00               	movlw	0
 11773  0048AA  6E02               	movwf	(MSdelay@val+1)^0,c
 11774  0048AC  0E01               	movlw	1
 11775  0048AE  6E01               	movwf	MSdelay@val^0,c
 11776  0048B0  EC93  F024         	call	_MSdelay	;wreg free
 11777  0048B4                     
 11778                           ;LCD_16x2_4bit_mode.c: 41:     LATD = (LATD & 0x0f) | (dat<<4);
 11779  0048B4  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11780  0048B8  3A07               	swapf	??_LCD_Char^0,f,c
 11781  0048BA  0EF0               	movlw	240
 11782  0048BC  1607               	andwf	??_LCD_Char^0,f,c
 11783  0048BE  508C               	movf	140,w,c	;volatile
 11784  0048C0  0B0F               	andlw	15
 11785  0048C2  1007               	iorwf	??_LCD_Char^0,w,c
 11786  0048C4  6E8C               	movwf	140,c	;volatile
 11787  0048C6                     
 11788                           ;LCD_16x2_4bit_mode.c: 42:  LATD3 = 1;
 11789  0048C6  868C               	bsf	3980,3,c	;volatile
 11790  0048C8                     
 11791                           ;LCD_16x2_4bit_mode.c: 43:  __nop();
 11792  0048C8  F000               	nop	
 11793  0048CA                     
 11794                           ;LCD_16x2_4bit_mode.c: 44:  LATD3 = 0;
 11795  0048CA  968C               	bcf	3980,3,c	;volatile
 11796                           
 11797                           ;LCD_16x2_4bit_mode.c: 45:  MSdelay(3);
 11798  0048CC  0E00               	movlw	0
 11799  0048CE  6E02               	movwf	(MSdelay@val+1)^0,c
 11800  0048D0  0E03               	movlw	3
 11801  0048D2  6E01               	movwf	MSdelay@val^0,c
 11802  0048D4  EC93  F024         	call	_MSdelay	;wreg free
 11803  0048D8  0012               	return		;funcret
 11804  0048DA                     __end_of_LCD_Char:
 11805                           	callstack 0
 11806                           
 11807 ;; *************** function _LCD_Init *****************
 11808 ;; Defined at:
 11809 ;;		line 5 in file "LCD_16x2_4bit_mode.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;		None
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0, cstack
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11826 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11827 ;;Total ram usage:        0 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    2
 11830 ;; This function calls:
 11831 ;;		_LCD_Command
 11832 ;;		_MSdelay
 11833 ;; This function is called by:
 11834 ;;		_main
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text43
 11839  004B58                     __ptext43:
 11840                           	callstack 0
 11841  004B58                     _LCD_Init:
 11842                           	callstack 28
 11843  004B58                     
 11844                           ;LCD_16x2_4bit_mode.c: 7:     TRISD = 0;
 11845  004B58  0E00               	movlw	0
 11846  004B5A  6E95               	movwf	149,c	;volatile
 11847  004B5C                     
 11848                           ;LCD_16x2_4bit_mode.c: 8:     MSdelay(15);
 11849  004B5C  0E00               	movlw	0
 11850  004B5E  6E02               	movwf	(MSdelay@val+1)^0,c
 11851  004B60  0E0F               	movlw	15
 11852  004B62  6E01               	movwf	MSdelay@val^0,c
 11853  004B64  EC93  F024         	call	_MSdelay	;wreg free
 11854  004B68                     
 11855                           ;LCD_16x2_4bit_mode.c: 9:     LCD_Command(0x02);
 11856  004B68  0E02               	movlw	2
 11857  004B6A  EC6D  F024         	call	_LCD_Command
 11858  004B6E                     
 11859                           ;LCD_16x2_4bit_mode.c: 11:     LCD_Command(0x28);
 11860  004B6E  0E28               	movlw	40
 11861  004B70  EC6D  F024         	call	_LCD_Command
 11862  004B74                     
 11863                           ;LCD_16x2_4bit_mode.c: 13:  LCD_Command(0x01);
 11864  004B74  0E01               	movlw	1
 11865  004B76  EC6D  F024         	call	_LCD_Command
 11866  004B7A                     
 11867                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x0c);
 11868  004B7A  0E0C               	movlw	12
 11869  004B7C  EC6D  F024         	call	_LCD_Command
 11870  004B80                     
 11871                           ;LCD_16x2_4bit_mode.c: 15:  LCD_Command(0x06);
 11872  004B80  0E06               	movlw	6
 11873  004B82  EC6D  F024         	call	_LCD_Command
 11874  004B86  0012               	return		;funcret
 11875  004B88                     __end_of_LCD_Init:
 11876                           	callstack 0
 11877                           
 11878 ;; *************** function _LCD_Command *****************
 11879 ;; Defined at:
 11880 ;;		line 18 in file "LCD_16x2_4bit_mode.c"
 11881 ;; Parameters:    Size  Location     Type
 11882 ;;  cmd             1    wreg     unsigned char 
 11883 ;; Auto vars:     Size  Location     Type
 11884 ;;  cmd             1    7[COMRAM] unsigned char 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      void 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2, status,0, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11894 ;;      Params:         0       0       0       0       0       0       0       0       0
 11895 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11896 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11897 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11898 ;;Total ram usage:        2 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:    1
 11901 ;; This function calls:
 11902 ;;		_MSdelay
 11903 ;; This function is called by:
 11904 ;;		_LCD_Init
 11905 ;;		_LCD_String_xy
 11906 ;;		_LCD_Clear
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text44
 11911  0048DA                     __ptext44:
 11912                           	callstack 0
 11913  0048DA                     _LCD_Command:
 11914                           	callstack 27
 11915                           
 11916                           ;incstack = 0
 11917                           ;LCD_Command@cmd stored from wreg
 11918  0048DA  6E08               	movwf	LCD_Command@cmd^0,c
 11919  0048DC                     
 11920                           ;LCD_16x2_4bit_mode.c: 18: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 19
      +                          : {;LCD_16x2_4bit_mode.c: 20:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11921  0048DC  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11922  0048E0  0EF0               	movlw	240
 11923  0048E2  1607               	andwf	??_LCD_Command^0,f,c
 11924  0048E4  508C               	movf	140,w,c	;volatile
 11925  0048E6  0B0F               	andlw	15
 11926  0048E8  1007               	iorwf	??_LCD_Command^0,w,c
 11927  0048EA  6E8C               	movwf	140,c	;volatile
 11928  0048EC                     
 11929                           ;LCD_16x2_4bit_mode.c: 21:  LATD2 = 0;
 11930  0048EC  948C               	bcf	3980,2,c	;volatile
 11931  0048EE                     
 11932                           ;LCD_16x2_4bit_mode.c: 22:  LATD3 = 1;
 11933  0048EE  868C               	bsf	3980,3,c	;volatile
 11934  0048F0                     
 11935                           ;LCD_16x2_4bit_mode.c: 23:  __nop();
 11936  0048F0  F000               	nop	
 11937  0048F2                     
 11938                           ;LCD_16x2_4bit_mode.c: 24:  LATD3 = 0;
 11939  0048F2  968C               	bcf	3980,3,c	;volatile
 11940  0048F4                     
 11941                           ;LCD_16x2_4bit_mode.c: 25:  MSdelay(1);
 11942  0048F4  0E00               	movlw	0
 11943  0048F6  6E02               	movwf	(MSdelay@val+1)^0,c
 11944  0048F8  0E01               	movlw	1
 11945  0048FA  6E01               	movwf	MSdelay@val^0,c
 11946  0048FC  EC93  F024         	call	_MSdelay	;wreg free
 11947  004900                     
 11948                           ;LCD_16x2_4bit_mode.c: 26:     LATD = (LATD & 0x0f) | (cmd<<4);
 11949  004900  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11950  004904  3A07               	swapf	??_LCD_Command^0,f,c
 11951  004906  0EF0               	movlw	240
 11952  004908  1607               	andwf	??_LCD_Command^0,f,c
 11953  00490A  508C               	movf	140,w,c	;volatile
 11954  00490C  0B0F               	andlw	15
 11955  00490E  1007               	iorwf	??_LCD_Command^0,w,c
 11956  004910  6E8C               	movwf	140,c	;volatile
 11957  004912                     
 11958                           ;LCD_16x2_4bit_mode.c: 27:  LATD3 = 1;
 11959  004912  868C               	bsf	3980,3,c	;volatile
 11960  004914                     
 11961                           ;LCD_16x2_4bit_mode.c: 28:  __nop();
 11962  004914  F000               	nop	
 11963  004916                     
 11964                           ;LCD_16x2_4bit_mode.c: 29:  LATD3 = 0;
 11965  004916  968C               	bcf	3980,3,c	;volatile
 11966                           
 11967                           ;LCD_16x2_4bit_mode.c: 30:  MSdelay(3);
 11968  004918  0E00               	movlw	0
 11969  00491A  6E02               	movwf	(MSdelay@val+1)^0,c
 11970  00491C  0E03               	movlw	3
 11971  00491E  6E01               	movwf	MSdelay@val^0,c
 11972  004920  EC93  F024         	call	_MSdelay	;wreg free
 11973  004924  0012               	return		;funcret
 11974  004926                     __end_of_LCD_Command:
 11975                           	callstack 0
 11976                           
 11977 ;; *************** function _MSdelay *****************
 11978 ;; Defined at:
 11979 ;;		line 81 in file "LCD_16x2_4bit_mode.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;  val             2    0[COMRAM] unsigned int 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  j               2    4[COMRAM] unsigned int 
 11984 ;;  i               2    2[COMRAM] unsigned int 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      void 
 11987 ;; Registers used:
 11988 ;;		wreg, status,2, status,0
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11994 ;;      Params:         2       0       0       0       0       0       0       0       0
 11995 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11996 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11997 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11998 ;;Total ram usage:        6 bytes
 11999 ;; Hardware stack levels used:    1
 12000 ;; This function calls:
 12001 ;;		Nothing
 12002 ;; This function is called by:
 12003 ;;		_main
 12004 ;;		_LCD_Init
 12005 ;;		_LCD_Command
 12006 ;;		_LCD_Char
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text45
 12011  004926                     __ptext45:
 12012                           	callstack 0
 12013  004926                     _MSdelay:
 12014                           	callstack 27
 12015  004926                     
 12016                           ;LCD_16x2_4bit_mode.c: 81: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 82: {;LC
      +                          D_16x2_4bit_mode.c: 83:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 84:  for(i=0;i<val;i++)
 12017  004926  0E00               	movlw	0
 12018  004928  6E04               	movwf	(MSdelay@i+1)^0,c
 12019  00492A  0E00               	movlw	0
 12020  00492C  6E03               	movwf	MSdelay@i^0,c
 12021  00492E  EFAC  F024         	goto	l4292
 12022  004932                     l4280:
 12023                           
 12024                           ;LCD_16x2_4bit_mode.c: 85:      for(j=0;j<165;j++);
 12025  004932  0E00               	movlw	0
 12026  004934  6E06               	movwf	(MSdelay@j+1)^0,c
 12027  004936  0E00               	movlw	0
 12028  004938  6E05               	movwf	MSdelay@j^0,c
 12029  00493A                     l4286:
 12030  00493A  4A05               	infsnz	MSdelay@j^0,f,c
 12031  00493C  2A06               	incf	(MSdelay@j+1)^0,f,c
 12032  00493E  5006               	movf	(MSdelay@j+1)^0,w,c
 12033  004940  E109               	bnz	u5080
 12034  004942  0EA5               	movlw	165
 12035  004944  5C05               	subwf	MSdelay@j^0,w,c
 12036  004946  A0D8               	btfss	status,0,c
 12037  004948  EFA8  F024         	goto	u5081
 12038  00494C  EFAA  F024         	goto	u5080
 12039  004950                     u5081:
 12040  004950  EF9D  F024         	goto	l4286
 12041  004954                     u5080:
 12042  004954  4A03               	infsnz	MSdelay@i^0,f,c
 12043  004956  2A04               	incf	(MSdelay@i+1)^0,f,c
 12044  004958                     l4292:
 12045  004958  5001               	movf	MSdelay@val^0,w,c
 12046  00495A  5C03               	subwf	MSdelay@i^0,w,c
 12047  00495C  5002               	movf	(MSdelay@val+1)^0,w,c
 12048  00495E  5804               	subwfb	(MSdelay@i+1)^0,w,c
 12049  004960  A0D8               	btfss	status,0,c
 12050  004962  EFB5  F024         	goto	u5091
 12051  004966  EFB7  F024         	goto	u5090
 12052  00496A                     u5091:
 12053  00496A  EF99  F024         	goto	l4280
 12054  00496E                     u5090:
 12055  00496E  0012               	return		;funcret
 12056  004970                     __end_of_MSdelay:
 12057                           	callstack 0
 12058                           
 12059                           	psect	rparam
 12060  0000                     
 12061                           	psect	idloc
 12062                           
 12063                           ;Config register IDLOC0 @ 0x200000
 12064                           ;	unspecified, using default values
 12065  200000                     	org	2097152
 12066  200000  FF                 	db	255
 12067                           
 12068                           ;Config register IDLOC1 @ 0x200001
 12069                           ;	unspecified, using default values
 12070  200001                     	org	2097153
 12071  200001  FF                 	db	255
 12072                           
 12073                           ;Config register IDLOC2 @ 0x200002
 12074                           ;	unspecified, using default values
 12075  200002                     	org	2097154
 12076  200002  FF                 	db	255
 12077                           
 12078                           ;Config register IDLOC3 @ 0x200003
 12079                           ;	unspecified, using default values
 12080  200003                     	org	2097155
 12081  200003  FF                 	db	255
 12082                           
 12083                           ;Config register IDLOC4 @ 0x200004
 12084                           ;	unspecified, using default values
 12085  200004                     	org	2097156
 12086  200004  FF                 	db	255
 12087                           
 12088                           ;Config register IDLOC5 @ 0x200005
 12089                           ;	unspecified, using default values
 12090  200005                     	org	2097157
 12091  200005  FF                 	db	255
 12092                           
 12093                           ;Config register IDLOC6 @ 0x200006
 12094                           ;	unspecified, using default values
 12095  200006                     	org	2097158
 12096  200006  FF                 	db	255
 12097                           
 12098                           ;Config register IDLOC7 @ 0x200007
 12099                           ;	unspecified, using default values
 12100  200007                     	org	2097159
 12101  200007  FF                 	db	255
 12102                           
 12103                           	psect	config
 12104                           
 12105                           ;Config register CONFIG1L @ 0x300000
 12106                           ;	PLL Prescaler Selection bits
 12107                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 12108                           ;	System Clock Postscaler Selection bits
 12109                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12110                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12111                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 12112  300000                     	org	3145728
 12113  300000  00                 	db	0
 12114                           
 12115                           ;Config register CONFIG1H @ 0x300001
 12116                           ;	Oscillator Selection bits
 12117                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 12118                           ;	Fail-Safe Clock Monitor Enable bit
 12119                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12120                           ;	Internal/External Oscillator Switchover bit
 12121                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12122  300001                     	org	3145729
 12123  300001  09                 	db	9
 12124                           
 12125                           ;Config register CONFIG2L @ 0x300002
 12126                           ;	Power-up Timer Enable bit
 12127                           ;	PWRT = OFF, PWRT disabled
 12128                           ;	Brown-out Reset Enable bits
 12129                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12130                           ;	Brown-out Reset Voltage bits
 12131                           ;	BORV = 3, Minimum setting 2.05V
 12132                           ;	USB Voltage Regulator Enable bit
 12133                           ;	VREGEN = OFF, USB voltage regulator disabled
 12134  300002                     	org	3145730
 12135  300002  1F                 	db	31
 12136                           
 12137                           ;Config register CONFIG2H @ 0x300003
 12138                           ;	Watchdog Timer Enable bit
 12139                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12140                           ;	Watchdog Timer Postscale Select bits
 12141                           ;	WDTPS = 32768, 1:32768
 12142  300003                     	org	3145731
 12143  300003  1E                 	db	30
 12144                           
 12145                           ; Padding undefined space
 12146  300004                     	org	3145732
 12147  300004  FF                 	db	255
 12148                           
 12149                           ;Config register CONFIG3H @ 0x300005
 12150                           ;	CCP2 MUX bit
 12151                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12152                           ;	PORTB A/D Enable bit
 12153                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12154                           ;	Low-Power Timer 1 Oscillator Enable bit
 12155                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12156                           ;	MCLR Pin Enable bit
 12157                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 12158  300005                     	org	3145733
 12159  300005  01                 	db	1
 12160                           
 12161                           ;Config register CONFIG4L @ 0x300006
 12162                           ;	Stack Full/Underflow Reset Enable bit
 12163                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12164                           ;	Single-Supply ICSP Enable bit
 12165                           ;	LVP = OFF, Single-Supply ICSP disabled
 12166                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 12167                           ;	ICPRT = OFF, ICPORT disabled
 12168                           ;	Extended Instruction Set Enable bit
 12169                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12170                           ;	Background Debugger Enable bit
 12171                           ;	DEBUG = 0x1, unprogrammed default
 12172  300006                     	org	3145734
 12173  300006  81                 	db	129
 12174                           
 12175                           ; Padding undefined space
 12176  300007                     	org	3145735
 12177  300007  FF                 	db	255
 12178                           
 12179                           ;Config register CONFIG5L @ 0x300008
 12180                           ;	Code Protection bit
 12181                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12182                           ;	Code Protection bit
 12183                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12184                           ;	Code Protection bit
 12185                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12186                           ;	Code Protection bit
 12187                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 12188  300008                     	org	3145736
 12189  300008  0F                 	db	15
 12190                           
 12191                           ;Config register CONFIG5H @ 0x300009
 12192                           ;	Boot Block Code Protection bit
 12193                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12194                           ;	Data EEPROM Code Protection bit
 12195                           ;	CPD = OFF, Data EEPROM is not code-protected
 12196  300009                     	org	3145737
 12197  300009  C0                 	db	192
 12198                           
 12199                           ;Config register CONFIG6L @ 0x30000A
 12200                           ;	Write Protection bit
 12201                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12202                           ;	Write Protection bit
 12203                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12204                           ;	Write Protection bit
 12205                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12206                           ;	Write Protection bit
 12207                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 12208  30000A                     	org	3145738
 12209  30000A  0F                 	db	15
 12210                           
 12211                           ;Config register CONFIG6H @ 0x30000B
 12212                           ;	Configuration Register Write Protection bit
 12213                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12214                           ;	Boot Block Write Protection bit
 12215                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12216                           ;	Data EEPROM Write Protection bit
 12217                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12218  30000B                     	org	3145739
 12219  30000B  E0                 	db	224
 12220                           
 12221                           ;Config register CONFIG7L @ 0x30000C
 12222                           ;	Table Read Protection bit
 12223                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12224                           ;	Table Read Protection bit
 12225                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12226                           ;	Table Read Protection bit
 12227                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12228                           ;	Table Read Protection bit
 12229                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12230  30000C                     	org	3145740
 12231  30000C  0F                 	db	15
 12232                           
 12233                           ;Config register CONFIG7H @ 0x30000D
 12234                           ;	Boot Block Table Read Protection bit
 12235                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12236  30000D                     	org	3145741
 12237  30000D  40                 	db	64
 12238                           tosu	equ	0xFFF
 12239                           tosh	equ	0xFFE
 12240                           tosl	equ	0xFFD
 12241                           stkptr	equ	0xFFC
 12242                           pclatu	equ	0xFFB
 12243                           pclath	equ	0xFFA
 12244                           pcl	equ	0xFF9
 12245                           tblptru	equ	0xFF8
 12246                           tblptrh	equ	0xFF7
 12247                           tblptrl	equ	0xFF6
 12248                           tablat	equ	0xFF5
 12249                           prodh	equ	0xFF4
 12250                           prodl	equ	0xFF3
 12251                           indf0	equ	0xFEF
 12252                           postinc0	equ	0xFEE
 12253                           postdec0	equ	0xFED
 12254                           preinc0	equ	0xFEC
 12255                           plusw0	equ	0xFEB
 12256                           fsr0h	equ	0xFEA
 12257                           fsr0l	equ	0xFE9
 12258                           wreg	equ	0xFE8
 12259                           indf1	equ	0xFE7
 12260                           postinc1	equ	0xFE6
 12261                           postdec1	equ	0xFE5
 12262                           preinc1	equ	0xFE4
 12263                           plusw1	equ	0xFE3
 12264                           fsr1h	equ	0xFE2
 12265                           fsr1l	equ	0xFE1
 12266                           bsr	equ	0xFE0
 12267                           indf2	equ	0xFDF
 12268                           postinc2	equ	0xFDE
 12269                           postdec2	equ	0xFDD
 12270                           preinc2	equ	0xFDC
 12271                           plusw2	equ	0xFDB
 12272                           fsr2h	equ	0xFDA
 12273                           fsr2l	equ	0xFD9
 12274                           status	equ	0xFD8

Data Sizes:
    Strings     146
    Constant    0
    Data        6
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    145     159
    BANK1           256      0     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[6]), STR_10(CODE[3]), STR_8(CODE[5]), STR_6(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[6]), STR_10(CODE[3]), STR_8(CODE[5]), STR_6(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[6]), STR_10(CODE[3]), STR_8(CODE[5]), STR_6(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[6]), STR_10(CODE[3]), STR_8(CODE[5]), STR_6(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S788_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[18]), STR_7(CODE[15]), main@Total_distance(BANK0[20]), STR_5(CODE[16]), 
		 -> STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[14]), STR_1(CODE[13]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[18]), STR_7(CODE[15]), main@Total_distance(BANK0[20]), STR_5(CODE[16]), 
		 -> STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[14]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_Clear->_LCD_Command
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   49622
                                            121 BANK0     24    24      0
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                          _Secuence1
                          _Secuence2
                          _Secuence3
                          _Secuence4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   34529
                                            103 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33714
                                             95 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   33327
                                             63 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22605
                                             90 COMRAM     5     5      0
                                              0 BANK0     63    56      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Secuence4                                            2     2      0     592
                                              8 COMRAM     2     2      0
                          _LCD_Clear
 ---------------------------------------------------------------------------------
 (1) _Secuence3                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Secuence2                                            2     2      0     592
                                              8 COMRAM     2     2      0
                          _LCD_Clear
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     592
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Secuence1                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    3112
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     713
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1140
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     548
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _Secuence1
   _Secuence2
     _LCD_Clear
       _LCD_Command
         _MSdelay
   _Secuence3
   _Secuence4
     _LCD_Clear
       _LCD_Command
         _MSdelay
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     ___fldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     91      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C      20        0.0%
DATA                 0      0     16C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Nov 20 22:33:52 2020

           ___fldiv@aexp 0040             ___fldiv@bexp 003F                        _a 00F3  
                      _b 00FB                        _c 00F9                        _d 00F7  
                      _e 016A                        _f 0116             ___fldiv@sign 0038  
           ?_LCD_Command 0001                       l93 29A4                       l96 27B0  
                     l97 27B2                       l99 27C0             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003              ?_LCD_String 0009                      l102 28B4  
                    l103 28B6                      l130 3504                      l203 4B86  
                    l220 4A78                      l133 358E                      l206 4924  
                    l142 3224                      l231 496E                      l215 4732  
                    l127 347A                      l223 4BB4                      l151 33D0  
                    l136 3622                      l160 3054                      l209 48D8  
                    l145 32AE                      l154 33EA                      l234 4BAC  
                    l139 363C                      l163 30EA                      l148 3338  
                    l172 2D3C                      l157 2FBC                      l166 3178  
                    l183 2F0C                      l175 2DBE                      _ADC 00F5  
                    l504 4088                      l169 3192                      l361 3E7E  
                    l186 2F1C                      l178 2E82                      l531 3F84  
                    l348 3D1A                      l508 4AE8                      l465 44B0  
                    l804 49B4                      l821 24DC                      l493 460A  
                    l478 4560                      l830 25C4                      l903 399A  
                    l816 26B8                      l912 483A                      l818 2518  
                    l762 1C24                      l827 255E                      l499 4042  
                    l771 1EF4                      l763 1C12                      l852 231E  
                    l764 1BD8                      l829 25D6                      l855 21B0  
                    l960 43EC                      l848 1FBA                      l865 22E0  
                    l857 2228                      l858 2216                      l955 436E  
                    l779 1D3E                      l892 3A02                      l788 1E0E  
                    l789 1DFC                      l958 43B0                      l966 2A5A  
                    l896 393E                      l968 2A62                      l889 38A6  
                    l986 2C9C                      _RB0 007C08                      _RB1 007C09  
                    _RC0 007C10                      _RB2 007C0A                      _RC1 007C11  
                    _RC2 007C12                      _RB4 007C0C                      _RB5 007C0D  
                    _RC4 007C14                      _RB6 007C0E                      _abs 49FA  
                    _pad 4328             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022              LCD_Char@dat 0008  
           ___fltol@exp1 005A                     l1004 1442                     l1022 0C80  
                   l1202 4AB0                     l1122 466C                     l1123 4674  
                   ?_abs 0013                     l1116 197A                     l1108 1A34  
                   l1141 4A38                     l1133 4186                     l1240 4B56  
                   l1048 1018                     l1217 4326                     l1225 49F8  
                   l1138 4A30                     l1234 478E                     l1091 1538  
                   l1172 3B92                     l1228 4BBC                     l1244 425C  
                   l1181 3792                     l1254 46CC                     l1169 3B8A  
                   l4010 440C                     l4002 43EE                     l1178 384E  
                   l1259 46D4                     l1188 4B20                     l1196 488C  
                   l4020 4440                     l4012 441A                     l4004 43F2  
                   l4100 3FB4                     l4030 447A                     l4022 4448  
                   l4014 4422                     l4006 4400                     l4110 4022  
                   l4102 3FC4                     l5000 30B6                     l4040 44A0  
                   l4032 4482                     l4024 4450                     l4016 4426  
                   l4008 4408                     l4112 4030                     l4104 3FF2  
                   l4120 4AB2                     l4200 40AA                     l5010 30E4  
                   l5002 30CA                     l3410 428C                     l4042 44A8  
                   l4034 4484                     l4026 445E                     l4018 442E  
                   l4050 44C4                     l4114 4080                     l4106 4002  
                   l4122 4AC8                     l4130 3E96                     l4202 40E8  
                   l4210 4128                     l5100 3578                     l5020 3138  
                   l5012 30F8                     l5004 30CE                     l3412 42AA  
                   l3404 425E                     l4300 2A22                     l4036 448A  
                   l4028 4464                     l4060 44F8                     l4052 44CC  
                   l4116 4086                     l4108 4010                     l4124 4AD8  
                   l3500 1BA4                     l3420 1A42                     l4140 3EE6  
                   l4212 413A                     l4204 4110                     l4220 4734  
                   l5110 35B8                     l5102 3584                     l5030 3172  
                   l5022 314C                     l5014 310C                     l5006 30D0  
                   l3414 42E0                     l3406 4270                     l4310 2A7C  
                   l4302 2A32                     l4038 4490                     l4070 4534  
                   l4062 4500                     l4054 44D0                     l4046 44B2  
                   l3510 1BF6                     l3502 1BC0                     l3430 1A82  
                   l3422 1A50                     l4150 3F10                     l4142 3EEA  
                   l4134 3EAA                     l4206 411C                     l4222 4744  
                   l4230 46BE                     l5120 360E                     l5112 35CE  
                   l5104 3588                     l5200 3362                     l5032 317C  
                   l5024 3160                     l5016 3114                     l5008 30D8  
                   l3408 4282                     l4320 2AA8                     l4312 2A8A  
                   l4304 2A34                     l4072 453A                     l4064 4508  
                   l4056 44DE                     l4048 44B6                     l3600 1E94  
                   l3520 1C42                     l3512 1C04                     l3504 1BD0  
                   l3440 1AB4                     l3432 1A84                     l3424 1A52  
                   l4160 3F38                     l4152 3F1A                     l4144 3EF8  
                   l4136 3ED4                     l4128 3E80                     l4216 417E  
                   l4240 36C8                     l4224 4676                     l4400 09FA  
                   l5040 47FC                     l5130 3636                     l5122 3612  
                   l5114 35DC                     l5106 359C                     l5050 33EC  
                   l5210 33B2                     l5202 3366                     l5026 3164  
                   l5018 312A                     l5034 3180                     l4330 2BB4  
                   l4322 2B2A                     l4314 2A90                     l4306 2A4E  
                   l4066 4516                     l4074 4540                     l4058 44E6  
                   l4090 45DE                     l4082 4562                     l3610 1ECE  
                   l3602 1EB4                     l3530 1C82                     l3514 1C06  
                   l3506 1BE6                     l3450 1ADC                     l3442 1AB6  
                   l3426 1A62                     l3434 1A8C                     l3418 1A36  
                   l4162 3F44                     l4154 3F24                     l4138 3ED6  
                   l4242 36D6                     l4250 37B6                     l4234 363E  
                   l4410 0A7E                     l5042 4804                     l5124 361C  
                   l5116 35F0                     l5108 35B0                     l5060 344A  
                   l5052 3400                     l5220 33D4                     l5212 33B6  
                   l5204 337C                     l5140 31DA                     l5132 3194  
                   l5036 3182                     l5028 3166                     l5300 2EA4  
                   l3700 3D52                     l3620 49B6                     l4180 4366  
                   l4172 4328                     l4340 2C28                     l4332 2BD2  
                   l4324 2B30                     l4316 2A98                     l4308 2A6A  
                   l4076 4550                     l4068 452C                     l4092 4602  
                   l4084 4590                     l3612 1ED4                     l3604 1EB8  
                   l3540 1CAC                     l3532 1C8E                     l3524 1C56  
                   l3516 1C10                     l3508 1BF2                     l3460 1B16  
                   l3452 1AEC                     l3444 1ABC                     l3436 1A9C  
                   l3428 1A72                     l4164 3F54                     l4252 37F2  
                   l4236 365E                     l4228 46AC                     l4500 0E86  
                   l4412 0A90                     l4404 0A22                     l5044 480C  
                   l5126 3626                     l5118 3604                     l5070 3488  
                   l5062 345E                     l5054 3414                     l5214 33C0  
                   l5206 338A                     l5150 3216                     l5142 31E8  
                   l5222 33E2                     l5134 31A8                     l5310 2EF8  
                   l5302 2EAC                     l5230 2CC6                     l4262 4AEA  
                   l4270 4854                     l3710 3DBA                     l3702 3D60  
                   l3622 49C2                     l3630 4B2E                     l4190 43D4  
                   l4182 437A                     l4174 4338                     l4350 2C64  
                   l4342 2C38                     l4334 2BEC                     l4326 2B36  
                   l4318 2AA2                     l4078 4558                     l4094 4608  
                   l4086 45A0                     l3614 1EE2                     l3606 1EC6  
                   l3550 1D1E                     l3534 1C92                     l3526 1C66  
                   l3518 1C32                     l3542 1CB2                     l3470 1B42  
                   l3462 1B28                     l3454 1AFC                     l3446 1ACA  
                   l3438 1AA2                     l4166 3F64                     l4254 3806  
                   l4246 3746                     l4238 36B4                     l4510 0F44  
                   l4502 0EBA                     l4430 0B4C                     l4414 0AAC  
                   l4406 0A48                     l4422 0AC8                     l5046 4828  
                   l5038 47EA                     l4280 4932                     l5080 34DC  
                   l5072 349C                     l5064 3466                     l5128 3634  
                   l5056 3426                     l5224 33E4                     l5216 33C2  
                   l5208 339E                     l5160 3264                     l5152 321E  
                   l5144 31FC                     l5136 31BC                     l5320 2F16  
                   l5312 2EFA                     l5304 2EC2                     l5240 2D1A  
                   l5232 2CCE                     l4272 4882                     l3712 3DC8  
                   l3720 3E2E                     l3704 3D80                     l3624 49D4  
                   l3632 4B32                     l4184 438E                     l4176 434C  
                   l4344 2C3E                     l4352 2C74                     l4336 2C06  
                   l4328 2B9A                     l3800 24CC                     l4088 45CE  
                   l3616 1EE4                     l3608 1ECC                     l3560 1D78  
                   l3544 1CD8                     l3552 1D2E                     l3536 1CA0  
                   l3528 1C74                     l3480 1B56                     l3472 1B46  
                   l3464 1B36                     l3456 1AFE                     l3448 1ACC  
                   l4168 3F74                     l4256 382E                     l4248 3782  
                   l4600 12CC                     l4520 0FE0                     l4512 0F5A  
                   l4504 0EC0                     l4432 0B52                     l4440 0C1A  
                   l4424 0AE2                     l4360 08AE                     l5400 27CE  
                   l4290 4954                     l5090 3526                     l5082 34EE  
                   l5074 34A4                     l5066 3470                     l5058 343C  
                   l5218 33CA                     l5170 32A0                     l5162 3272  
                   l5154 3232                     l5146 3210                     l5138 31C4  
                   l5314 2F06                     l5306 2ED0                     l5250 2D36  
                   l5242 2D1E                     l5234 2CE4                     l5226 2C9E  
                   l5330 38CC                     l5322 3852                     l3642 4B88  
                   l4274 4886                     l4266 483C                     l3650 3B98  
                   l3722 3E3E                     l3714 3DF6                     l3706 3D9E  
                   l4194 49FA                     l3626 49D8                     l3634 4B4A  
                   l4186 4392                     l4178 435A                     l4346 2C50  
                   l4338 2C16                     l3810 2516                     l3802 24DA  
                   l3730 232C                     l4098 3F86                     l3570 1DA8  
                   l3562 1D82                     l3554 1D54                     l3546 1D0C  
                   l3538 1CA2                     l3490 1B6A                     l3482 1B5A  
                   l3474 1B4A                     l3466 1B3A                     l3458 1B06  
                   l4258 383E                     l4610 1314                     l4602 12D4  
                   l4530 1098                     l4522 0FF0                     l4514 0F8C  
                   l4506 0EDE                     l4450 0C5A                     l4442 0C2A  
                   l4434 0BAC                     l4370 08FA                     l4362 08BC  
                   l5410 2894                     l5402 27DA                     l4292 4958  
                   l5092 352E                     l5084 34FA                     l5076 34BA  
                   l5068 3474                     l5180 32EE                     l5172 32A8  
                   l5164 3286                     l5156 3246                     l5148 3214  
                   l5316 2F10                     l5308 2EE4                     l5260 2D8A  
                   l5252 2D4A                     l5244 2D28                     l5236 2CF2  
                   l5228 2CB2                     l5340 3926                     l5324 3862  
                   l3644 4BA4                     l4268 4840                     l3660 3BF8  
                   l3652 3BA6                     l3724 3E5E                     l3716 3E16  
                   l3708 3DA6                     l4196 4A14                     l3628 4B22  
                   l4188 43C0                     l4348 2C5C                     l3820 255C  
                   l3812 2528                     l3804 24E6                     l3740 236C  
                   l3732 233A                     l3900 1FCA                     l3580 1DD0  
                   l3572 1DAC                     l3564 1D90                     l3556 1D64  
                   l3548 1D0E                     l3492 1B6E                     l3484 1B5E  
                   l3476 1B4E                     l3468 1B3E                     l4620 136A  
                   l4612 1330                     l4604 12DC                     l4532 10A8  
                   l4540 10E2                     l4524 1004                     l4516 0F9C  
                   l4508 0F12                     l4460 0C9E                     l4452 0C74  
                   l4444 0C2E                     l4436 0BE0                     l4428 0B18  
                   l4380 0940                     l4372 090C                     l4364 08C4  
                   l4356 0894                     l5420 295A                     l5412 2898  
                   l5404 284A                     l4286 493A                     l4278 4926  
                   l5094 3544                     l5086 34FE                     l5078 34C8  
                   l5190 3328                     l5182 32FC                     l5174 32BC  
                   l5166 329A                     l5158 324E                     l5270 2DCC  
                   l5262 2D9E                     l5254 2D5E                     l5246 2D30  
                   l5238 2D06                     l5318 2F14                     l5350 398A  
                   l5342 3928                     l5334 38E0                     l5326 3870  
                   l3670 3C42                     l3662 3BFC                     l3654 3BC6  
                   l3718 3E28                     l4294 29BA                     l3830 25BC  
                   l3814 253E                     l3822 256E                     l3806 2504  
                   l3750 2392                     l3742 236E                     l3734 233C  
                   l3910 2004                     l3902 1FDA                     l3590 1E2A  
                   l3582 1DDE                     l3574 1DBC                     l3566 1D92  
                   l3494 1B72                     l3486 1B62                     l3478 1B52  
                   l4198 408A                     l3638 4A7A                     l4630 13A6  
                   l4622 1370                     l4614 1338                     l4606 12E8  
                   l4550 111C                     l4542 10F4                     l4534 10BA  
                   l4526 1010                     l4518 0FAC                     l4462 0CB0  
                   l4470 0D0E                     l4446 0C40                     l4454 0C8C  
                   l4438 0BE8                     l4382 0944                     l4374 091A  
                   l4366 08E8                     l4358 089E                     l4710 4212  
                   l4702 41BE                     l5422 2978                     l5414 28AC  
                   l5406 285C                     ?_pad 0011                     l4288 493E  
                   l4720 48EE                     l5096 3552                     l5088 3512  
                   l5192 332A                     l5184 3310                     l5176 32D0  
                   l5168 329E                     l5280 2E20                     l5272 2DE0  
                   l5264 2DA8                     l5256 2D66                     l5248 2D34  
                   l5360 39E2                     l5352 39A8                     l5344 3934  
                   l5336 38E8                     l5328 38B6                     l3680 3CB2  
                   l3672 3C50                     l3664 3C08                     l3656 3BCA  
                   l3648 3B94                     l4296 29DA                     l3840 262A  
                   l3824 257C                     l3816 2544                     l3808 2506  
                   l3760 23D2                     l3752 23A0                     l3736 234C  
                   l3744 2376                     l3728 2320                     l3920 2056  
                   l3912 201A                     l3592 1E38                     l3584 1DF4  
                   l3568 1DA0                     l3576 1DBE                     l3488 1B66  
                   l3496 1B76                     l4640 13F8                     l4632 13AC  
                   l4624 1382                     l4608 12EE                     l4616 133E  
                   l4552 1128                     l4544 1102                     l4560 1148  
                   l4536 10CC                     l4528 1034                     l4480 0D4C  
                   l4472 0D16                     l4464 0CCC                     l4448 0C52  
                   l4392 09AA                     l4384 0948                     l4376 092C  
                   l4368 08F2                     l4712 423A                     l4704 41CC  
                   l4800 1574                     l5520 14F8                     l5424 298A  
                   l5416 28C4                     l5408 2882                     l4730 4912  
                   l4722 48F0                     l5098 3566                     l5194 3332  
                   l5186 331A                     l5178 32D8                     l5290 2E5E  
                   l5282 2E34                     l5274 2DE8                     l5266 2DB4  
                   l5258 2D7C                     l5362 39F0                     l5354 39AA  
                   l5346 3970                     l5338 38F4                     l5522 3AC0  
                   l3682 3CC4                     l3674 3C62                     l3666 3C26  
                   l3658 3BD8                     l4298 2A02                     l3850 2694  
                   l3834 25E6                     l3842 262E                     l3826 2580  
                   l3818 254E                     l3770 2412                     l3762 23D4  
                   l3754 23A2                     l3746 2386                     l3738 235C  
                   l3930 209C                     l3922 2064                     l3914 2026  
                   l3906 1FEE                     l3594 1E72                     l3578 1DCC  
                   l3498 1B7A                     l4642 1404                     l4634 13B2  
                   l4626 138E                     l4618 1350                     l4570 11CE  
                   l4562 115A                     l4554 1138                     l4546 1112  
                   l4538 10DA                     l4482 0D5E                     l4490 0D9E  
                   l4474 0D28                     l4466 0D02                     l4394 09BC  
                   l4378 0938                     l4386 094E                     l4706 41E4  
                   l4810 160E                     l4802 1582                     l5418 2948  
                   l5426 298E                     l5370 26BE                     l4732 4914  
                   l4724 48F2                     l4716 48DC                     l4740 48A2  
                   l4900 46FE                     l5196 3346                     l5188 3320  
                   l5292 2E66                     l5284 2E36                     l5276 2DFE  
                   l5268 2DB8                     l5364 39F2                     l5356 39AE  
                   l5348 397C                     l4660 3A20                     l3676 3C90  
                   l3668 3C2E                     l3684 3CCA                     l3692 3D1C  
                   l3852 2698                     l3844 2648                     l3836 25F2  
                   l3828 258E                     l3780 2442                     l3772 241A  
                   l3756 23B2                     l3764 23DC                     l3748 238C  
                   l3940 210A                     l3932 20B6                     l3924 2070  
                   l3916 203E                     l3908 1FFA                     l3588 1E1E  
                   l3596 1E74                     l4644 140C                     l4628 1396  
                   l4580 1248                     l4572 1202                     l4564 116C  
                   l4556 113C                     l4548 1116                     l4492 0DA6  
                   l4484 0D6C                     l4476 0D3A                     l4468 0D0A  
                   l4396 09D8                     l4388 0974                     l4708 4200  
                   l4820 169A                     l4804 15A6                     l5380 26FE  
                   l5372 26DC                     l4734 4916                     l4726 48F4  
                   l4718 48EC                     l4750 48C6                     l4742 48A4  
                   l4902 4702                     l5198 335A                     l5294 2E6E  
                   l5286 2E3A                     l5278 2E0C                     l5358 39D2  
                   l4670 3A7C                     l4662 3A3C                     l4654 3A04  
                   l3686 3CDA                     l3678 3CB0                     l3694 3D20  
                   l3854 26A6                     l3846 265E                     l3838 2600  
                   l3790 2480                     l3782 2442                     l3774 241E  
                   l3766 23EC                     l3758 23C2                     l3950 21A0  
                   l3942 2134                     l3934 20C6                     l3926 2080  
                   l3918 204A                     l3870 1F10                     l3598 1E84  
                   l4646 141C                     l4638 13E6                     l4590 128C  
                   l4582 125A                     l4574 120A                     l4566 1170  
                   l4558 1142                     l4494 0DB6                     l4486 0D84  
                   l4478 0D48                     l4398 09F0                     l4830 1756  
                   l4822 16CC                     l4814 1656                     l4806 15E0  
                   l4910 4650                     l5390 2786                     l5382 2710  
                   l5374 26DE                     l4728 4900                     l4920 4B74  
                   l4912 4B58                     l4752 48C8                     l4744 48A6  
                   l4736 4890                     l5296 2E7A                     l5288 2E4E  
                   l4672 3A92                     l4664 3A72                     l4656 3A18  
                   l3688 3CFA                     l3696 3D2E                     l3856 26AC  
                   l3848 2678                     l3792 2490                     l3768 2402  
                   l3960 21E0                     l3952 21AE                     l3944 216A  
                   l3936 20E2                     l3928 208C                     l3880 1F48  
                   l3872 1F12                     l4648 1422                     l4592 129E  
                   l4584 1268                     l4568 1176                     l4576 120E  
                   l4496 0DCA                     l4488 0D96                     l4840 17FE  
                   l4832 179E                     l4824 16DC                     l4808 1600  
                   l4816 1668                     l4760 1476                     l4904 460C  
                   l5392 278A                     l5384 272A                     l5376 26E8  
                   l5368 26BA                     l4922 4B7A                     l4914 4B5C  
                   l4754 48CA                     l4746 48A8                     l4738 48A0  
                   l4930 4A4C                     l5298 2E90                     l4690 3B6E  
                   l4682 3B0C                     l4674 3A9A                     l4666 3A76  
                   l4658 3A1C                     l3698 3D4E                     l3858 26AE  
                   l3794 24A0                     l3786 2456                     l3778 2432  
                   l3970 2252                     l3962 220E                     l3954 21C0  
                   l3946 2178                     l3938 20EE                     l3890 1F74  
                   l3882 1F58                     l3874 1F22                     l3866 1EF6  
                   l4594 12A6                     l4586 1278                     l4578 122C  
                   l4498 0E2E                     l4850 1896                     l4842 180C  
                   l4826 170E                     l4818 168A                     l4770 14AE  
                   l4762 1488                     l4906 4614                     l5394 27A6  
                   l5386 2744                     l5378 26EC                     l4924 4B80  
                   l4916 4B68                     l4748 48B4                     l4932 4A54  
                   l4940 2F1E                     l4676 3AA2                     l3796 24A8  
                   l3788 2470                     l3980 22C8                     l3972 227C  
                   l3956 21CE                     l3948 2196                     l3892 1F84  
                   l3884 1F5E                     l3876 1F32                     l3868 1F02  
                   l4596 12B6                     l4588 127C                     l4844 183C  
                   l4836 17D6                     l4828 1732                     l4764 148E  
                   l4756 1444                     l4908 4622                     l5396 27AA  
                   l5388 2762                     l4918 4B6E                     l4934 4A5E  
                   l4926 4A3C                     l4950 2F72                     l4942 2F32  
                   l4686 3B4A                     l4678 3AD6                     l3798 24B8  
                   l3982 22E4                     l3990 230A                     l3966 2238  
                   l3974 2280                     l3958 21D2                     l3894 1F94  
                   l3886 1F64                     l3878 1F42                     l4598 12BE  
                   l4870 19D4                     l4854 1904                     l4838 17E8  
                   l4790 14D2                     l4782 14C0                     l4774 14B4  
                   l4766 149A                     l4758 1468                     l5398 27C8  
                   l4936 4A66                     l4928 4A3C                     l4960 2FA8  
                   l4952 2F86                     l4944 2F46                     l4688 3B5C  
                   l3992 230E                     l3984 22F4                     l3976 229A  
                   l3968 2244                     l3896 1FA4                     l3888 1F72  
                   l4696 4188                     l4856 1916                     l4864 198E  
                   l4848 1868                     l4768 149C                     l4792 1526  
                   l4880 19FE                     l4938 4A6C                     l4970 2FE6  
                   l4962 2FAA                     l4954 2F9A                     l4946 2F4E  
                   l3986 2302                     l3978 22AE                     l3898 1FAA  
                   l4698 41B2                     l4882 1A22                     l4866 19B2  
                   l4874 19E2                     l4858 194A                     l4794 1546  
                   l4786 14C6                     l4778 14BA                     l4980 3036  
                   l4972 2FFC                     l4964 2FB6                     l4956 2F9E  
                   l4948 2F64                     l3988 2304                     l3996 4970  
                   l4876 19F0                     l4868 19C0                     l4796 1548  
                   l4894 4BAE                     l4990 3062                     l4982 3038  
                   l4974 300A                     l4966 2FCA                     l4958 2FA0  
                   l3998 4980                     l4798 156C                     l4896 46D6  
                   l4992 3076                     l4984 3040                     l4976 301E  
                   l4968 2FDE                     l4898 46DA                     l4994 307E  
                   l4986 3042                     l4978 3032                     l4996 3094  
                   l4988 304E                     l4998 30A2                     STR_1 0859  
                   STR_2 084B                     STR_3 0815                     STR_4 0801  
                   STR_5 083B                     STR_6 0866                     STR_7 081A  
                   STR_8 0878                     STR_9 0829                     u4000 3CDA  
                   _LATD 000F8C                     u4001 3CD6                     u4010 3D2E  
                   u4011 3D2A                     u4020 3D60                     u4100 23A0  
                   u4021 3D5C                     u4101 239C                     u4030 3D9E  
                   u4110 23B2                     u4031 3D9A                     u4111 23AE  
                   u4040 3DC8                     u4200 255C                     u4120 23C2  
                   u5000 3782                     u4041 3DC4                     u4201 2558  
                   u4121 23BE                     u5001 377E                     u4050 3DF6  
                   u4210 257C                     u4130 2402                     u5010 37D6  
                   u4051 3DF2                     u4211 2578                     u4131 23FE  
                   u4060 3E3E                     u3500 42E0                     u5100 29EA  
                   u4220 258E                     u4140 2442                     u4300 1F10  
                   u5020 37F2                     u4061 3E3A                     u3501 42DC  
                   u5101 29E4                     u4221 258A                     u4141 243E  
                   u4301 1F0C                     u5021 37EE                     u5110 29EC  
                   u4230 25BC                     u4150 24B8                     u4070 233A  
                   u4310 1F22                     u3510 1A50                     u5030 382E  
                   u4231 25B8                     u4151 24B4                     u4071 2336  
                   u4311 1F1E                     u3511 1A4C                     u5031 382A  
                   u5015 37CC                     u5040 4B1A                     u5200 2C06  
                   u5120 2A02                     u4240 25D2                     u4160 24DA  
                   u4080 234C                     u4400 21CE                     u4320 1F32  
                   u3600 1BA4                     u3520 1A62                     u6000 1756  
                   u5041 4B14                     u5201 2C02                     u5121 29FE  
                   u4241 25CE                     u4161 24D6                     u4081 2348  
                   u4401 21CA                     u4321 1F2E                     u3601 1BA0  
                   u3521 1A5E                     u6001 1752                     u5050 4B1C  
                   u5210 2C16                     u5130 2A32                     u4250 25E6  
                   u4170 2504                     u4090 235C                     u4410 21E0  
                   u4330 1F72                     u3610 1BBC                     u3530 1A72  
                   u6010 17E8                     u5211 2C12                     u5131 2A2E  
                   u4251 25E2                     u4171 2500                     u4091 2358  
                   u4411 21DC                     u4331 1F6E                     u3611 1BB6  
                   u3531 1A6E                     u6011 17E4                     u5060 4854  
                   u5220 2C28                     u5140 2A4E                     u4500 441A  
                   u4260 2600                     u4180 2528                     u4420 220E  
                   u4340 1F84                     u3700 1CA0                     u3620 1BBE  
                   u3540 1AB4                     u5300 09A4                     u6020 1896  
                   u6100 466C                     u5061 4850                     u5221 2C24  
                   u5141 2A4A                     u4501 4416                     u4261 25FC  
                   u4181 2524                     u4421 220A                     u4341 1F80  
                   u3701 1C9C                     u3541 1AB0                     u5301 099E  
                   u6021 1892                     u6101 4668                     u6110 4A4C  
                   u5070 4882                     u3470 4270                     u5230 2C38  
                   u5150 2A7C                     u4510 4440                     u4270 2648  
                   u4190 253E                     u4430 2224                     u4350 1F94  
                   u3710 1CD8                     u3630 1BE6                     u3550 1ACA  
                   u5310 09A6                     u6030 18FE                     u6111 4A48  
                   u5071 487E                     u3471 426C                     u5231 2C34  
                   u5151 2A78                     u4511 443C                     u4271 2644  
                   u4191 253A                     u4431 2220                     u4351 1F90  
                   u3711 1CD4                     u3631 1BE2                     u3551 1AC6  
                   u6031 18F8                     u5080 4954                     u6200 3062  
                   u6120 2F32                     u3480 4282                     u5240 2C50  
                   u5160 2A8A                     u4520 445E                     u4600 4550  
                   u4280 2678                     u4440 2238                     u4360 1FCA  
                   u3800 1DF4                     u3720 1D1E                     u3640 1C04  
                   u3560 1ADC                     u5400 0C40                     u5320 09BC  
                   u6040 1900                     u5081 4950                     u6201 305E  
                   u6121 2F2E                     u3481 427E                     u5241 2C4C  
                   u5161 2A86                     u4521 445A                     u4601 454C  
                   u4281 2674                     u4441 2234                     u4361 1FC6  
                   u3801 1DF0                     u3721 1D1A                     u3641 1C00  
                   u3561 1AD8                     u5401 0C3C                     u5321 09B8  
                   u5090 496E                     u6210 3076                     u6130 2F46  
                   u3490 42AA                     u5170 2BB4                     u4530 447A  
                   u4290 26A6                     u4610 4590                     u4450 2252  
                   u4370 1FDA                     u3810 1E0A                     u3730 1D54  
                   u3650 1C24                     u3570 1AEC                     u5410 0C52  
                   u5330 0A48                     u5250 08BC                     u6050 1916  
                   u5091 496A                     u6211 3072                     u6131 2F42  
                   u3491 42A6                     u5171 2BB0                     u4531 4476  
                   u4291 26A2                     u4611 458C                     u4451 224E  
                   u4371 1FD6                     u3811 1E06                     u3731 1D50  
                   u3651 1C20                     u3571 1AE8                     u5411 0C4E  
                   u5331 0A44                     u5251 08B8                     u6051 1912  
                   u6300 344A                     u6220 30A2                     u6140 2F72  
                   u3900 49F8                     u5180 2BD2                     u4540 44A0  
                   u4620 45CE                     u4460 229A                     u4380 2154  
                   u3820 1E1E                     u3740 1D64                     u3660 1C32  
                   u3580 1B28                     u4700 3E96                     u5500 0D5E  
                   u5420 0C74                     u5340 0A78                     u5260 090C  
                   u6060 19B2                     u6301 3446                     u6221 309E  
                   u6141 2F6E                     u3901 49F4                     u5181 2BCE  
                   u4541 449C                     u4621 45CA                     u4461 2296  
                   u3821 1E1A                     u3741 1D60                     u3661 1C2E  
                   u3581 1B24                     u4701 3E92                     u5501 0D5A  
                   u5421 0C70                     u5341 0A72                     u5261 0908  
                   u6061 19AE                     u6070 46FA                     u6310 345E  
                   u6230 30B6                     u6150 2F86                     u3910 4B4A  
                   u5190 2BEC                     u4550 44C4                     u4630 4602  
                   u4470 22C8                     u4390 21AE                     u3830 1E38  
                   u3750 1D90                     u3670 1C42                     u3590 1B36  
                   u4710 3ECA                     u5510 0D6C                     u5430 0C9A  
                   u5350 0A7A                     u5270 091A                     u6311 345A  
                   u6231 30B2                     u6151 2F82                     u7007 2EFC  
                   u3911 4B46                     u5191 2BE8                     u4551 44C0  
                   u4631 45FE                     u4471 22C4                     u4391 21AA  
                   u3831 1E34                     u3751 1D8C                     u3671 1C3E  
                   u3591 1B32                     u5511 0D68                     u5431 0C96  
                   u5271 0916                     u6080 4722                     u6400 359C  
                   u6320 3488                     u6240 30F8                     u6160 2FCA  
                   u4800 43C0                     u4560 44DE                     u4640 3FB4  
                   u4480 2302                     u3840 1E72                     u3760 1DA0  
                   u3680 1C74                     u4720 3EF8                     u3920 4AAA  
                   u5600 10CC                     u5520 0D96                     u5440 0CB0  
                   u5360 0A90                     u5280 092C                     u6401 3598  
                   u6321 3484                     u6241 30F4                     u6161 2FC6  
                   u7017 2F58                     u4801 43BC                     u4561 44DA  
                   u4641 3FB0                     u4481 22FE                     u4385 214A  
                   u3841 1E6E                     u3761 1D9C                     u3681 1C70  
                   u4721 3EF4                     u3921 4AA4                     u5601 10C8  
                   u5521 0D92                     u5441 0CAC                     u5361 0A8C  
                   u5281 0928                     u6090 4732                     u6410 35B0  
                   u6330 349C                     u6250 310C                     u6170 2FDE  
                   u4810 4A14                     u4490 4400                     u4570 44F8  
                   u4650 3FF2                     u3850 1E84                     u3770 1DBC  
                   u3690 1C82                     u4730 3F0C                     u3930 4AAC  
                   u5610 10DA                     u5530 0EDE                     u5450 0CCC  
                   u5370 0B14                     u5290 0974                     u6091 472E  
                   u6411 35AC                     u6331 3498                     u7107 3258  
                   u6251 3108                     u6171 2FDA                     u7027 2FAC  
                   u4811 4A10                     u4491 43FC                     u4571 44F4  
                   u4651 3FEE                     u3851 1E80                     u3771 1DB8  
                   u3691 1C7E                     u4731 3F08                     u4715 3EC0  
                   u5611 10D6                     u5531 0EDA                     u5451 0CC8  
                   u5371 0B10                     u5291 0970                     u6420 35DC  
                   u6340 34C8                     u6500 3272                     u6260 3138  
                   u6180 300A                     u3940 3BA6                     u4580 4516  
                   u4660 4010                     u3860 1E94                     u3780 1DCC  
                   u4740 3F34                     u4820 40CA                     u4900 478E  
                   u5700 12CC                     u5620 10F4                     u5540 0F44  
                   u5460 0D02                     u5380 0BA8                     u6077 46F0  
                   u6421 35D8                     u6341 34C4                     u7117 32E2  
                   u6501 326E                     u6261 3134                     u6181 3006  
                   u7037 2FF0                     u3941 3BA2                     u4581 4512  
                   u4661 400C                     u3861 1E90                     u3781 1DC8  
                   u4741 3F30                     u4901 478A                     u5701 12C8  
                   u5621 10F0                     u5541 0F40                     u5461 0CFE  
                   u5381 0BA4                     u6430 35F0                     u6350 34DC  
                   u6510 3286                     u6270 314C                     u6190 301E  
                   u3950 3BD8                     u4590 452C                     u4670 4030  
                   u3870 1EB4                     u3790 1DDE                     u4750 3F54  
                   u4830 40E8                     u4910 46A6                     u5710 1350  
                   u5630 1102                     u5550 0F8C                     u5470 0D28  
                   u5390 0C1A                     u6087 4718                     u6431 35EC  
                   u6351 34D8                     u7127 3370                     u6511 3282  
                   u6271 3148                     u7047 3044                     u6191 301A  
                   u3951 3BD4                     u4591 4528                     u4671 402C  
                   u3871 1EB0                     u3791 1DDA                     u4751 3F50  
                   u4831 40E4                     u4911 46A0                     u5711 134C  
                   u5631 10FE                     u5551 0F88                     u5471 0D24  
                   u5391 0C16                     u6360 3512                     u6280 3400  
                   u6520 32BC                     u6440 31A8                     u6600 2CB2  
                   u5800 3B44                     u4680 4080                     u3880 1EC6  
                   u4760 3F64                     u4840 4110                     u4920 46A8  
                   u5720 136A                     u5640 115A                     u5560 0F9C  
                   u5480 0D3A                     u6361 350E                     u7137 3430  
                   u6281 33FC                     u6521 32B8                     u6441 31A4  
                   u7057 3088                     u6601 2CAE                     u5801 3B3E  
                   u3961 3C02                     u4681 407C                     u3881 1EC2  
                   u4761 3F60                     u4841 410C                     u4825 40C0  
                   u5721 1366                     u5641 1156                     u5561 0F98  
                   u5481 0D36                     u6370 3526                     u6290 3414  
                   u6530 32D0                     u6450 31BC                     u6610 2CC6  
                   u5810 3B46                     u3970 3C26                     u4770 4338  
                   u4690 4AC8                     u3890 1EE2                     u4850 413A  
                   u4930 46BE                     u5730 1382                     u5650 122C  
                   u5570 1004                     u5490 0D48                     u6371 3522  
                   u7147 34AE                     u6291 3410                     u6531 32CC  
                   u6451 31B8                     u7067 30DA                     u6611 2CC2  
                   u3971 3C22                     u4771 4334                     u4691 4AC4  
                   u3891 1EDE                     u4851 4136                     u4931 46BA  
                   u5731 137E                     u5651 1228                     u5571 1000  
                   u5491 0D44                     u6380 3552                     u6540 32FC  
                   u6460 31E8                     u6700 2E0C                     u6620 2CF2  
                   u5820 3B5C                     u3980 3C50                     u4780 435A  
                   u4940 3686                     u5740 13E0                     u5660 1248  
                   u5580 10A8                     u5900 1538                     u6381 354E  
                   u7157 3538                     u6541 32F8                     u6461 31E4  
                   u7077 311E                     u6701 2E08                     u6621 2CEE  
                   u5821 3B58                     u3981 3C4C                     u4781 4356  
                   u5741 13DA                     u5661 1244                     u5581 10A4  
                   u5901 1534                     u6390 3566                     u6550 3310  
                   u6470 31FC                     u6710 2E20                     u6630 2D06  
                   u5830 3B6E                     u3990 3C90                     u4790 43B0  
                   u4870 4174                     u4950 36B4                     u5750 13E2  
                   u5670 125A                     u5590 10BA                     u5910 1546  
                   u7167 35C2                     u6391 3562                     u6551 330C  
                   u6471 31F8                     u7087 3168                     u6711 2E1C  
                   u6631 2D02                     u5831 3B6A                     u3991 3C8C  
                   u4791 43AC                     u4871 416E                     u4951 36B0  
                   u5671 1256                     u5591 10B6                     u5911 1542  
                   u6560 3346                     u6480 3232                     u6720 2E4E  
                   u6640 2D4A                     u6800 3922                     u4880 4176  
                   u4960 36D6                     u5760 13F8                     u5680 1268  
                   u5840 41B2                     u5920 156C                     u6561 3342  
                   u6481 322E                     u7097 31CE                     u6721 2E4A  
                   u6641 2D46                     u6801 391E                     u4865 414C  
                   u4961 36D2                     u4945 367C                     u5761 13F4  
                   u5681 1264                     u5841 41AE                     u5921 1568  
                   u6570 335A                     u6490 3246                     u6730 2E90  
                   u6650 2D5E                     u6810 396C                     u5770 3A3C  
                   u4890 477C                     u5690 129E                     u5850 41E4  
                   u5930 15A6                     u6571 3356                     u6491 3242  
                   u6731 2E8C                     u6651 2D5A                     u6811 3968  
                   u5771 3A38                     u5691 129A                     u5851 41E0  
                   u5931 15A2                     u6580 338A                     u6740 2EA4  
                   u6660 2D8A                     u6820 398A                     u5780 3A72  
                   u4980 3742                     u5860 4200                     u5940 1650  
                   u6900 28C4                     u6581 3386                     u6741 2EA0  
                   u6661 2D86                     u6821 3986                     u5781 3A6E  
                   u4981 373E                     u5861 41FC                     u5941 164A  
                   u6901 28C0                     u6590 339E                     u6750 2ED0  
                   u6670 2D9E                     u6830 399A                     u5790 3A8E  
                   u4990 3766                     u5870 4212                     u5950 1652  
                   u6910 29A4                     u6591 339A                     u6751 2ECC  
                   u6671 2D9A                     u6831 3996                     u5791 3A8A  
                   u4975 36EA                     u5871 420E                     u6911 29A0  
                   u6760 2EE4                     u6680 2DCC                     u6840 39A8  
                   u4976 36F4                     u5880 423A                     u5960 1668  
                   u6920 29B2                     u6761 2EE0                     u6681 2DC8  
                   u6841 39A4                     u4977 3704                     u4897 4772  
                   u5881 4236                     u5961 1664                     u6921 29AE  
                   u6690 2DE0                     u6850 39E2                     u6770 3862  
                   u5970 169A                     u5890 1468                     u6691 2DDC  
                   u6851 39DE                     u6771 385E                     u4995 375C  
                   u5971 1696                     u5891 1464                     u6860 39F0  
                   u6780 3870                     u5980 16DC                     u6861 39EC  
                   u6781 386C                     u5981 16D8                     u6790 38CC  
                   u5990 1732                     u6870 27A6                     u6791 38C8  
                   u5991 172E                     u6871 27A2                     u6880 27C0  
                   u6881 27BC                     u6937 271C                     u6890 28AC  
                   u6891 28A8                     u6947 2736                     u6957 2750  
                   u6967 2CD8                     u6977 2D70                     u6987 2DF2  
                   u6997 2EB6                     abs@a 0013                     _dbuf 011A  
                   _atoi 3A04                     _main 26BA                     _dtoa 29BA  
     __size_of_LCD_Clear 0008                     _prec 00EF                     _temp 010C  
                   _nout 0110                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     _volt 0108            ___fpclassifyf 408A  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        __end_of_MSdelay 4970          ___fldiv@new_exp 0039            _LCD_String_xy 4A3A  
           _tolower$1089 000D             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0017         __end_of_LCD_Char 48DA         __end_of_LCD_Init 4B88  
          ___fltol@sign1 0059          __end_of___aodiv 3D1C                    ?_atoi 0008  
        __end_of___fladd 1EF6                    ?_main 0001                    ?_dtoa 001C  
        __end_of___aomod 3E80          __end_of___fldiv 26BA          __end_of___awdiv 44B2  
        __end_of___flneg 4AEA                    STR_10 0890                    STR_11 0872  
                  STR_20 088D                    STR_12 087D                    STR_13 0885  
                  STR_22 088D                    STR_16 0881                    STR_17 0889  
        __end_of___awmod 4562          __end_of___flmul 2320          __end_of___flsub 49B6  
        __end_of___fltol 3F86          ___awdiv@divisor 0003                    _LATD2 007C62  
                  _LATD3 007C63          ___awdiv@counter 0005             vfpfcnvrt@fmt 00A1  
                  _TRISA 000F92                    _TRISC 000F94                    _TRISD 000F95  
                  _flags 00F1                    _fputc 425E                    _fputs 49B6  
        __end_of_isdigit 4B22                    _temp2 0114                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008                    _width 0112  
                  _putch 4BBC                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032          __end_of_isspace 488E          __end_of_isupper 4AB2  
                  tablat 000FF5                    status 000FD8      __size_of_LCD_String 005E  
        __end_of_sprintf 483C           ?___fpclassifyf 0001          __end_of_tolower 46D6  
        __end_of_strncmp 425E           ?_LCD_String_xy 000B          __initialization 4790  
           __end_of_atoi 3B94             __end_of_main 29BA             __end_of_dtoa 2C9E  
                 ??_atoi 000A                   ??_main 00D9                   ??_dtoa 0026  
      __end_of_LCD_Clear 4BB6            __activetblptr 000002                   _ADCON0 000FC2  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   ?_putch 0001  
       LCD_String_xy@msg 000C         LCD_String_xy@pos 000B         LCD_String_xy@row 000E  
              ??_MSdelay 0003                   _OSCCON 000FD3            vfpfcnvrt@done 00B1  
       __end_of___xxtofl 3A04             vfprintf@cfmt 00C5                   ___flge 3F86  
                 ___fleq 4562                ??___aodiv 0011                ??___fladd 0049  
              ??___aomod 0011                   ___wmul 4B88                ??___fldiv 0030  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 0059                ??___fltol 0055  
     __size_of_Secuence1 0252       __size_of_Secuence2 0258       __size_of_Secuence3 0276  
     __size_of_Secuence4 0280                   _efgtoa 0894                   _floorf 363E  
                 clear_0 47CE                   clear_1 47DA         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
   __size_of_LCD_Command 004C                   dtoa@fp 001C                   _strcpy 4734  
                 _strlen 4B22                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 4676                ??_sprintf 0060  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 47E0                ?_LCD_Init 0001          ??_LCD_String_xy 000E  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0051  
         __pcstackCOMRAM 0001             __pidataBANK0 4BBA             __pidataBANK1 4BB6  
          __end_of_fputc 4328            __end_of_fputs 49FA            __end_of_putch 4BBE  
           ??_LCD_String 000B                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001        __end_of_Secuence1 363E        __end_of_Secuence2 33EC  
      __end_of_Secuence3 3194        __end_of_Secuence4 2F1E               __pbssBANK0 00EF  
             __pbssBANK1 0100               ??_LCD_Char 0007               ??_LCD_Init 0009  
     __end_of_LCD_String 4734               _efgtoa$933 006F               _efgtoa$928 006B  
             _efgtoa$937 0071               _efgtoa$929 006D               _efgtoa$938 0073  
             _efgtoa$939 0075                  ?___flge 0028                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 0060                  ?_floorf 0041  
                ?_strcpy 0001                  ?_strlen 0001                ?___xxtofl 0001  
     __size_of_vfpfcnvrt 05F2                  _MSdelay 4926            LCD_String@msg 0009  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0104  
        __size_of___fleq 00AA                  ___aodiv 3B94                  ___fladd 1A36  
                ___aomod 3D1C                  ___fldiv 2320                  ___awdiv 43EE  
                ___flneg 4AB2                  ___awmod 44B2                  ___flmul 1EF6  
                ___flsub 4970                  ___fltol 3E80          __size_of___wmul 0026  
     main@Total_distance 00DB                ?_vfprintf 00BF             __psmallconst 0800  
        __size_of_efgtoa 0BB0          __size_of_floorf 0212                  __pcinit 4790  
                __ramtop 0800                  __ptext0 26BA                  __ptext1 47EA  
                __ptext2 460C                  __ptext3 1444                  __ptext4 4188  
                __ptext5 0894                  __ptext6 4676                  __ptext7 4A7A  
                __ptext8 4734                  __ptext9 363E          __size_of_strcpy 005C  
        __size_of_strlen 0036             __size_of_abs 0040             __size_of_pad 00C6  
             _duty_cicle 0118                  _isdigit 4AEA               ??___xxtofl 0005  
       ___awmod@dividend 0001                  _isspace 483C                  _isupper 4A7A  
                efgtoa@c 0066                  efgtoa@d 007F                  efgtoa@e 0097  
                efgtoa@f 0062                  efgtoa@g 0093                  efgtoa@h 0089  
                efgtoa@i 0091                  efgtoa@l 008D                  efgtoa@m 007B  
                efgtoa@n 0099                  efgtoa@p 0083                  efgtoa@t 0077  
                efgtoa@u 009B                  efgtoa@w 0086                _LCD_Clear 4BAE  
                atoi@neg 000E                  _sprintf 47EA                  _tolower 4676  
                _strncmp 4188     end_of_initialization 47E0                  floorf@e 004F  
                floorf@m 004B                  floorf@u 0051                  floorf@x 0041  
                fputc@fp 0003           LCD_Command@cmd 0008            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 1A36               efgtoa@mode 0088  
             efgtoa@sign 0081                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0060                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001              ___fladd@grs 0050  
          ___xxtofl@sign 0009                _TRISBbits 000F93               ?_LCD_Clear 0001  
            ___fldiv@grs 003B              ___fldiv@rem 0034              ___flmul@grs 001C  
      __size_of_LCD_Char 004C        __size_of_LCD_Init 0030            ??_LCD_Command 0007  
         __end_of___flge 408A           __end_of___fleq 460C              vfpfcnvrt@ap 00A3  
            vfpfcnvrt@ct 00BB              vfpfcnvrt@fp 009F              vfpfcnvrt@ll 00A9  
         __end_of___wmul 4BAE           __end_of_efgtoa 1444           __end_of_floorf 3850  
             floorf@F524 0100           __end_of_strcpy 4790           __end_of_strlen 4B58  
    start_initialization 4790              __end_of_abs 4A3A              __end_of_pad 43EE  
  __end_of___fpclassifyf 4188                _Secuence1 33EC                _Secuence2 3194  
              _Secuence3 2F1E                _Secuence4 2C9E    __end_of_LCD_String_xy 4A7A  
            vfprintf@fmt 00C1                 ??___flge 0030                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 005B              __pdataBANK0 00FB  
            __pdataBANK1 016A                 ??_floorf 0045                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0045                ___fladd@b 0041  
              ___fldiv@a 002C                ___fldiv@b 0028      __end_of_LCD_Command 4926  
              ___flmul@a 0013                ___flmul@b 000F                ___flsub@a 0055  
              ___flsub@b 0051            __pcstackBANK0 0060         ___aodiv@dividend 0001  
            ??_LCD_Clear 0009        __size_of___xxtofl 01B4                 ?_MSdelay 0001  
             ?_Secuence1 0001               ?_Secuence2 0001               ?_Secuence3 0001  
             ?_Secuence4 0001                 ?___aodiv 0001                 ?___fladd 0041  
               ?___aomod 0001                 ?___fldiv 0028                 ?___awdiv 0001  
       ___aodiv@quotient 0013                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0051                 ?___fltol 0051  
      __size_of_vfprintf 006A              __smallconst 0800                 ?_isdigit 0001  
               ?_isspace 0001                 ?_isupper 0001    LCD_String_xy@location 000F  
               ?_sprintf 00C7                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
               MSdelay@i 0003                 MSdelay@j 0005                 _LCD_Char 488E  
               _LCD_Init 4B58           ___wmul@product 0005              _LCD_Command 48DA  
              _vfpfcnvrt 1444               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0001             _isspace$1025 0007  
             vfpfcnvrt@c 00BE               vfpfcnvrt@f 00B7                copy_data0 47A4  
       __size_of_MSdelay 004A              ??_Secuence1 0001              ??_Secuence2 0009  
            ??_Secuence3 0001              ??_Secuence4 0009                 __Hrparam 0000  
             vfprintf@ap 00C3                 __Lrparam 0000               vfprintf@fp 00BF  
       __size_of___aodiv 0188         __size_of___fladd 04C0         __size_of___aomod 0164  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106               ?_vfpfcnvrt 009F          ___aodiv@divisor 0009  
        ___aodiv@counter 0011       ___fpclassifyf@F463 0104               sprintf@fmt 00C9  
               ___xxtofl 3850                 _atoi$994 0010                 _atoi$995 0014  
               _atoi$996 0012         __size_of_isdigit 0038                 _dtoa$904 002E  
       __size_of_isspace 0052                 __ptext10 408A                 __ptext11 3E80  
               __ptext20 43EE                 __ptext12 4970                 __ptext21 29BA  
               __ptext13 1A36                 __ptext30 3A04                 __ptext22 4328  
               __ptext14 4AB2                 __ptext31 483C                 __ptext23 4B22  
               __ptext15 1EF6                 __ptext40 4A3A                 __ptext32 4AEA  
               __ptext24 49B6                 __ptext16 3F86                 __ptext41 46D6  
               __ptext33 4B88                 __ptext25 425E                 __ptext17 4562  
               __ptext42 488E                 __ptext34 3850                 __ptext26 4BBC  
               __ptext18 2320                 __ptext43 4B58                 __ptext35 2C9E  
               __ptext27 49FA                 __ptext19 44B2                 __ptext44 48DA  
               __ptext36 2F1E                 __ptext28 3D1C                 __ptext45 4926  
               __ptext37 3194                 __ptext29 3B94                 __ptext38 4BAE  
               __ptext39 33EC         __size_of_isupper 0038         __size_of_sprintf 0052  
       __size_of_tolower 0060               strcpy@dest 0001         __size_of_strncmp 00D6  
          __size_of_atoi 0190            __size_of_main 0300            __size_of_dtoa 02E4  
             MSdelay@val 0001                 efgtoa@fp 0060                 efgtoa@ne 007D  
               efgtoa@pp 0079                 efgtoa@ou 0067                 _vfprintf 460C  
             _LCD_String 46D6         ___aomod@dividend 0001                 isdigit@c 0001  
              sprintf@ap 00D1                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 0085          ___aomod@divisor 0009              ??_vfpfcnvrt 00A5  
        ___aomod@counter 0011            _vfpfcnvrt$953 00B3            _vfpfcnvrt$958 00B5  
               sprintf@f 00D3                 tolower@c 0007                 sprintf@s 00C7  
 __size_of___fpclassifyf 00FE                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A   __size_of_LCD_String_xy 0040            ___fladd@signs 004D  
           ___aodiv@sign 0012             ___fladd@aexp 004E             ___fladd@bexp 004F  
           ___aomod@sign 0012  
